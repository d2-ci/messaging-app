{"version":3,"sources":["D2App/components/App/App.module.css","D2App/styles/theme.js","D2App/constants/actions.js","D2App/constants/development.js","D2App/utils/helpers.js","D2App/utils/createRecipientSearchQuery.js","D2App/api/api.js","D2App/actions/index.js","D2App/components/Common/CustomSnackBar.js","D2App/utils/history.js","D2App/components/Attachments/Attachments.js","D2App/components/MessageConversation/Message.js","D2App/components/Attachments/AttachmentUploadButton.js","D2App/components/MessageConversation/ReplyCard.js","D2App/components/Common/SuggestionField.js","D2App/components/Common/ExtendedChoiceLabel.js","D2App/styles/messageConversationStyles.js","D2App/components/MessageConversation/MessageConversation.js","D2App/components/List/MessageTypeItem.js","D2App/components/List/SidebarList.js","D2App/styles/style.js","D2App/components/List/ListItemHeader.js","D2App/components/List/MessageConversationListItem.js","D2App/components/List/MessageConversationList.js","D2App/components/MessageConversation/CreateMessage.js","D2App/constants/extendedChoices.js","D2App/components/Common/DialogWithReduxState.js","D2App/components/Common/AssignToDialog.js","D2App/components/Common/ToolbarExtendedChoicePicker.js","D2App/components/Common/Toolbar.js","D2App/components/MessagingCenter/MessagingCenter.js","D2App/components/App/Routes.js","D2App/components/App/App.js","D2App/constants/messageTypes.js","D2App/reducers/messageReducer.js","D2App/store.js","D2App/components/App/AppWrapper.js"],"names":["module","exports","getMuiTheme","palette","negative","pinkA200","blue50","primary1Color","primary2Color","blue100","primary3Color","blue300","primary4Color","blue500","accent1Color","grey50","accent2Color","grey100","accent3Color","grey300","accent4Color","grey500","followUp","orange500","darkGray","grey700","superDarkGray","grey900","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","clockCircleColor","fade","shadowColor","fullBlack","SET_CURRENT_USER","SET_CURRENT_USER_SUCCESS","SET_CURRENT_USER_ERROR","LOAD_MESSAGE_CONVERSATIONS","MESSAGE_CONVERSATIONS_LOAD_SUCCESS","MESSAGE_CONVERSATIONS_DELETE_SUCCESS","MESSAGE_CONVERSATIONS_DELETE_ERROR","MESSAGE_CONVERSATION_UPDATE_SUCCESS","MESSAGE_CONVERSATION_UPDATE_ERROR","SEND_MESSAGE_SUCCESS","SEND_MESSAGE_ERROR","SET_FILTER","DISPLAY_SNACK_MESSAGE","CLEAR_SNACK_MESSAGE","SET_CHECKED","SET_ALL_CHECKED","CLEAR_CHECKED","SET_SELECTED_MESSAGE_TYPE","CLEAR_SELECTED_MESSAGE_CONVERSATION","SET_SELECTED_MESSAGE_CONVERSATION","SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS","UPDATE_INPUT_FIELDS","SET_IN_FEEDBACK_RECIPIENT_GROUP","SET_DISPLAY_TIME_DIFF_SUCCESS","ADD_RECIPIENT_BY_ID_SUCCESS","ADD_ATTACHMENT","ADD_ATTACHMENT_SUCCESS","ADD_ATTACHMENT_ERROR","REMOVE_ATTACHMENT","CLEAR_ATTACHMENTS","CANCEL_ATTACHMENT","SET_DHIS2_CORE_VERSION","fontFamily","NEUTRAL","POSITIVE","NEGATIVE","findIndexOfId","list","id","len","length","index","debounce","fn","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","supportsAttachments","dhis2CoreVersion","createOrganisationUnitQuery","searchValue","resource","params","fields","pageSize","filter","createUserGroupQuery","initialMessageConversationFields","messageConversationFields","engine","getMessageConversations","async","messageType","page","messageFilter","status","priority","assignedToMeFilter","markedForFollowUpFilter","unreadFilter","currentUser","push","query","order","queryString","messageConversations","updateMessageConversationAssignee","messageConversationId","value","mutation","type","userId","mutate","searchRecipients","searchOnlyUsers","searchOnlyFeedbackRecipients","feedbackRecipientsId","userQuery","supportsUserLookupEndPoint","resouce","createUserQuery","users","organisationUnits","userGroups","createRecipientSearchQuery","results","addRecipients","data","createAction","payload","setSelectedMessageConversation","messageConversation","dispatch","actions","result","api","error","loadMessageConversations","selectedMessageType","loadMore","getState","promises","state","statusFilter","priorityFilter","messaging","i","promise","then","pager","Promise","all","nrOfUnread","total","reduce","accumulated","r","concat","markMessageConversations","mode","markedConversations","markedReadConversations","markedUnreadConversations","addAttachment","attachment","domain","file","response","fileResource","name","contentLength","clearCheckedIds","clearSelectedMessageConversation","displaySnackMessage","message","onSnackActionClick","onSnackRequestClose","snackType","setFilter","filterType","updateInputFields","subject","input","recipients","clearAttachments","setSelectedMessageType","messageTypeId","removeAttachment","attachmentId","cancelAttachment","attachmentName","contentColorStyle","theme","CustomSnackBar","Component","constructor","props","super","closeMessage","clearSnackMessage","setState","show","componentDidUpdate","_prevProps","prevState","render","open","autoHideDuration","onRequestClose","action","onActionClick","contentStyle","color","style","pointerEvents","whiteSpace","bodyStyle","maxWidth","compose","connect","snackMessage","pure","createHashHistory","Attachment","dataDirection","downloadAttachment","className","backgroundColor","label","parseFloat","parseInt","toFixed","labelPosition","onClick","loading","icon","Attachments","attachments","map","styles","canvas","padding","innerCanvas","margin","paddingBottom","cardText","wordBreak","fromFormat","datePlacement","display","justifyContent","marginRight","dateFormat","overflow","textOverflow","Message","displayTimeDiff","lastMessage","enableAttachments","fromTitle","sender","displayName","today","moment","messageDate","created","add","internal","i18n","t","placement","diff","from","format","year","paddingLeft","text","createHandleChange","event","files","target","AttachmentUploadButton","containerElement","onChange","ReplyCard","replyMessage","internalReply","selectedMessageConversation","wipeInput","inputError","texFieldUpdate","newValue","handleDiscard","discardState","expanded","componentWillUnmount","Card","marginTop","rows","underlineShow","multiLine","fullWidth","floatingLabelText","primary","disabled","isInFeedbackRecipientGroup","messageTypes","SuggestionField","searchResult","lastSearch","errorText","undefined","debouncedSearch","search","bind","onSuggestionClick","chip","find","recipient","updateRecipients","onRemoveChip","updateInput","addType","internalSearchResult","searchWarning","height","inputHeight","marginBottom","openOnFocus","searchText","dataSource","dataSourceConfig","onUpdateInput","onRequestAdd","onRequestDelete","subheaderTitle","paddingRight","subheader","fontWeight","ExtendedChoiceLabel","showTitle","title","displayLabel","charAt","toLowerCase","substr","flex","overflowY","overflowX","paddingTop","flexDirection","header","iconButton","alignSelf","subjectSubheader","fontSize","participantsCanvas","participants","flexWrap","participantAddRow","participantsSuggestionField","participantsAdd","messagesCanvas","messagesInnerCanvas","NOTIFICATIONS","MessageConversation","backToList","history","cursor","messages","notification","indexOf","userMessages","slice","userMessage","recipientsExpanded","user","userMessagesLength","tooltipPosition","tooltip","displayExtendedChoices","assignee","participant","limitSearchArray","messageId","filePath","link","baseUrl","apiPath","join","document","createElement","href","download","split","pop","body","appendChild","click","removeChild","MessageTypeItem","onMouseEnter","setHoverText","onMouseLeave","setNeutralText","setTextColor","getBackgroundColor","selectedValue","role","alignItems","marginLeft","size","unread","badgeContent","secondary","badgeStyle","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","minWidth","SidebarList","match","List","width","refreshTimer","toggled","autoRefresh","onToggle","setAutoRefresh","messagePanelContainer","transition","boxSizing","position","boxShadow","borderBottom","checkBox","extendedLabel","MessageConversationListItem","allChecked","checkedIds","checked","onCheck","setAllChecked","child","messageConversationIds","container","wideview","flag","fontColor","flexBasis","textAlign","read","lastSender","x","containerBackgroundColor","innerText","settingSelectedMessageConversation","setChecked","MessageConversationList","onScroll","messageList","getElementById","isBottom","loaded","debouncedOnScroll","el","scrollHeight","scrollTop","window","outerHeight","Array","isArray","lookup","Set","item","has","dedupeById","ListItemHeader","messageTypeField","CreateMessage","subjectUpdate","inputUpdate","sendMessage","isMessageFeedback","sendFeedbackMessage","componentDidMount","addRecipientByUserId","recipientId","discardDisabled","console","extendedChoices","STATUS","key","primaryText","PRIORITY","DialogWithReduxState","Consumer","ctx","store","children","AssignToDialog","updateMessageConversations","nrSelected","ToolbarExtendedChoicePicker","getIds","updateMessageConversation","identifier","ids","toggleDialog","dialogOpen","checkedItems","assignToOpen","multiSelect","actionButtons","keyboardFocused","deleteMessageConversations","displayNumberOfCheckedIds","modal","iconButtonElement","anchorOrigin","horizontal","vertical","targetOrigin","rightIcon","menuItems","elem","currentUserId","messageConversationStatus","messageConversationPriority","log","checkedOptions","zIndex","checkedOption","filterControl","rightHandCanvas","ie11Spacer","flexGrow","iconMenu","Toolbar","lastMessageFilter","prevProps","displaySearch","labelStyle","top","selectedMenuItemStyle","floatingLabelStyle","iconStyle","hintText","menuStyle","toogleWideview","EXTENDED_CHOICES","refreshTimerTotal","refreshTimerInterval","MessagingCenter","intervalId","clearInterval","setInterval","tick","refresh","selectedId","initialMessageConversation","configuration","feedbackRecipients","authorized","authorities","includes","some","setIsInFeedbackRecipientGroup","setDisplayTimeDiff","drawerOpen","disableLink","serverDate","systemInfo","Routes","exact","path","component","to","setCurrentUser","setDhis2CoreVersion","version","serverVersion","useConfig","useEffect","minor","classes","center","cx","initialState","messageReducer","stateMessageTypes","oldAttachments","replaceMessageType","splice","element","selectedMessageConversations","loadingMessageType","middlewares","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","combineReducers","createStore","applyMiddleware","AppWrapper","useDataEngine","muiTheme"],"mappings":"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","file":"static/js/app.68c4da3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"App_center__1snml\",\"error\":\"App_error__1usCm\"};","import getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport { fade } from 'material-ui/utils/colorManipulator';\nimport { blue50, blue100, blue300, blue500, pinkA200, grey50, grey100, grey300, grey500, grey700, grey900, orange500, white, darkBlack, fullBlack } from 'material-ui/styles/colors';\nexport default getMuiTheme({\n  palette: {\n    negative: pinkA200,\n    blue50,\n    primary1Color: '#1D8BF1',\n    primary2Color: blue100,\n    primary3Color: blue300,\n    primary4Color: blue500,\n    accent1Color: grey50,\n    accent2Color: grey100,\n    accent3Color: grey300,\n    accent4Color: grey500,\n    followUp: orange500,\n    darkGray: grey700,\n    superDarkGray: grey900,\n    textColor: darkBlack,\n    alternateTextColor: white,\n    canvasColor: white,\n    borderColor: grey300,\n    clockCircleColor: fade(darkBlack, 0.07),\n    shadowColor: fullBlack\n  }\n});","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const SET_CURRENT_USER_SUCCESS = 'SET_CURRENT_USER_SUCCESS';\nexport const SET_CURRENT_USER_ERROR = 'SET_CURRENT_USER_ERROR';\nexport const LOAD_MESSAGE_CONVERSATIONS = 'LOAD_MESSAGE_CONVERSATIONS';\nexport const LOAD_MORE_MESSAGE_CONVERSATIONS = 'LOAD_MORE_MESSAGE_CONVERSATIONS';\nexport const MESSAGE_CONVERSATIONS_LOAD_SUCCESS = 'MESSAGE_CONVERSATIONS_LOAD_SUCCESS';\nexport const MESSAGE_CONVERSATIONS_LOAD_ERROR = 'MESSAGE_CONVERSATIONS_LOAD_ERROR';\nexport const DELETE_MESSAGE_CONVERSATIONS = 'DELETE_MESSAGE_CONVERSATIONS';\nexport const MESSAGE_CONVERSATIONS_DELETE_SUCCESS = 'MESSAGE_CONVERSATIONS_DELETE_SUCCESS';\nexport const MESSAGE_CONVERSATIONS_DELETE_ERROR = 'MESSAGE_CONVERSATIONS_DELETE_ERROR';\nexport const UPDATE_MESSAGE_CONVERSATIONS = 'UPDATE_MESSAGE_CONVERSATIONS';\nexport const MESSAGE_CONVERSATION_UPDATE_SUCCESS = 'MESSAGE_CONVERSATION_UPDATE_SUCCESS';\nexport const MESSAGE_CONVERSATION_UPDATE_ERROR = 'MESSAGE_CONVERSATION_UPDATE_ERROR';\nexport const MARK_MESSAGE_CONVERSATIONS = 'MARK_MESSAGE_CONVERSATIONS';\nexport const MARK_MESSAGE_CONVERSATIONS_SUCCESS = 'MARK_MESSAGE_CONVERSATIONS_SUCCESS';\nexport const MARK_MESSAGE_CONVERSATIONS_ERROR = 'MARK_MESSAGE_CONVERSATIONS_ERROR';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\nexport const SEND_MESSAGE_ERROR = 'SEND_MESSAGE_ERROR';\nexport const SEND_FEEDBACK_MESSAGE = 'SEND_FEEDBACK_MESSAGE';\nexport const REPLY_MESSAGE = 'REPLY_MESSAGE';\nexport const REPLY_MESSAGE_SUCCESS = 'REPLY_MESSAGE_SUCCESS';\nexport const REPLY_MESSAGE_ERROR = 'REPLY_MESSAGE_ERROR';\nexport const SET_FILTER = 'SET_FILTER';\nexport const DISPLAY_SNACK_MESSAGE = 'DISPLAY_SNACK_MESSAGE;';\nexport const CLEAR_SNACK_MESSAGE = 'CLEAR_SNACK_MESSAGE';\nexport const SET_CHECKED = 'SET_CHECKED';\nexport const SET_ALL_CHECKED = 'SET_ALL_CHECKED';\nexport const CLEAR_CHECKED = 'CLEAR_CHECKED';\nexport const SET_SELECTED_MESSAGE_TYPE = 'SET_SELECTED_MESSAGE_TYPE';\nexport const CLEAR_SELECTED_MESSAGE_CONVERSATION = 'CLEAR_SELECTED_MESSAGE_CONVERSATION';\nexport const SET_SELECTED_MESSAGE_CONVERSATION = 'SET_SELECTED_MESSAGE_CONVERSATION';\nexport const SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS = 'SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS';\nexport const SET_SELECTED_MESSAGE_CONVERSATION_ERROR = 'SET_SELECTED_MESSAGE_CONVERSATION_ERROR';\nexport const UPDATE_INPUT_FIELDS = 'UPDATE_INPUT_FIELDS';\nexport const SET_IN_FEEDBACK_RECIPIENT_GROUP = 'SET_IN_FEEDBACK_RECIPIENT_GROUP';\nexport const SET_DISPLAY_TIME_DIFF = 'SET_DISPLAY_TIME_DIFF';\nexport const SET_DISPLAY_TIME_DIFF_SUCCESS = 'SET_DISPLAY_TIME_DIFF_SUCCESS';\nexport const SET_DISPLAY_TIME_DIFF_ERROR = 'SET_DISPLAY_TIME_DIFF_ERROR';\n/* Recipient actions */\n\nexport const RECIPIENT_SEARCH = 'RECIPIENT_SEARCH';\nexport const RECIPIENT_SEARCH_SUCCESS = 'RECIPIENT_SEARCH_SUCCESS';\nexport const RECIPIENT_SEARCH_ERROR = 'RECIPIENT_SEARCH_ERROR';\nexport const ADD_RECIPIENTS = 'ADD_RECIPIENTS';\nexport const ADD_RECIPIENTS_SUCCESS = 'ADD_RECIPIENTS_SUCCESS';\nexport const ADD_RECIPIENTS_ERROR = 'ADD_RECIPIENTS_ERROR';\nexport const ADD_RECIPIENT_BY_ID_SUCCESS = 'ADD_RECIPIENT_BY_ID_SUCCESS';\n/* Attachments */\n\nexport const ADD_ATTACHMENT = 'ADD_ATTACHMENT';\nexport const ADD_ATTACHMENT_SUCCESS = 'ADD_ATTACHMENT_SUCCESS';\nexport const ADD_ATTACHMENT_ERROR = 'ADD_ATTACHMENT_ERROR';\nexport const DOWNLOAD_ATTACHMENT = 'DOWNLOAD_ATTACHMENT';\nexport const DOWNLOAD_ATTACHMENT_SUCCESS = 'DOWNLOAD_ATTACHMENT_SUCCESS';\nexport const DOWNLOAD_ATTACHMENT_ERROR = 'DOWNLOAD_ATTACHMENT_ERROR';\nexport const REMOVE_ATTACHMENT = 'REMOVE_ATTACHMENT';\nexport const CLEAR_ATTACHMENTS = 'CLEAR_ATTACHMENTS';\nexport const CANCEL_ATTACHMENT = 'CANCEL_ATTACHMENT';\n/* DHIS2 CORE VERSION */\n\nexport const SET_DHIS2_CORE_VERSION = 'SET_DHIS2_CORE_VERSION';","export const pageSize = 35;\nexport const fontFamily = 'Roboto, Helvetica, Arial, sans-serif';\nexport const NEUTRAL = 'NEUTRAL';\nexport const POSITIVE = 'POSITIVE';\nexport const NEGATIVE = 'NEGATIVE';","export function dedupeById(list) {\n  if (!Array.isArray(list)) {\n    return undefined;\n  }\n\n  const lookup = new Set();\n  return list.filter(item => {\n    if (lookup.has(item.id)) {\n      return false;\n    }\n\n    lookup.add(item.id);\n    return true;\n  });\n}\nexport function findIndexOfId(list, id) {\n  const len = list.length;\n\n  for (let index = 0; index < len; index++) {\n    if (list[index].id === id) {\n      return index;\n    }\n  }\n\n  return undefined;\n}\nexport function debounce(fn, delay) {\n  let timer = null;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\nexport function supportsAttachments(dhis2CoreVersion) {\n  return dhis2CoreVersion > 30;\n}\nexport function supportsUserLookupEndPoint(dhis2CoreVersion) {\n  return dhis2CoreVersion > 34;\n}","import { supportsUserLookupEndPoint } from './helpers.js';\nconst MAX_RECIPIENT = 10;\n\nfunction createUserQuery({\n  searchValue,\n  searchOnlyFeedbackRecipients,\n  feedbackRecipientsId,\n  dhis2CoreVersion\n}) {\n  if (supportsUserLookupEndPoint(dhis2CoreVersion)) {\n    // version >= v2.35\n    return {\n      resource: searchOnlyFeedbackRecipients ? 'userLookup/feedbackRecipients' : 'userLookup',\n      params: {\n        query: searchValue\n      }\n    };\n  } else {\n    // version < 2.35\n    const filter = [`displayName:token:${searchValue}`];\n\n    if (searchOnlyFeedbackRecipients) {\n      filter.push(`userGroups.id:eq:${feedbackRecipientsId}`);\n    }\n\n    return {\n      resouce: 'users',\n      params: {\n        filter,\n        pageSize: MAX_RECIPIENT\n      }\n    };\n  }\n}\n\nfunction createOrganisationUnitQuery(searchValue) {\n  return {\n    resource: 'organisationUnits',\n    params: {\n      fields: ['id', 'displayName'],\n      pageSize: MAX_RECIPIENT,\n      filter: [`displayName:token:${searchValue}`, 'users:gte:1']\n    }\n  };\n}\n\nfunction createUserGroupQuery(searchValue) {\n  return {\n    resource: 'userGroups',\n    params: {\n      fields: 'id, displayName',\n      pageSize: MAX_RECIPIENT,\n      filter: [`displayName:token:${searchValue}`]\n    }\n  };\n}\n\nexport default function createRecipientSearchQuery({\n  searchValue,\n  searchOnlyUsers,\n  searchOnlyFeedbackRecipients,\n  feedbackRecipientsId,\n  dhis2CoreVersion\n}) {\n  const userQuery = createUserQuery({\n    searchValue,\n    searchOnlyFeedbackRecipients,\n    feedbackRecipientsId,\n    dhis2CoreVersion\n  });\n  return searchOnlyUsers ? {\n    users: userQuery\n  } : {\n    users: userQuery,\n    organisationUnits: createOrganisationUnitQuery(searchValue),\n    userGroups: createUserGroupQuery(searchValue)\n  };\n}","import { pageSize } from '../constants/development.js';\nimport createRecipientSearchQuery from '../utils/createRecipientSearchQuery.js';\nconst initialMessageConversationFields = ['id', 'displayName', 'subject', 'messageType', 'lastSender[id, displayName]', 'assignee[id, displayName]', 'status', 'priority', 'lastUpdated', 'read', 'lastMessage', 'followUp'];\nconst messageConversationFields = ['*', 'assignee[id, displayName]', 'messages[*,sender[id,displayName]', 'attachments[id, name, contentLength]]', 'userMessages[user[id, displayName]]'];\nconst order = 'lastMessage:desc'; // The rest of the code in this module will expect that\n// engine has been set and can use it safely\n\nlet engine = null;\nexport const setEngine = engineInstance => {\n  engine = engineInstance;\n};\nexport const getCurrentUser = () => {\n  return engine.query({\n    currentUser: {\n      resource: 'me',\n      params: {\n        fields: ['id', 'authorities', 'userGroups[id]']\n      }\n    }\n  });\n};\nexport const getMessageConversations = async ({\n  messageType,\n  page,\n  messageFilter,\n  status,\n  priority,\n  assignedToMeFilter,\n  markedForFollowUpFilter,\n  unreadFilter,\n  currentUser\n}) => {\n  const filter = [`messageType:eq:${messageType}`];\n\n  if (status) {\n    filter.push(`status:eq:${status}`);\n  }\n\n  if (priority) {\n    filter.push(`priority:eq:${priority}`);\n  }\n\n  if (markedForFollowUpFilter) {\n    filter.push('followUp:eq:true');\n  }\n\n  if (unreadFilter) {\n    filter.push('read:eq:false');\n  }\n\n  if (assignedToMeFilter) {\n    filter.push(`assignee.id:eq:${currentUser.id}`);\n  }\n\n  const query = {\n    resource: 'messageConversations',\n    params: {\n      filter,\n      pageSize,\n      page,\n      fields: initialMessageConversationFields,\n      order\n    }\n  };\n\n  if (messageFilter) {\n    query.params.queryString = messageFilter;\n  }\n\n  const {\n    messageConversations\n  } = await engine.query({\n    messageConversations: query\n  });\n  return messageConversations;\n};\nexport const getMessageConversation = async ({\n  id\n}) => {\n  const {\n    messageConversation\n  } = await engine.query({\n    messageConversation: {\n      resource: 'messageConversations',\n      id,\n      params: {\n        fields: messageConversationFields\n      }\n    }\n  });\n  return messageConversation;\n};\nexport const getServerDate = async () => {\n  const {\n    systemInfo\n  } = await engine.query({\n    systemInfo: {\n      resource: 'system/info'\n    }\n  });\n  return systemInfo.serverDate;\n};\nexport const updateMessageConversationStatus = async (messageConversationId, value) => {\n  return await engine.mutate({\n    resource: `messageConversations/${messageConversationId}/status`,\n    type: 'create',\n    params: {\n      messageConversationStatus: value\n    }\n  });\n};\nexport const updateMessageConversationPriority = async (messageConversationId, value) => await engine.mutate({\n  resource: `messageConversations/${messageConversationId}/priority`,\n  type: 'create',\n  params: {\n    messageConversationPriority: value\n  }\n});\nexport const updateMessageConversationAssignee = async (messageConversationId, value) => {\n  const mutation = value ? {\n    resource: `messageConversations/${messageConversationId}/assign`,\n    type: 'create',\n    params: {\n      userId: value\n    }\n  } : {\n    resource: `messageConversations`,\n    id: `${messageConversationId}/assign`,\n    type: 'delete'\n  };\n  return await engine.mutate(mutation);\n};\nexport const updateMessageConversationFollowup = async (messageConversationIds, value) => {\n  return await engine.mutate({\n    resource: `messageConversations/${value ? 'followup' : 'unfollowup'}`,\n    type: 'create',\n    data: messageConversationIds\n  });\n};\nexport const getNrOfUnread = async messageType => {\n  const {\n    messageConversations\n  } = await engine.query({\n    messageConversations: {\n      resource: 'messageConversations',\n      params: {\n        fields: ['read'],\n        filter: ['read:eq:false', `messageType:eq:${messageType}`],\n        pageSize: 1\n      }\n    }\n  });\n  return messageConversations.pager.total;\n};\nexport const sendMessage = async ({\n  subject,\n  users,\n  userGroups,\n  organisationUnits,\n  text,\n  attachments\n}) => await engine.mutate({\n  resource: 'messageConversations',\n  type: 'create',\n  data: {\n    subject,\n    users,\n    userGroups,\n    organisationUnits,\n    text,\n    attachments\n  }\n});\nexport const sendFeedbackMessage = async (subject, text) => await engine.mutate({\n  resource: 'messageConversations/feedback',\n  type: 'create',\n  params: {\n    subject\n  },\n  data: text\n});\nexport const replyMessage = async ({\n  message,\n  internalReply,\n  attachments,\n  id\n}) => {\n  const params = {\n    internal: internalReply\n  };\n\n  if (attachments.length > 0) {\n    params.attachments = attachments;\n  }\n\n  return await engine.mutate({\n    resource: `messageConversations/${id}`,\n    type: 'create',\n    params,\n    data: message\n  });\n};\nexport const deleteMessageConversation = async (messageConversationId, currentUserId) => await engine.mutate({\n  resource: `messageConversations/${messageConversationId}/${currentUserId}`,\n  type: 'delete'\n});\nexport const markRead = async (markedReadConversations) => await engine.mutate({\n  resource: 'messageConversations/read',\n  type: 'create',\n  data: markedReadConversations\n});\nexport const markUnread = async (markedUnreadConversations) => await engine.mutate({\n  resource: 'messageConversations/unread',\n  type: 'create',\n  data: markedUnreadConversations\n});\nexport const isInFeedbackRecipientGroup = async currentUser => {\n  const {\n    configuration: {\n      feedbackRecipients\n    }\n  } = await engine.query({\n    configuration: {\n      resource: 'configuration'\n    }\n  });\n  const authorized = currentUser.authorities.includes('ALL') || currentUser.userGroups.some(({\n    id\n  }) => id === feedbackRecipients.id);\n  const feedbackRecipientsId = feedbackRecipients.id;\n  return {\n    authorized,\n    feedbackRecipientsId\n  };\n};\nexport const searchRecipients = async ({\n  searchValue,\n  searchOnlyUsers,\n  searchOnlyFeedbackRecipients,\n  feedbackRecipientsId,\n  dhis2CoreVersion\n}) => {\n  const query = createRecipientSearchQuery({\n    searchValue,\n    searchOnlyUsers,\n    searchOnlyFeedbackRecipients,\n    feedbackRecipientsId,\n    dhis2CoreVersion\n  });\n  const results = await engine.query(query);\n  return {\n    users: results.users.users,\n    organisationUnits: results.organisationUnits && results.organisationUnits.organisationUnits,\n    userGroups: results.userGroups && results.userGroups.userGroups\n  };\n};\nexport const addRecipients = async ({\n  users,\n  userGroups,\n  organisationUnits,\n  messageConversationId\n}) => await engine.mutate({\n  resource: `messageConversations/${messageConversationId}/recipients`,\n  type: 'create',\n  data: {\n    users,\n    userGroups,\n    organisationUnits\n  }\n});\nexport const getUserById = async id => {\n  const {\n    user\n  } = await engine.query({\n    user: {\n      resource: 'users',\n      id,\n      params: {\n        fields: 'id,displayName'\n      }\n    }\n  });\n  return { ...user,\n    type: 'user'\n  };\n};\nexport const addAttachment = async (attachment) => await engine.mutate({\n  resource: 'fileResources',\n  type: 'create',\n  params: {\n    domain: 'MESSAGE_ATTACHMENT'\n  },\n  data: {\n    file: attachment\n  }\n});\nexport const downloadAttachment = (messageConversationId, messageId, attachmentId) => {\n  const filePath = [engine.link.baseUrl, engine.link.apiPath, 'messageConversations', messageConversationId, messageId, 'attachments', attachmentId].join('/');\n  const link = document.createElement('a');\n  link.href = filePath;\n  link.download = filePath.split('/').pop();\n  link.target = '_blank';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};","import * as actions from '../constants/actions.js';\nimport log from 'loglevel';\nimport * as api from '../api/api.js';\nimport moment from 'moment'; // Simple hack to solve negative time difference\n\nconst FUTURE_HACK = 5000;\n\nconst createAction = (type, payload) => ({\n  type,\n  payload\n});\n/******************\n * THUNKS SECTION *\n ******************/\n\n\nexport const setCurrentUser = () => async dispatch => {\n  dispatch(createAction(actions.SET_CURRENT_USER));\n\n  try {\n    const {\n      currentUser\n    } = await api.getCurrentUser();\n    dispatch(createAction(actions.SET_CURRENT_USER_SUCCESS, currentUser));\n  } catch {\n    dispatch(createAction(actions.SET_CURRENT_USER_ERROR, 'Could not load current user'));\n  }\n};\nexport const setDisplayTimeDiff = () => async dispatch => {\n  try {\n    const serverDate = await api.getServerDate();\n    const displayTimeDiff = moment().diff(moment(serverDate)) - FUTURE_HACK;\n    dispatch(createAction(actions.SET_DISPLAY_TIME_DIFF_SUCCESS, displayTimeDiff));\n  } catch (error) {\n    dispatch(createAction(actions.SET_DISPLAY_TIME_DIFF_ERROR, {\n      error\n    }));\n  }\n};\nexport const setSelectedMessageConversation = messageConversation => async dispatch => {\n  dispatch(createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION));\n\n  try {\n    const result = await api.getMessageConversation(messageConversation);\n    dispatch(createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS, {\n      messageConversation: result\n    }));\n  } catch (error) {\n    dispatch(createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION_ERROR, {\n      error\n    }));\n  }\n};\nexport const updateMessageConversations = ({\n  messageConversationIds,\n  identifier,\n  value,\n  messageType,\n  selectedMessageConversation\n}) => async dispatch => {\n  if (identifier === 'FOLLOW_UP') {\n    try {\n      await api.updateMessageConversationFollowup(messageConversationIds, value);\n      dispatch(createAction(actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS, {\n        messageType: messageType,\n        page: 1,\n        identifier: identifier\n      }));\n      dispatch(loadMessageConversations());\n    } catch (error) {\n      dispatch(createAction(actions.MESSAGE_CONVERSATION_UPDATE_ERROR, {\n        error\n      }));\n    }\n  } else {\n    const promises = messageConversationIds.map(messageConversationId => {\n      let promise;\n\n      switch (identifier) {\n        case 'STATUS':\n          promise = api.updateMessageConversationStatus(messageConversationId, value);\n          break;\n\n        case 'PRIORITY':\n          promise = api.updateMessageConversationPriority(messageConversationId, value);\n          break;\n\n        case 'ASSIGNEE':\n          if (value !== undefined && messageType.id === 'VALIDATION_RESULT') {\n            promise = api.addRecipients({\n              users: value.map(value => ({\n                id: value\n              })),\n              userGroups: [],\n              organisationUnits: [],\n              messageConversationId\n            }).then(() => api.updateMessageConversationAssignee(messageConversationId, value));\n          } else {\n            promise = api.updateMessageConversationAssignee(messageConversationId, value);\n          }\n\n          break;\n\n        default:\n          log.error('Unexpected identifier for updateMessageConversations');\n          break;\n      }\n\n      return promise;\n    });\n\n    try {\n      await Promise.all(promises);\n      dispatch(createAction(actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS, {\n        messageType: messageType,\n        page: 1,\n        identifier: identifier\n      }));\n      dispatch(loadMessageConversations());\n    } catch (error) {\n      dispatch(createAction(actions.MESSAGE_CONVERSATION_UPDATE_ERROR, {\n        error\n      }));\n    }\n  }\n\n  if (selectedMessageConversation) {\n    dispatch(setSelectedMessageConversation(selectedMessageConversation));\n  }\n};\nexport const loadMessageConversations = (messageType, selectedMessageType, loadMore = false) => async (dispatch, getState) => {\n  const promises = [];\n  const state = getState();\n  const {\n    messageFilter,\n    statusFilter: status,\n    priorityFilter: priority,\n    assignedToMeFilter,\n    markedForFollowUpFilter,\n    unreadFilter,\n    currentUser\n  } = state.messaging; // Default fallback values so this action can be called without arguments\n\n  messageType = messageType || state.messaging.selectedMessageType;\n  selectedMessageType = selectedMessageType || state.messaging.selectedMessageType.id;\n  dispatch(createAction(actions.LOAD_MESSAGE_CONVERSATIONS, {\n    messageType,\n    loadMore\n  }));\n\n  try {\n    for (let i = 1; i <= messageType.page; i++) {\n      const promise = api.getMessageConversations({\n        messageType: messageType.id,\n        page: i,\n        messageFilter,\n        status,\n        priority,\n        assignedToMeFilter,\n        markedForFollowUpFilter,\n        unreadFilter,\n        currentUser\n      }).then(result => ({\n        messageConversations: result.messageConversations,\n        pager: result.pager\n      }));\n      promises.push(promise);\n    }\n\n    const result = await Promise.all(promises);\n    const nrOfUnread = await api.getNrOfUnread(messageType.id);\n    const messageConversations = result.reduce((accumulated, r) => accumulated.concat(r.messageConversations), []);\n    dispatch(createAction(actions.MESSAGE_CONVERSATIONS_LOAD_SUCCESS, {\n      messageConversations,\n      pager: result[result.length - 1].pager,\n      messageType,\n      selectedMessageType,\n      nrOfUnread\n    }));\n  } catch (error) {\n    dispatch(createAction(actions.MESSAGE_CONVERSATIONS_LOAD_ERROR, {\n      error\n    }));\n  }\n};\nexport const deleteMessageConversations = (messageConversationIds, messageType) => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const {\n      currentUser\n    } = state.messaging;\n    const promises = messageConversationIds.map(messageConversationId => api.deleteMessageConversation(messageConversationId, currentUser.id));\n    await Promise.all(promises);\n    dispatch(createAction(actions.MESSAGE_CONVERSATIONS_DELETE_SUCCESS, {\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n  } catch (error) {\n    dispatch(createAction(actions.MESSAGE_CONVERSATIONS_DELETE_ERROR, {\n      error\n    }));\n  }\n};\nexport const sendMessage = ({\n  users,\n  userGroups,\n  organisationUnits,\n  messageType\n}) => async (dispatch, getState) => {\n  try {\n    const {\n      messaging: {\n        subject,\n        input,\n        attachments\n      }\n    } = getState();\n    await api.sendMessage({\n      subject,\n      users,\n      userGroups,\n      organisationUnits,\n      text: input,\n      attachments\n    });\n    dispatch(createAction(actions.SEND_MESSAGE_SUCCESS, {\n      messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n  } catch (error) {\n    dispatch(createAction(actions.SEND_MESSAGE_ERROR, {\n      error\n    }));\n  }\n};\nexport const sendFeedbackMessage = messageType => async (dispatch, getState) => {\n  const state = getState();\n\n  try {\n    await api.sendFeedbackMessage(state.messaging.subject, state.messaging.input);\n    dispatch(createAction(actions.SEND_MESSAGE_SUCCESS, {\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n  } catch (error) {\n    dispatch(createAction(actions.SEND_MESSAGE_ERROR, {\n      error\n    }));\n  }\n};\nexport const replyMessage = ({\n  message,\n  internalReply,\n  messageConversation,\n  messageType\n}) => async (dispatch, getState) => {\n  try {\n    const {\n      id\n    } = messageConversation;\n    const state = getState();\n    const attachments = state.messaging.attachments.map(attachment => attachment.id);\n    await api.replyMessage({\n      message,\n      internalReply,\n      attachments,\n      id\n    });\n    dispatch(createAction(actions.REPLY_MESSAGE_SUCCESS, {\n      messageConversation: messageConversation,\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n    dispatch(setSelectedMessageConversation(messageConversation));\n  } catch (error) {\n    dispatch(createAction(actions.REPLY_MESSAGE_ERROR, {\n      error\n    }));\n  }\n};\nexport const markMessageConversations = (mode, markedConversations, messageType) => async dispatch => {\n  try {\n    await (mode === 'read' ? api.markRead(markedConversations) : api.markUnread(markedConversations));\n    dispatch(createAction(actions.MARK_MESSAGE_CONVERSATIONS_SUCCESS, {\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n  } catch (error) {\n    dispatch(createAction(actions.MARK_MESSAGE_CONVERSATIONS_ERROR, {\n      error\n    }));\n  }\n};\nexport const addRecipients = ({\n  users,\n  userGroups,\n  organisationUnits,\n  messageConversation,\n  messageType\n}) => async dispatch => {\n  try {\n    const {\n      id: messageConversationId\n    } = messageConversation;\n    await api.addRecipients({\n      users,\n      userGroups,\n      organisationUnits,\n      messageConversationId\n    });\n    dispatch(createAction(actions.ADD_RECIPIENTS_SUCCESS, {\n      messageConversation: messageConversation,\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(setSelectedMessageConversation(messageConversation));\n  } catch (error) {\n    dispatch(createAction(actions.ADD_RECIPIENTS_ERROR, {\n      error\n    }));\n  }\n};\nexport const addRecipientByUserId = id => async dispatch => {\n  try {\n    const user = await api.getUserById(id);\n    dispatch(createAction(actions.ADD_RECIPIENT_BY_ID_SUCCESS, user));\n  } catch (error) {\n    console.error(error); // No action required, the field will just be empty\n  }\n};\nexport const addAttachment = attachment => async dispatch => {\n  dispatch(createAction(actions.ADD_ATTACHMENT, attachment));\n\n  try {\n    const result = await api.addAttachment(attachment);\n    dispatch(createAction(actions.ADD_ATTACHMENT_SUCCESS, {\n      id: result.response.fileResource.id,\n      name: attachment.name,\n      contentLength: result.response.fileResource.contentLength\n    }));\n  } catch (error) {\n    dispatch(createAction(actions.ADD_ATTACHMENT_ERROR, {\n      error\n    }));\n  }\n};\nexport const downloadAttachment = (messageConversationId, messageId, attachmentId) => dispatch => {\n  api.downloadAttachment(messageConversationId, messageId, attachmentId);\n  dispatch(createAction(actions.DOWNLOAD_ATTACHMENT_SUCCESS));\n};\n/************************\n * PLAIN ACTION SECTION *\n ************************/\n\nexport const clearSnackMessage = () => createAction(actions.CLEAR_SNACK_MESSAGE);\nexport const clearCheckedIds = () => createAction(actions.CLEAR_CHECKED);\nexport const clearSelectedMessageConversation = () => createAction(actions.CLEAR_SELECTED_MESSAGE_CONVERSATION);\nexport const displaySnackMessage = ({\n  message,\n  onSnackActionClick,\n  onSnackRequestClose,\n  snackType\n}) => createAction(actions.DISPLAY_SNACK_MESSAGE, {\n  message,\n  onSnackActionClick,\n  onSnackRequestClose,\n  snackType\n});\nexport const setAllChecked = messageConversationIds => createAction(actions.SET_ALL_CHECKED, {\n  messageConversationIds\n});\nexport const setChecked = (messageConversation, selectedValue) => createAction(actions.SET_CHECKED, {\n  messageConversation,\n  selectedValue\n});\nexport const setFilter = (filter, filterType) => createAction(actions.SET_FILTER, {\n  filter,\n  filterType\n});\nexport const updateInputFields = (subject, input, recipients) => createAction(actions.UPDATE_INPUT_FIELDS, {\n  subject,\n  input,\n  recipients\n});\nexport const clearAttachments = () => createAction(actions.CLEAR_ATTACHMENTS);\nexport const setSelectedMessageType = messageTypeId => createAction(actions.SET_SELECTED_MESSAGE_TYPE, {\n  messageTypeId\n});\nexport const removeAttachment = attachmentId => createAction(actions.REMOVE_ATTACHMENT, {\n  attachmentId\n});\nexport const cancelAttachment = attachmentName => createAction(actions.CANCEL_ATTACHMENT, {\n  attachmentName\n});\nexport const setIsInFeedbackRecipientGroup = isInFeedbackRecipientGroup => createAction(actions.SET_IN_FEEDBACK_RECIPIENT_GROUP, {\n  isInFeedbackRecipientGroup\n});\nexport const setDhis2CoreVersion = version => createAction(actions.SET_DHIS2_CORE_VERSION, version);","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\nimport { clearSnackMessage } from '../../actions/index.js';\nimport { compose, pure } from 'recompose';\nimport theme from '../../styles/theme.js';\nconst DEFAULT_MESSAGE_DURATION = 4000;\nconst contentColorStyle = {\n  NEGATIVE: theme.palette.negative,\n  NEUTRAL: theme.palette.primary1Color,\n  POSITIVE: theme.palette.alternateTextColor\n};\n\nclass CustomSnackBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (!prevState.show && this.props.message) {\n      this.setState({\n        show: true\n      });\n    }\n  }\n\n  closeMessage = () => {\n    this.props.clearSnackMessage();\n    this.setState({\n      show: false\n    });\n    this.props.onSnackRequestClose && this.props.onSnackRequestClose();\n  };\n\n  render() {\n    return <Snackbar open={this.props.message !== '' && this.state.show} message={this.props.message || 'Missing snackbar message'} autoHideDuration={DEFAULT_MESSAGE_DURATION} onRequestClose={this.closeMessage} action={this.props.onSnackActionClick && 'undo'} onActionClick={() => {\n      this.props.onSnackActionClick();\n      this.setState({\n        show: false\n      });\n    }} contentStyle={{\n      color: contentColorStyle[this.props.type]\n    }} style={{\n      pointerEvents: 'none',\n      whiteSpace: 'nowrap'\n    }} bodyStyle={{\n      pointerEvents: 'initial',\n      maxWidth: 'none'\n    }} />;\n  }\n\n}\n\nCustomSnackBar.propTypes = {\n  clearSnackMessage: propTypes.func,\n  message: propTypes.string,\n  type: propTypes.oneOf(['NEGATIVE', 'NEUTRAL', 'POSITIVE']),\n  onSnackActionClick: propTypes.func,\n  onSnackRequestClose: propTypes.func\n};\n\nconst mapStateToProps = state => ({\n  message: state.messaging.snackMessage,\n  type: state.messaging.snackType,\n  onSnackActionClick: state.messaging.onSnackActionClick,\n  onSnackRequestClose: state.messaging.onSnackRequestClose\n});\n\nexport default compose(connect(mapStateToProps, {\n  clearSnackMessage\n}), pure)(CustomSnackBar);","import { createHashHistory } from 'history';\nexport default createHashHistory();","import React from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport FlatButton from 'material-ui/FlatButton';\nimport LinearProgress from 'material-ui/LinearProgress';\nimport Clear from 'material-ui-icons/Clear';\nimport Download from 'material-ui-icons/CloudDownload';\nimport theme from '../../styles/theme.js';\nimport './Attachments.css';\n\nconst Attachments = ({\n  dataDirection,\n  attachments,\n  style,\n  removeAttachment,\n  downloadAttachment,\n  cancelAttachment\n}) => <div className=\"attachment\" style={{ ...style\n}}>\n        {attachments.map((attachment, index) => <Attachment // combining name with index prevents errors when user uploads files with duplicate names\n  key={`${attachment.name}-${index}`} dataDirection={dataDirection} attachment={attachment} removeAttachment={removeAttachment} downloadAttachment={downloadAttachment} cancelAttachment={cancelAttachment} />)}\n    </div>;\n\nAttachments.propTypes = {\n  attachments: propTypes.array,\n  cancelAttachment: propTypes.func,\n  dataDirection: propTypes.string,\n  downloadAttachment: propTypes.func,\n  removeAttachment: propTypes.func,\n  style: propTypes.object\n};\n\nconst Attachment = ({\n  dataDirection,\n  attachment,\n  removeAttachment,\n  downloadAttachment,\n  cancelAttachment\n}) => {\n  return <FlatButton className=\"attachment__button\" backgroundColor={theme.palette.accent2Color} label={`${attachment.name} (${parseFloat(parseInt(attachment.contentLength, 10) / 1000000).toFixed(2)} MB)`} labelPosition=\"after\" onClick={() => {\n    dataDirection === 'download' ? downloadAttachment(attachment) : attachment.loading ? cancelAttachment(attachment.name) : removeAttachment(attachment);\n  }} icon={dataDirection === 'download' ? <Download /> : <Clear />}>\n            {attachment.loading && <LinearProgress className={'attachment__progress'} mode=\"indeterminate\" />}\n        </FlatButton>;\n};\n\nAttachment.propTypes = {\n  attachment: propTypes.object,\n  cancelAttachment: propTypes.func,\n  dataDirection: propTypes.string,\n  downloadAttachment: propTypes.func,\n  removeAttachment: propTypes.func\n};\nexport default Attachments;","import React from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport Divider from 'material-ui/Divider';\nimport CardText from 'material-ui/Card/CardText';\nimport Attachments from '../Attachments/Attachments.js';\nimport i18n from '@dhis2/d2-i18n';\nimport Linkify from 'react-linkify';\nimport theme from '../../styles/theme.js';\nimport { fontFamily } from '../../constants/development.js';\nimport moment from 'moment';\nconst styles = {\n  canvas(backgroundColor) {\n    return {\n      backgroundColor,\n      padding: '16px 16px 16px 16px'\n    };\n  },\n\n  innerCanvas: {\n    margin: '',\n    paddingBottom: '0px'\n  },\n  cardText: {\n    padding: '16px 0px 16px 0px',\n    fontFamily,\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'break-word'\n  },\n  fromFormat: {\n    fontFamily\n  },\n  datePlacement: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginRight: '10px'\n  },\n  dateFormat: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    fontFamily\n  }\n};\n\nconst Message = ({\n  displayTimeDiff,\n  message,\n  currentUser,\n  lastMessage,\n  downloadAttachment,\n  cancelAttachment,\n  enableAttachments\n}) => {\n  const fromTitle = message.sender ? currentUser && currentUser.id === message.sender.id ? 'me' : message.sender.displayName : 'system';\n  const today = moment();\n  const messageDate = moment(message.created).add(displayTimeDiff);\n  return <div style={styles.canvas(theme.palette.canvasColor)}>\n            <div style={styles.innerCanvas}>\n                <div style={styles.fromFormat}>\n                    {message.internal ? i18n.t(`Internal message from ${fromTitle}`) : i18n.t(`Message from ${fromTitle}`)}\n                </div>\n\n                <div placement={'bottom'} style={styles.datePlacement}>\n                    <div style={styles.dateFormat}>\n                        {today.diff(messageDate, 'hours') < 72 ? `${messageDate.from(today)}, ${messageDate.format('HH:mm')}` : today.year() === messageDate.year() ? messageDate.format('MMM DD, HH:mm') : messageDate.format('MMM DD, YYYY HH:mm')}\n                    </div>\n                </div>\n\n                {enableAttachments && <Attachments dataDirection={'download'} style={{\n        paddingLeft: 0\n      }} attachments={message.attachments} downloadAttachment={downloadAttachment} cancelAttachment={cancelAttachment} />}\n\n                <CardText style={styles.cardText}>\n                    <Linkify>{message.text}</Linkify>\n                </CardText>\n            </div>\n            {!lastMessage && <Divider />}\n        </div>;\n};\n\nMessage.propTypes = {\n  cancelAttachment: propTypes.func,\n  currentUser: propTypes.object,\n  displayTimeDiff: propTypes.number,\n  downloadAttachment: propTypes.func,\n  enableAttachments: propTypes.bool,\n  lastMessage: propTypes.bool,\n  message: propTypes.object\n};\nexport default Message;","import React from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport FlatButton from 'material-ui/FlatButton';\nimport AttachFile from 'material-ui-icons/AttachFile';\nimport i18n from '@dhis2/d2-i18n';\nimport './AttachmentUploadButton.css';\n\nconst createHandleChange = addAttachment => event => {\n  const files = event.target.files;\n  const hasFile = files.length > 0;\n\n  if (hasFile) {\n    addAttachment(files[0]);\n  }\n};\n\nconst AttachmentUploadButton = ({\n  addAttachment\n}) => <FlatButton className=\"attachment__upload-button\" label={i18n.t('Upload attachment')} labelPosition=\"after\" containerElement=\"label\" icon={<AttachFile />}>\n        <input className=\"attachment__upload-button--input\" type=\"file\" onChange={createHandleChange(addAttachment)} />\n    </FlatButton>;\n\nAttachmentUploadButton.propTypes = {\n  addAttachment: propTypes.func\n};\nexport default AttachmentUploadButton;","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { Card, CardActions, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport AttachmentUploadButton from '../Attachments/AttachmentUploadButton.js';\nimport Attachments from '../Attachments/Attachments.js';\nimport { supportsAttachments } from '../../utils/helpers.js';\nimport i18n from '@dhis2/d2-i18n';\nimport { replyMessage, setSelectedMessageType, updateInputFields, displaySnackMessage, addAttachment, removeAttachment, cancelAttachment } from '../../actions/index.js';\nimport { NEGATIVE } from '../../constants/development.js';\n\nclass ReplyCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      discardState: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.wipeInput();\n  }\n\n  replyMessage = internalReply => {\n    const {\n      input: message,\n      selectedMessageConversation: messageConversation,\n      selectedMessageType: messageType\n    } = this.props;\n    this.props.replyMessage({\n      message,\n      internalReply,\n      messageConversation,\n      messageType\n    });\n    this.wipeInput();\n  };\n  wipeInput = () => {\n    this.props.updateInputFields('', '', []);\n    this.props.attachments.length > 0 && this.props.clearAttachments();\n    this.setState({\n      inputError: false\n    });\n  };\n  texFieldUpdate = (event, newValue) => {\n    this.props.updateInputFields('', newValue, []);\n  };\n  handleDiscard = () => {\n    const message = i18n.t('Reply discarded');\n    const snackType = NEGATIVE;\n\n    const onSnackActionClick = () => this.setState({\n      discardState: false\n    });\n\n    const onSnackRequestClose = () => {\n      this.setState({\n        discardState: false\n      });\n      this.wipeInput();\n    };\n\n    this.setState({\n      discardState: true\n    });\n    this.props.displaySnackMessage({\n      message,\n      onSnackActionClick,\n      onSnackRequestClose,\n      snackType\n    });\n    this.setState({\n      expanded: false\n    });\n  };\n\n  render() {\n    return <Card style={{\n      marginTop: '5px'\n    }} expanded>\n                <CardText style={{\n        padding: '0px 0px 0px 16px'\n      }}>\n                    <TextField key={this.props.messageConversation.id} id={this.props.messageConversation.id} rows={5} underlineShow={false} value={this.state.discardState ? '' : this.props.input} multiLine fullWidth floatingLabelText={i18n.t('Message')} onChange={this.texFieldUpdate} />\n                    {this.props.enableAttachments && !this.state.discardState && <Attachments dataDirection={'upload'} attachments={this.props.attachments} removeAttachment={attachment => this.props.removeAttachment(attachment.id)} cancelAttachment={this.props.cancelAttachment} />}\n\n                    <CardActions style={{\n          paddingLeft: '0px'\n        }}>\n                        <RaisedButton primary label={i18n.t('Reply')} disabled={this.props.input === '' || this.state.discardState} onClick={() => this.replyMessage(false)} />\n                        {this.props.isInFeedbackRecipientGroup && this.props.selectedMessageType.id === 'TICKET' && <FlatButton primary label={i18n.t('Internal reply')} disabled={this.props.input === '' || this.state.discardState} onClick={() => this.replyMessage(true)} />}\n                        <FlatButton label={i18n.t('Discard')} disabled={this.props.input === '' || this.state.discardState} onClick={this.handleDiscard} />\n                        {this.props.enableAttachments && <AttachmentUploadButton addAttachment={attachment => {\n            this.props.addAttachment(attachment);\n          }} />}\n                        )\n                    </CardActions>\n                </CardText>\n            </Card>;\n  }\n\n}\n\nReplyCard.propTypes = {\n  addAttachment: propTypes.func,\n  attachments: propTypes.array,\n  cancelAttachment: propTypes.func,\n  clearAttachments: propTypes.func,\n  displaySnackMessage: propTypes.func,\n  enableAttachments: propTypes.bool,\n  input: propTypes.string,\n  isInFeedbackRecipientGroup: propTypes.bool,\n  messageConversation: propTypes.object,\n  removeAttachment: propTypes.func,\n  replyMessage: propTypes.func,\n  selectedMessageConversation: propTypes.object,\n  selectedMessageType: propTypes.object,\n  updateInputFields: propTypes.func\n};\n\nconst mapStateToProps = state => ({\n  selectedMessageConversation: state.messaging.selectedMessageConversation,\n  selectedMessageType: state.messaging.selectedMessageType,\n  messageTypes: state.messaging.messageTypes,\n  input: state.messaging.input,\n  isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n  attachments: state.messaging.attachments,\n  enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion)\n});\n\nexport default compose(connect(mapStateToProps, {\n  replyMessage,\n  setSelectedMessageType,\n  updateInputFields,\n  displaySnackMessage,\n  addAttachment,\n  removeAttachment,\n  cancelAttachment\n}, null, {\n  pure: false\n}))(ReplyCard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from '@dhis2/prop-types';\nimport ChipInput from 'material-ui-chip-input';\nimport { debounce } from '../../utils/helpers.js';\nimport i18n from '@dhis2/d2-i18n';\nimport * as api from '../../api/api.js';\nconst searchDelay = 300;\nconst minCharLength = 2;\n/*\n * An AutoComplete text field with suggestions from a given list of\n * identifiable objects. Selected objects are shown as chips in the text field.\n */\n\nclass SuggestionField extends Component {\n  state = {\n    input: '',\n    searchResult: [],\n    searchOnlyUsers: this.props.searchOnlyUsers,\n    searchOnlyFeedbackRecipients: this.props.searchOnlyFeedbackRecipients,\n    lastSearch: '',\n    errorText: undefined\n  };\n  debouncedSearch = debounce(this.search.bind(this), searchDelay);\n\n  search(input) {\n    const doSearch = !this.state.searchResult.find(result => result.displayName === input) && input !== '' && input.length >= minCharLength;\n\n    if (doSearch) {\n      const {\n        feedbackRecipientsId,\n        searchOnlyUsers,\n        searchOnlyFeedbackRecipients,\n        dhis2CoreVersion\n      } = this.props;\n      api.searchRecipients({\n        searchValue: input,\n        searchOnlyUsers,\n        searchOnlyFeedbackRecipients,\n        feedbackRecipientsId,\n        dhis2CoreVersion\n      }).then(({\n        users,\n        userGroups,\n        organisationUnits\n      }) => {\n        const addType = type => result => ({ ...result,\n          type\n        });\n\n        let internalSearchResult = users.map(addType('user'));\n\n        if (!this.state.searchOnlyUsers) {\n          internalSearchResult = internalSearchResult.concat(userGroups.map(addType('userGroup'))).concat(organisationUnits.map(addType('organisationUnit')));\n        }\n\n        this.setState({\n          searchResult: internalSearchResult,\n          errorText: internalSearchResult.length === 0 ? i18n.t('No results found') : undefined\n        });\n      });\n    } else {\n      this.setState({\n        lastSearch: input,\n        searchResult: this.state.lastSearch !== '' && input === '' || input.length < minCharLength ? [] : this.state.searchResult,\n        errorText: input !== '' && input.length < minCharLength ? i18n.t(`Please enter at least ${minCharLength} characters`) : this.state.searchWarning\n      });\n    }\n  }\n\n  onSuggestionClick = chip => {\n    if (this.props.onSuggestionClick !== undefined) {\n      this.props.onSuggestionClick(chip);\n    } else {\n      this.wipeInput();\n      this.debouncedSearch('');\n      const doInsert = !this.props.recipients.find(recipient => recipient.id === chip.id);\n      doInsert && this.props.updateRecipients([...this.props.recipients, this.state.searchResult.find(result => result.id === chip.id)]);\n    }\n  };\n  onRemoveChip = id => {\n    this.props.updateRecipients(this.props.recipients.filter(recipient => recipient.id !== id));\n  };\n  wipeInput = () => {\n    this.setState({\n      input: '',\n      searchResult: []\n    });\n  };\n  updateInput = input => {\n    this.debouncedSearch(input);\n    this.setState({\n      input\n    });\n  };\n\n  render() {\n    return <div style={{ ...this.props.style,\n      height: this.props.inputHeight\n    }}>\n                <ChipInput style={{\n        marginBottom: 16\n      }} disabled={this.props.disabled === undefined ? false : this.props.disabled} errorText={this.props.errorText || this.state.errorText} value={this.props.recipients} fullWidth openOnFocus searchText={this.state.input} floatingLabelText={this.props.label} dataSource={this.state.searchResult} dataSourceConfig={{\n        text: 'displayName',\n        value: 'id'\n      }} onUpdateInput={this.updateInput} onRequestAdd={chip => this.onSuggestionClick(chip)} onRequestDelete={id => this.onRemoveChip(id)} />\n            </div>;\n  }\n\n}\n\nSuggestionField.propTypes = {\n  dhis2CoreVersion: propTypes.number,\n  disabled: propTypes.bool,\n  errorText: propTypes.string,\n  feedbackRecipientsId: propTypes.string,\n  inputHeight: propTypes.string,\n  label: propTypes.string,\n  recipients: propTypes.array,\n  searchOnlyFeedbackRecipients: propTypes.bool,\n  searchOnlyUsers: propTypes.bool,\n  style: propTypes.object,\n  updateRecipients: propTypes.func,\n  onSuggestionClick: propTypes.func\n};\nexport default connect(state => ({\n  dhis2CoreVersion: state.messaging.dhis2CoreVersion\n}))(SuggestionField);","import React from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport Subheader from 'material-ui/Subheader/Subheader';\nconst styles = {\n  subheaderTitle: {\n    height: '32px',\n    color: 'black',\n    paddingLeft: 0,\n    paddingRight: 16\n  },\n\n  subheader(color, fontWeight) {\n    return {\n      height: '32px',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      padding: 0,\n      color,\n      fontWeight\n    };\n  }\n\n};\n\nconst ExtendedChoiceLabel = ({\n  showTitle,\n  title,\n  label,\n  color,\n  fontWeight\n}) => {\n  const displayLabel = label && label !== 'NONE' ? title === 'Assignee' ? label : `${label.charAt(0)}${label.toLowerCase().substr(1, label.length)}` : '-';\n  return <div style={{\n    flex: 2,\n    paddingLeft: 10,\n    maxWidth: 200\n  }}>\n            {showTitle && <Subheader style={styles.subheaderTitle}> {title} </Subheader>}\n            <Subheader style={styles.subheader(color, fontWeight)}>\n                {displayLabel}\n            </Subheader>\n        </div>;\n};\n\nExtendedChoiceLabel.propTypes = {\n  color: propTypes.string,\n  fontWeight: propTypes.string,\n  label: propTypes.string,\n  showTitle: propTypes.bool,\n  title: propTypes.string\n};\nexport default ExtendedChoiceLabel;","import theme from '../styles/theme.js';\nimport { fontFamily } from '../constants/development.js';\nexport const styles = {\n  canvas: {\n    flex: '3 0',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    height: 'calc(100vh - 110px)',\n    paddingTop: '10px'\n  },\n  innerCanvas: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0px 10px 0px 10px'\n  },\n  header: {\n    display: 'flex'\n  },\n  iconButton: {\n    display: 'flex',\n    alignSelf: 'center'\n  },\n  subjectSubheader: {\n    display: 'flex',\n    alignSelf: 'center',\n    fontSize: '20px',\n    fontFamily\n  },\n  participantsCanvas: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  participants: {\n    paddingLeft: '12px',\n    paddingTop: '10px',\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    height: '32px',\n    marginRight: '3px',\n    marginBottom: '3px'\n  },\n  participantAddRow: {\n    display: 'flex'\n  },\n  participantsSuggestionField: {\n    paddingLeft: '12px',\n    marginBottom: '0px',\n    flex: 1\n  },\n  participantsAdd: {\n    alignSelf: 'flex-end',\n    marginBottom: '28px',\n    paddingLeft: '12px'\n  },\n  messagesCanvas: {\n    marginBottom: '50px',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.accent2Color,\n    margin: '0px 10px 10px 10px'\n  },\n  messagesInnerCanvas: {\n    padding: '0px'\n  }\n};\nexport default styles;","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport history from '../../utils/history.js';\nimport { addRecipients, downloadAttachment, cancelAttachment, clearSelectedMessageConversation } from '../../actions/index.js';\nimport { supportsAttachments } from '../../utils/helpers.js';\nimport Subheader from 'material-ui/Subheader/Subheader';\nimport AddIcon from 'material-ui-icons/Add';\nimport NavigationBack from 'material-ui-icons/ArrowBack';\nimport FlatButton from 'material-ui/FlatButton';\nimport IconButton from 'material-ui/IconButton';\nimport Chip from 'material-ui/Chip';\nimport Paper from 'material-ui/Paper';\nimport i18n from '@dhis2/d2-i18n';\nimport Message from './Message.js';\nimport ReplyCard from './ReplyCard.js';\nimport SuggestionField from '../Common/SuggestionField.js';\nimport ExtendedChoiceLabel from '../Common/ExtendedChoiceLabel.js';\nimport { styles } from '../../styles/messageConversationStyles.js';\nimport theme from '../../styles/theme.js';\nconst NOTIFICATIONS = ['TICKET', 'VALIDATION_RESULT'];\nconst maxParticipantsDisplay = 30;\n\nclass MessageConversation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipients: [],\n      cursor: 'auto'\n    };\n  }\n\n  backToList = () => {\n    const {\n      clearSelectedMessageConversation,\n      messageConversation\n    } = this.props;\n    history.push(`/${messageConversation.messageType}`);\n    clearSelectedMessageConversation();\n  };\n  addRecipients = () => {\n    const users = this.state.recipients.filter(r => r.type === 'user');\n    const userGroups = this.state.recipients.filter(r => r.type === 'userGroup');\n    const organisationUnits = this.state.recipients.filter(r => r.type === 'organisationUnit');\n    const {\n      messageConversation,\n      selectedMessageType: messageType\n    } = this.props;\n    this.props.addRecipients({\n      users,\n      userGroups,\n      organisationUnits,\n      messageConversation,\n      messageType\n    });\n    this.setState({\n      recipients: []\n    });\n  };\n  updateRecipients = recipients => {\n    this.setState({\n      recipients\n    });\n  };\n\n  render() {\n    const {\n      messageConversation,\n      currentUser\n    } = this.props;\n    const messages = messageConversation.messages;\n    const notification = !!(NOTIFICATIONS.indexOf(messageConversation.messageType) + 1);\n    const participants = messageConversation.userMessages.slice(0, maxParticipantsDisplay).map(userMessage => !currentUser.id || this.state.recipientsExpanded || currentUser.id !== userMessage.user.id ? userMessage.user.displayName : i18n.t('me'));\n    const userMessagesLength = messageConversation.userMessages.length;\n\n    if (userMessagesLength > maxParticipantsDisplay) {\n      participants.push(' + '.concat(userMessagesLength - maxParticipantsDisplay));\n    }\n\n    return <div id=\"messageconversation\" style={styles.canvas}>\n                <div style={styles.innerCanvas}>\n                    <div style={styles.header}>\n                        <IconButton style={styles.iconButton} tooltipPosition=\"bottom-right\" onClick={this.backToList} tooltip={i18n.t('Show all messages')}>\n                            <NavigationBack />\n                        </IconButton>\n                        <Subheader style={styles.subjectSubheader}>\n                            {messageConversation.subject}\n                        </Subheader>\n                        {this.props.displayExtendedChoices && <ExtendedChoiceLabel color={theme.palette.darkGray} showTitle title={i18n.t('Status')} label={messageConversation.status} />}\n                        {this.props.displayExtendedChoices && <ExtendedChoiceLabel color={theme.palette.darkGray} showTitle title={i18n.t('Priority')} label={messageConversation.priority} />}\n                        {notification && <ExtendedChoiceLabel color={theme.palette.darkGray} showTitle title={i18n.t('Assignee')} label={messageConversation.assignee ? messageConversation.assignee.displayName : undefined} />}\n                    </div>\n                    <div style={styles.participantsCanvas}>\n                        <Subheader style={{\n            paddingLeft: '12px',\n            paddingTop: '10px'\n          }}>\n                            {i18n.t('Participants')}\n                        </Subheader>\n                        <div style={styles.participants}>\n                            {participants.map(participant => <Chip key={participant} style={styles.chip}>\n                                    {participant}\n                                </Chip>)}\n                        </div>\n                    </div>\n                    <div style={styles.participantAddRow}>\n                        <SuggestionField style={styles.participantsSuggestionField} label={i18n.t('Add participants to conversation')} messageConversation={messageConversation} recipients={this.state.recipients} updateRecipients={this.updateRecipients} limitSearchArray={messageConversation.userMessages} />\n                        <div style={styles.participantsAdd}>\n                            <FlatButton icon={<AddIcon />} onClick={() => this.addRecipients()} label={i18n.t('Add')} />\n                        </div>\n                    </div>\n                </div>\n                <div style={styles.messagesCanvas}>\n                    <Paper style={styles.messagesInnerCanvas}>\n                        {messages.map((message, i) => <Message key={message.id} displayTimeDiff={this.props.displayTimeDiff} message={message} messageConversation={messageConversation} notification={notification} currentUser={this.state.currentUser} lastMessage={i + 1 === messages.length} downloadAttachment={attachment => this.props.downloadAttachment(messageConversation.id, message.id, attachment.id)} cancelAttachment={this.props.cancelAttachment} enableAttachments={this.props.enableAttachments} />)}\n                    </Paper>\n                    <ReplyCard {...this.props} messageConversation={messageConversation} />\n                </div>\n            </div>;\n  }\n\n}\n\nMessageConversation.propTypes = {\n  addRecipients: propTypes.func,\n  cancelAttachment: propTypes.func,\n  clearSelectedMessageConversation: propTypes.func,\n  currentUser: propTypes.object,\n  displayExtendedChoices: propTypes.bool,\n  displayTimeDiff: propTypes.number,\n  downloadAttachment: propTypes.func,\n  enableAttachments: propTypes.bool,\n  messageConversation: propTypes.object,\n  selectedMessageType: propTypes.object\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.messaging.currentUser,\n  selectedMessageType: state.messaging.selectedMessageType,\n  displayTimeDiff: state.messaging.displayTimeDiff,\n  enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion)\n});\n\nexport default connect(mapStateToProps, {\n  addRecipients,\n  downloadAttachment,\n  cancelAttachment,\n  clearSelectedMessageConversation\n})(MessageConversation);","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport Badge from 'material-ui/Badge';\nimport Subheader from 'material-ui/Subheader/Subheader';\nimport i18n from '@dhis2/d2-i18n';\nimport theme from '../../styles/theme.js';\n\nclass MessageTypeItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: theme.palette.accent2Color,\n      textColor: theme.palette.darkGray\n    };\n  }\n\n  onClick = () => {\n    this.props.onClick();\n  };\n  onMouseEnter = () => {\n    this.setHoverText();\n    this.setState({\n      cursor: 'pointer'\n    });\n  };\n  onMouseLeave = () => {\n    this.setNeutralText();\n    this.setState({\n      cursor: 'auto'\n    });\n  };\n  setNeutralText = () => this.setTextColor(theme.palette.accent2Color);\n  setHoverText = () => this.setTextColor(theme.palette.accent3Color);\n  setTextColor = color => {\n    this.setState({\n      backgroundColor: color\n    });\n  };\n  getBackgroundColor = (selectedValue, id) => selectedValue && id === selectedValue.id ? theme.palette.accent3Color : this.state.backgroundColor;\n\n  render() {\n    return <div role=\"presentation\" style={{ ...this.state,\n      backgroundColor: this.getBackgroundColor(this.props.selectedMessageType, this.props.messageType.id),\n      cursor: this.state.cursor,\n      alignItems: 'center',\n      height: '49px',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    }} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} onClick={() => this.onClick()}>\n                <Subheader style={{\n        marginLeft: '5px',\n        fontSize: this.props.selectedMessageType && this.props.messageType.id === this.props.selectedMessageType.id ? '18px' : '16px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: this.props.selectedMessageType && this.props.messageType.id === this.props.selectedMessageType.id ? theme.palette.primary1Color : this.state.textColor\n      }}>\n                    {i18n.t(this.props.messageType.displayName)}\n                </Subheader>\n                {this.props.loading ? <CircularProgress style={{\n        marginRight: '10px'\n      }} color={theme.palette.primary1Color} size={24} /> : this.props.messageType.unread > 0 && <Badge style={{\n        marginTop: '12px',\n        marginRight: '5px'\n      }} badgeContent={this.props.messageType.unread > 100 ? '99+' : this.props.messageType.unread} secondary badgeStyle={{\n        backgroundColor: '#439E8E'\n      }} />}\n            </div>;\n  }\n\n}\n\nMessageTypeItem.propTypes = {\n  loading: propTypes.bool,\n  messageType: propTypes.object,\n  selectedMessageType: propTypes.object,\n  onClick: propTypes.func\n};\nexport default MessageTypeItem;","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { List } from 'material-ui/List';\nimport Divider from 'material-ui/Divider';\nimport Toggle from 'material-ui/Toggle';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../utils/history.js';\nimport { setSelectedMessageType, clearCheckedIds } from '../../actions/index.js';\nimport MessageTypeItem from './MessageTypeItem.js';\nimport theme from '../../styles/theme.js';\nimport moment from 'moment';\nconst styles = {\n  canvas: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: 'calc(100vh - 95px)',\n    borderLeftStyle: 'solid',\n    borderLeftWidth: '0.5px',\n    borderLeftColor: theme.palette.accent4Color,\n    borderRightStyle: 'solid',\n    borderRightWidth: '1px',\n    borderRightColor: theme.palette.accent4Color,\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    minWidth: '200px'\n  }\n};\n\nclass SidebarList extends Component {\n  constructor(props) {\n    super(props);\n    this.props.setSelectedMessageType(this.props.match.params.messageType);\n  }\n\n  render() {\n    const messageTypes = this.props.messageTypes;\n    return <div style={styles.canvas}>\n                <List style={{\n        padding: '0px'\n      }}>\n                    {messageTypes && messageTypes.map(messageType => <div key={messageType.id}>\n                                <MessageTypeItem messageType={messageType} onClick={() => {\n            this.props.setSelectedMessageType(messageType.id);\n            this.props.updateInputFields('', '', []);\n            this.props.attachments.length > 0 && this.props.clearAttachments();\n            history.push(`/${messageType.id}`);\n          }} selectedMessageType={this.props.selectedMessageType} loading={messageType.loading} />\n                                <Divider />\n                            </div>)}\n                </List>\n                <Toggle style={{\n        width: '',\n        margin: '20px'\n      }} label={`${i18n.t('Auto refresh')} (${moment(this.props.refreshTimer).format('mm:ss')})`} toggled={this.props.autoRefresh} onToggle={() => this.props.setAutoRefresh(!this.props.autoRefresh)} />\n            </div>;\n  }\n\n}\n\nSidebarList.propTypes = {\n  attachments: propTypes.array,\n  autoRefresh: propTypes.bool,\n  clearAttachments: propTypes.func,\n  match: propTypes.object,\n  messageTypes: propTypes.array,\n  refreshTimer: propTypes.number,\n  selectedMessageType: propTypes.object,\n  setAutoRefresh: propTypes.func,\n  setSelectedMessageType: propTypes.func,\n  updateInputFields: propTypes.func\n};\n\nconst mapStateToProps = state => ({\n  selectedMessageType: state.messaging.selectedMessageType,\n  messageTypes: state.messaging.messageTypes\n});\n\nexport default compose(connect(mapStateToProps, {\n  setSelectedMessageType,\n  clearCheckedIds\n}, null, {\n  pure: false\n}))(SidebarList);","import theme from '../styles/theme.js';\nexport const messagePanelContainer = {\n  overflowY: 'scroll',\n  overflowX: 'hidden',\n  borderRightWidth: '1px',\n  borderRightColor: theme.palette.accent4Color,\n  height: 'calc(100vh - 95px)'\n};\nexport const subheader = {\n  paddingLeft: '0px',\n  fontSize: '20px'\n};","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport Subheader from 'material-ui/Subheader/Subheader';\nimport Checkbox from 'material-ui/Checkbox';\nimport Paper from 'material-ui/Paper';\nimport i18n from '@dhis2/d2-i18n';\nimport { setAllChecked, clearCheckedIds } from '../../actions/index.js';\nimport theme from '../../styles/theme.js';\nimport { fontFamily } from '../../constants/development.js';\nconst fontSize = '16px';\nconst styles = {\n  canvas(backgroundColor) {\n    return {\n      backgroundColor,\n      display: 'flex',\n      transition: 'all 0.2s ease-in-out',\n      boxSizing: 'border-box',\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      alignSelf: 'center',\n      boxShadow: 'none',\n      borderBottom: '1px solid #dfdfdf'\n    };\n  },\n\n  checkBox: {\n    flex: '0 0 32px',\n    display: 'flex',\n    alignSelf: 'center',\n    paddingLeft: '12px'\n  },\n  sender: {\n    fontFamily,\n    fontSize,\n    flex: 3,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    color: 'black',\n    paddingLeft: 10,\n    alignSelf: 'center'\n  },\n  subject: {\n    flex: 8,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    fontFamily,\n    fontSize,\n    color: 'black',\n    paddingLeft: 10\n  },\n  extendedLabel: {\n    flex: 2,\n    color: 'black',\n    fontSize,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    padding: '0 0 0 10px'\n  }\n};\n\nclass MessageConversationListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cursor: 'auto',\n      allChecked: false\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.allChecked && this.props.checkedIds.length < this.props.messages.length) {\n      this.setState({\n        allChecked: false\n      });\n    }\n  }\n\n  render() {\n    const displayExtendedChoices = this.props.displayExtendedChoices;\n    return <Paper style={styles.canvas(theme.palette.canvasColor)}>\n                <Checkbox checked={this.state.allChecked} style={styles.checkBox} onCheck={() => {\n        this.state.allChecked ? this.props.clearCheckedIds() : this.props.setAllChecked(this.props.messages.map(child => ({\n          id: child.id\n        })));\n        this.setState({\n          allChecked: !this.state.allChecked\n        });\n      }} />\n                <div style={styles.sender}>{i18n.t('Sender')}</div>\n                <Subheader style={styles.subject}>\n                    {i18n.t('Subject')}\n                </Subheader>\n                {displayExtendedChoices && <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Status')}\n                    </Subheader>}\n                {displayExtendedChoices && <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Priority')}\n                    </Subheader>}\n                {this.props.notification && <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Assignee')}\n                    </Subheader>}\n                <Subheader style={styles.extendedLabel}>\n                    {i18n.t('Date')}\n                </Subheader>\n            </Paper>;\n  }\n\n}\n\nMessageConversationListItem.propTypes = {\n  checkedIds: propTypes.array,\n  clearCheckedIds: propTypes.func,\n  displayExtendedChoices: propTypes.bool,\n  messages: propTypes.array,\n  notification: propTypes.bool,\n  setAllChecked: propTypes.func\n};\n\nconst mapStateToProps = state => ({\n  checkedIds: state.messaging.checkedIds,\n  isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup\n});\n\nexport default compose(connect(mapStateToProps, {\n  setAllChecked,\n  clearCheckedIds\n}))(MessageConversationListItem);","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport Subheader from 'material-ui/Subheader/Subheader';\nimport Checkbox from 'material-ui/Checkbox';\nimport Paper from 'material-ui/Paper';\nimport Flag from 'material-ui-icons/Flag';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../utils/history.js';\nimport { setChecked, setSelectedMessageConversation, markMessageConversations, clearCheckedIds, setFilter, updateInputFields, clearAttachments } from '../../actions/index.js';\nimport ExtendedChoiceLabel from '../Common/ExtendedChoiceLabel.js';\nimport theme from '../../styles/theme.js';\nimport { fontFamily } from '../../constants/development.js';\nimport moment from 'moment';\nconst styles = {\n  container(backgroundColor, wideview, cursor) {\n    return {\n      backgroundColor,\n      display: 'flex',\n      transition: 'all 0.2s ease-in-out',\n      cursor: cursor,\n      boxSizing: 'border-box',\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      boxShadow: 'none',\n      borderBottom: '1px solid #dfdfdf',\n      flexWrap: wideview ? 'nowrap' : 'wrap'\n    };\n  },\n\n  checkBox(wideview) {\n    return {\n      flex: '0 0 32px',\n      display: 'flex',\n      alignSelf: 'center',\n      paddingLeft: wideview ? 12 : 6\n    };\n  },\n\n  flag: {\n    color: theme.palette.followUp,\n    marginRight: 4\n  },\n\n  sender(wideview, fontWeight) {\n    return {\n      fontFamily,\n      fontSize: '14px',\n      flex: 3,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      display: 'flex',\n      alignItems: 'center',\n      color: 'black',\n      paddingLeft: wideview ? 10 : 0,\n      fontWeight\n    };\n  },\n\n  subject(wideview, fontColor, fontWeight) {\n    return {\n      flex: 8,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      paddingLeft: 10,\n      fontFamily,\n      color: fontColor,\n      fontWeight,\n      order: wideview ? 'inherit' : 10,\n      marginTop: wideview ? 0 : -10,\n      flexBasis: wideview ? '0%' : '100%'\n    };\n  },\n\n  dateFormat(wideview, fontColor, fontWeight) {\n    return {\n      flex: 2,\n      fontFamily,\n      paddingLeft: wideview ? 10 : 0,\n      paddingRight: wideview ? 0 : 10,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      textAlign: wideview ? '' : 'end',\n      color: fontColor,\n      fontWeight\n    };\n  }\n\n};\n\nclass MessageConversationListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: theme.palette.canvasColor,\n      cursor: 'auto'\n    };\n  }\n\n  onClick = messageConversation => {\n    this.props.setSelectedMessageConversation(messageConversation);\n\n    if (messageConversation && !messageConversation.read) {\n      this.props.markMessageConversations('read', [messageConversation.id], this.props.selectedMessageType);\n    }\n\n    this.props.updateInputFields('', '', []);\n    this.props.attachments.length > 0 && this.props.clearAttachments();\n    history.push(`/${messageConversation.messageType}/${messageConversation.id}`);\n  };\n  onMouseEnter = () => this.setState({\n    cursor: 'pointer',\n    backgroundColor: theme.palette.accent2Color\n  });\n  onMouseLeave = () => this.setState({\n    cursor: 'auto',\n    backgroundColor: theme.palette.canvasColor\n  });\n  getBackgroundColor = (messageConversation, checked) => {\n    const selectedMessageConversation = this.props.selectedMessageConversation && messageConversation.id === this.props.selectedMessageConversation.id;\n\n    if (checked && !selectedMessageConversation) {\n      return theme.palette.blue50;\n    } else if (selectedMessageConversation) {\n      return theme.palette.accent3Color;\n    }\n\n    return this.state.backgroundColor;\n  };\n\n  render() {\n    const messageConversation = this.props.messageConversation;\n    const title = messageConversation.lastSender ? messageConversation.lastSender.displayName : this.props.selectedMessageType.displayName;\n    const checked = !!this.props.checkedIds.find(x => x.id === messageConversation.id);\n    const displayExtendedChoices = this.props.displayExtendedChoices;\n    const displayTimeDiff = this.props.displayTimeDiff;\n    const today = moment();\n    const messageDate = moment(messageConversation.lastMessage).add(displayTimeDiff);\n    const fontWeight = !messageConversation.read ? 'bold' : '';\n    const fontColor = this.props.messageConversation.read ? 'black' : theme.palette.darkGray;\n    const containerBackgroundColor = this.getBackgroundColor(messageConversation, checked);\n    return <Paper style={styles.container(containerBackgroundColor, this.props.wideview, this.state.cursor)} onClick={event => {\n      const onClick = event.target.innerText !== undefined && event.target.innerText !== '';\n\n      if (onClick && !this.props.settingSelectedMessageConversation) {\n        this.onClick(messageConversation);\n        this.props.checkedIds.length > 0 && this.props.clearCheckedIds();\n\n        if (this.props.wideview && (this.props.messageFilter !== undefined || this.props.priorityFilter !== undefined || this.props.statusFilter !== undefined)) {\n          this.props.setFilter(undefined, 'MESSAGE');\n        }\n      }\n    }} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n                <Checkbox checked={checked} style={styles.checkBox(this.props.wideview)} onCheck={() => {\n        this.props.setChecked(messageConversation, !checked);\n      }} />\n                <div style={styles.sender(this.props.wideview, fontWeight)}>\n                    {messageConversation.followUp && <Flag style={styles.flag} />}\n                    <span>{title}</span>\n                </div>\n                <Subheader style={styles.subject(this.props.wideview, fontColor, fontWeight)}>\n                    {messageConversation.subject}\n                </Subheader>\n                {displayExtendedChoices && <ExtendedChoiceLabel showTitle={false} title={i18n.t('Status')} color={fontColor} fontWeight={fontWeight} label={messageConversation.status} />}\n                {displayExtendedChoices && <ExtendedChoiceLabel showTitle={false} title={i18n.t('Priority')} color={fontColor} fontWeight={fontWeight} label={messageConversation.priority} />}\n                {this.props.notification && this.props.wideview && <ExtendedChoiceLabel showTitle={false} title={i18n.t('Assignee')} color={fontColor} fontWeight={fontWeight} label={messageConversation.assignee ? messageConversation.assignee.displayName : undefined} />}\n                <Subheader style={styles.dateFormat(this.props.wideview, fontColor, fontWeight)}>\n                    {today.diff(messageDate, 'hours') < 72 ? messageDate.from(today) : today.year() === messageDate.year() ? messageDate.format('MMM DD') : messageDate.format('ll')}\n                </Subheader>\n            </Paper>;\n  }\n\n}\n\nMessageConversationListItem.propTypes = {\n  attachments: propTypes.array,\n  checkedIds: propTypes.array,\n  clearAttachments: propTypes.func,\n  clearCheckedIds: propTypes.func,\n  displayExtendedChoices: propTypes.bool,\n  displayTimeDiff: propTypes.number,\n  markMessageConversations: propTypes.func,\n  messageConversation: propTypes.object,\n  messageFilter: propTypes.string,\n  notification: propTypes.bool,\n  priorityFilter: propTypes.string,\n  selectedMessageConversation: propTypes.object,\n  selectedMessageType: propTypes.object,\n  setChecked: propTypes.func,\n  setFilter: propTypes.func,\n  setSelectedMessageConversation: propTypes.func,\n  settingSelectedMessageConversation: propTypes.bool,\n  statusFilter: propTypes.string,\n  updateInputFields: propTypes.func,\n  wideview: propTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  selectedMessageConversation: state.messaging.selectedMessageConversation,\n  settingSelectedMessageConversation: state.messaging.settingSelectedMessageConversation,\n  selectedMessageType: state.messaging.selectedMessageType,\n  checkedIds: state.messaging.checkedIds,\n  displayTimeDiff: state.messaging.displayTimeDiff,\n  messageFilter: state.messaging.messageFilter,\n  statusFilter: state.messaging.statusFilter,\n  priorityFilter: state.messaging.priorityFilter,\n  attachments: state.messaging.attachments\n});\n\nexport default compose(connect(mapStateToProps, {\n  setChecked,\n  setSelectedMessageConversation,\n  markMessageConversations,\n  clearCheckedIds,\n  setFilter,\n  updateInputFields,\n  clearAttachments\n}, null, {\n  pure: false\n}))(MessageConversationListItem);","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport Subheader from 'material-ui/Subheader/Subheader';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport i18n from '@dhis2/d2-i18n';\nimport { loadMessageConversations } from '../../actions/index.js';\nimport { messagePanelContainer } from '../../styles/style.js';\nimport theme from '../../styles/theme.js';\nimport ListItemHeader from './ListItemHeader.js';\nimport MessageConversationListItem from './MessageConversationListItem.js';\nimport { dedupeById, debounce } from '../../utils/helpers.js';\nconst NOTIFICATIONS = ['VALIDATION_RESULT', 'TICKET'];\nconst bottomEmptyHeight = 50;\nconst styles = {\n  canvas(wideview) {\n    return {\n      flex: '1 0',\n      maxWidth: wideview ? 'none' : '350px',\n      minWidth: wideview ? 'none' : '250px',\n      borderRightStyle: wideview ? '' : 'solid',\n      ...messagePanelContainer\n    };\n  },\n\n  loading: {\n    backgroundColor: theme.palette.accent2Color,\n    height: `${bottomEmptyHeight}px`,\n    transition: 'all 0.2s ease-in-out',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n};\n\nclass MessageConversationList extends Component {\n  onScroll = messageType => {\n    const messageList = document.getElementById('messagelist');\n\n    if (!this.props.selectedMessageType.loading && this.isBottom(messageList) && messageType.loaded < messageType.total) {\n      this.props.loadMessageConversations(messageType, messageType.id, true);\n    }\n  };\n  debouncedOnScroll = debounce(this.onScroll, 150);\n  isBottom = el => el.scrollHeight - el.scrollTop < window.outerHeight;\n\n  render() {\n    const messages = dedupeById(this.props.messageConversations[this.props.selectedMessageType.id]);\n    const messageType = this.props.selectedMessageType ? this.props.selectedMessageType : '';\n    const selectedValue = this.props.selectedMessageConversation ? this.props.selectedMessageConversation.id : '';\n    const notification = !!(NOTIFICATIONS.indexOf(messageType.id) + 1);\n    return <div id={'messagelist'} onScroll={() => this.debouncedOnScroll(this.props.selectedMessageType)} style={styles.canvas(this.props.wideview)}>\n                {this.props.wideview && <ListItemHeader notification={notification} displayExtendedChoices={this.props.displayExtendedChoices} messages={messages} />}\n                {messages && messages.length !== 0 ? messages.map(child => <MessageConversationListItem key={child.id} messageConversation={child} wideview={this.props.wideview} selectedValue={selectedValue} notification={notification} displayExtendedChoices={this.props.displayExtendedChoices} />) : !this.props.selectedMessageType.loading && <Subheader>\n                              {i18n.t(`No ${messageType.displayName.toLowerCase()} messages`)}\n                          </Subheader>}\n                {this.props.selectedMessageType.loading && <div style={styles.loading}>\n                        <CircularProgress style={{\n          marginTop: '10px'\n        }} color={theme.palette.primary1Color} />\n                    </div>}\n            </div>;\n  }\n\n}\n\nMessageConversationList.propTypes = {\n  displayExtendedChoices: propTypes.bool,\n  loadMessageConversations: propTypes.func,\n  messageConversations: propTypes.object,\n  selectedMessageConversation: propTypes.object,\n  selectedMessageType: propTypes.shape({\n    id: propTypes.string,\n    loading: propTypes.bool\n  }),\n  wideview: propTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  messageTypes: state.messaging.messageTypes,\n  messageFilter: state.messaging.messageFilter,\n  statusFilter: state.messaging.statusFilter,\n  priorityFilter: state.messaging.priorityFilter,\n  messageConversations: state.messaging.messageConversations,\n  selectedMessageConversation: state.messaging.selectedMessageConversation,\n  selectedMessageType: state.messaging.selectedMessageType\n});\n\nexport default compose(connect(mapStateToProps, {\n  loadMessageConversations\n}, null, {\n  pure: false\n}))(MessageConversationList);","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport i18n from '@dhis2/d2-i18n';\nimport { Card, CardActions, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport Subheader from 'material-ui/Subheader/Subheader';\nimport RadioButton from 'material-ui/RadioButton';\nimport { sendMessage, sendFeedbackMessage, displaySnackMessage, updateInputFields, addAttachment, removeAttachment, cancelAttachment, addRecipientByUserId } from '../../actions/index.js';\nimport history from '../../utils/history.js';\nimport { supportsAttachments } from '../../utils/helpers.js';\nimport SuggestionField from '../Common/SuggestionField.js';\nimport AttachmentUploadButton from '../Attachments/AttachmentUploadButton.js';\nimport { NEGATIVE } from '../../constants/development.js';\nimport Attachments from '../Attachments/Attachments.js';\nimport { subheader } from '../../styles/style.js';\nconst styles = {\n  canvas: {\n    flex: '3 0',\n    margin: '10px',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    height: 'calc(100vh - 110px)'\n  },\n  messageTypeField: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  messageType: {\n    width: '300px',\n    marginTop: '10px'\n  }\n};\n\nclass CreateMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMessageFeedback: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      addRecipientByUserId\n    } = this.props;\n    const {\n      messageId,\n      recipientId\n    } = this.props.match.params; // This happens when the \"Send message\" button in the user-app is clicked\n\n    if (messageId === 'create' && recipientId) {\n      addRecipientByUserId(recipientId);\n    }\n  }\n\n  subjectUpdate = (event, newValue) => {\n    this.props.updateInputFields(newValue, this.props.input, this.props.recipients);\n  };\n  inputUpdate = (event, newValue) => {\n    this.props.updateInputFields(this.props.subject, newValue, this.props.recipients);\n  };\n  updateRecipients = recipients => {\n    this.props.updateInputFields(this.props.subject, this.props.input, recipients);\n  };\n  sendMessage = () => {\n    const messageTypeId = this.state.isMessageFeedback ? 'TICKET' : 'PRIVATE';\n    const messageType = this.props.messageTypes.find(messageType => messageType.id === messageTypeId);\n\n    if (this.state.isMessageFeedback) {\n      this.props.sendFeedbackMessage(messageType);\n      history.push('/TICKET');\n    } else {\n      const users = this.props.recipients.filter(r => r.type === 'user');\n      const userGroups = this.props.recipients.filter(r => r.type === 'userGroup');\n      const organisationUnits = this.props.recipients.filter(r => r.type === 'organisationUnit');\n      this.props.sendMessage({\n        users,\n        userGroups,\n        organisationUnits,\n        messageType\n      });\n      history.push('/PRIVATE');\n    }\n  };\n  wipeInput = () => {\n    this.props.updateInputFields('', '', []);\n    this.props.attachments.length > 0 && this.props.clearAttachments();\n  };\n  handleDiscard = () => {\n    const message = i18n.t('Message discarded');\n    const snackType = NEGATIVE;\n\n    const onSnackActionClick = () => history.push('/PRIVATE/create');\n\n    const onSnackRequestClose = () => this.wipeInput();\n\n    this.props.displaySnackMessage({\n      message,\n      onSnackActionClick,\n      onSnackRequestClose,\n      snackType\n    });\n    history.push('/PRIVATE');\n  };\n\n  render() {\n    const disabled = this.props.subject === '' || this.props.input === '' || !this.state.isMessageFeedback && this.props.recipients.length === 0;\n    const discardDisabled = this.props.subject === '' && this.props.input === '' && !this.state.isMessageFeedback && this.props.recipients.length === 0;\n    return <div style={styles.canvas}>\n                <Subheader style={subheader}> {i18n.t('Create')}</Subheader>\n                <Card>\n                    <CardText>\n                        <SuggestionField style={{\n            margin: '0px'\n          }} label={i18n.t('To')} disabled={this.state.isMessageFeedback} recipients={this.state.isMessageFeedback ? [{\n            id: 'id',\n            displayName: i18n.t('Feedback recipient group')\n          }] : this.props.recipients} updateRecipients={this.updateRecipients} inputHeight={'100px'} />\n                        <div style={styles.messageTypeField}>\n                            <div style={styles.messageType}>\n                                <RadioButton label={i18n.t('Private message')} checked={!this.state.isMessageFeedback} onCheck={() => {\n                this.setState({\n                  isMessageFeedback: !this.state.isMessageFeedback\n                });\n              }} />\n                            </div>\n                            <div style={styles.messageType}>\n                                <RadioButton label={i18n.t('Feedback message')} checked={this.state.isMessageFeedback} onCheck={() => {\n                this.setState({\n                  isMessageFeedback: !this.state.isMessageFeedback\n                });\n              }} />\n                            </div>\n                        </div>\n                        <TextField floatingLabelText={i18n.t('Subject')} fullWidth value={this.props.subject} onChange={this.subjectUpdate} />\n                        <TextField key={'createMessage'} id={'createMessage'} rows={5} underlineShow={false} value={this.props.input} multiLine fullWidth floatingLabelText={i18n.t('Message')} onChange={this.inputUpdate} />\n                        {this.props.enableAttachments && <Attachments dataDirection={'upload'} attachments={this.props.attachments} removeAttachment={attachment => this.props.removeAttachment(attachment.id)} cancelAttachment={this.props.cancelAttachment} />}\n                        <CardActions style={{\n            paddingLeft: '0px'\n          }}>\n                            <RaisedButton primary disabled={disabled} label={i18n.t('Send')} onClick={() => this.sendMessage()} />\n                            <FlatButton label={i18n.t('Discard')} disabled={discardDisabled} onClick={this.handleDiscard} />\n                            {this.props.enableAttachments && <AttachmentUploadButton addAttachment={attachment => {\n              this.props.addAttachment(attachment);\n            }} />}\n                        </CardActions>\n                    </CardText>\n                </Card>\n            </div>;\n  }\n\n}\n\nCreateMessage.propTypes = {\n  addAttachment: propTypes.func,\n  addRecipientByUserId: propTypes.func,\n  attachments: propTypes.array,\n  cancelAttachment: propTypes.func,\n  clearAttachments: propTypes.func,\n  displaySnackMessage: propTypes.func,\n  enableAttachments: propTypes.bool,\n  input: propTypes.string,\n  match: propTypes.object,\n  messageTypes: propTypes.array,\n  recipients: propTypes.array,\n  removeAttachment: propTypes.func,\n  sendFeedbackMessage: propTypes.func,\n  sendMessage: propTypes.func,\n  subject: propTypes.string,\n  updateInputFields: propTypes.func\n};\n\nconst mapStateToProps = state => ({\n  messageTypes: state.messaging.messageTypes,\n  subject: state.messaging.subject,\n  input: state.messaging.input,\n  recipients: state.messaging.recipients,\n  attachments: state.messaging.attachments,\n  enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion)\n});\n\nexport default compose(connect(mapStateToProps, {\n  sendMessage,\n  sendFeedbackMessage,\n  displaySnackMessage,\n  updateInputFields,\n  addAttachment,\n  removeAttachment,\n  cancelAttachment,\n  addRecipientByUserId\n}, null, {\n  pure: false\n}))(CreateMessage);","import i18n from '@dhis2/d2-i18n';\nconst extendedChoices = {\n  STATUS: [{\n    key: 'NONE',\n    value: 'NONE',\n    primaryText: i18n.t('No status')\n  }, {\n    key: 'OPEN',\n    value: 'OPEN',\n    primaryText: i18n.t('Open')\n  }, {\n    key: 'PENDING',\n    value: 'PENDING',\n    primaryText: i18n.t('Pending')\n  }, {\n    key: 'INVALID',\n    value: 'INVALID',\n    primaryText: i18n.t('Invalid')\n  }, {\n    key: 'SOLVED',\n    value: 'SOLVED',\n    primaryText: i18n.t('Solved')\n  }],\n  PRIORITY: [{\n    key: 'NONE',\n    value: 'NONE',\n    primaryText: i18n.t('No priority')\n  }, {\n    key: 'HIGH',\n    value: 'HIGH',\n    primaryText: i18n.t('High')\n  }, {\n    key: 'MEDIUM',\n    value: 'MEDIUM',\n    primaryText: i18n.t('Medium')\n  }, {\n    key: 'LOW',\n    value: 'LOW',\n    primaryText: i18n.t('Low')\n  }]\n};\nexport default extendedChoices;","import React from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { Provider, ReactReduxContext } from 'react-redux';\nimport Dialog from 'material-ui/Dialog';\nexport default function DialogWithReduxState(props) {\n  return <ReactReduxContext.Consumer>\n            {ctx => <Dialog {...props}>\n                    <Provider store={ctx.store}>{props.children}</Provider>\n                </Dialog>}\n        </ReactReduxContext.Consumer>;\n}\nDialogWithReduxState.propTypes = {\n  children: propTypes.node\n};","import React from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport SuggestionField from './SuggestionField.js';\nimport DialogWithReduxState from './DialogWithReduxState.js';\n\nconst AssignToDialog = ({\n  open,\n  onRequestClose,\n  updateMessageConversations,\n  messageType,\n  feedbackRecipientsId\n}) => <DialogWithReduxState open={open} onRequestClose={() => {\n  onRequestClose();\n}}>\n        <SuggestionField onSuggestionClick={chip => {\n    updateMessageConversations([chip.id]);\n    onRequestClose();\n  }} searchOnlyUsers searchOnlyFeedbackRecipients={messageType.id === 'TICKET'} feedbackRecipientsId={feedbackRecipientsId} recipients={[]} key={'suggestionField'} label={i18n.t('Assignee')} />\n    </DialogWithReduxState>;\n\nAssignToDialog.propTypes = {\n  feedbackRecipientsId: propTypes.string,\n  messageType: propTypes.shape({\n    id: propTypes.string\n  }),\n  open: propTypes.bool,\n  updateMessageConversations: propTypes.func,\n  onRequestClose: propTypes.func\n};\nexport default AssignToDialog;","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport FlatButton from 'material-ui/FlatButton';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport ArrowDropRight from 'material-ui/svg-icons/navigation-arrow-drop-right';\nimport Assignment from 'material-ui-icons/Assignment';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\nimport IconButton from 'material-ui/IconButton';\nimport Subheader from 'material-ui/Subheader';\nimport Divider from 'material-ui/Divider';\nimport Delete from 'material-ui-icons/Delete';\nimport MarkUnread from 'material-ui-icons/Markunread';\nimport Done from 'material-ui-icons/Done';\nimport i18n from '@dhis2/d2-i18n';\nimport { clearCheckedIds, clearSelectedMessageConversation, deleteMessageConversations, updateMessageConversations, markMessageConversations } from '../../actions/index.js';\nimport extendedChoices from '../../constants/extendedChoices.js';\nimport history from '../../utils/history.js';\nimport AssignToDialog from './AssignToDialog.js';\nimport DialogWithReduxState from './DialogWithReduxState.js';\nconst multiSelectDisplayLimit = 99;\nconst styles = {\n  canvas: {\n    width: '400px',\n    display: 'flex'\n  },\n  extendedChoices: {\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  nrSelected: {\n    padding: '0px 0px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }\n};\n\nclass ToolbarExtendedChoicePicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkedItems: false,\n      dialogOpen: false,\n      assignToOpen: false\n    };\n  }\n\n  getIds = () => this.props.selectedMessageConversation && this.props.checkedIds.length === 0 ? [this.props.selectedMessageConversation.id] : this.props.checkedIds.map(id => id.id);\n  updateMessageConversation = (identifier, value) => {\n    const {\n      selectedMessageType: messageType,\n      selectedMessageConversation\n    } = this.props;\n    const messageConversationIds = this.getIds();\n    this.props.updateMessageConversations({\n      messageConversationIds,\n      identifier,\n      value,\n      messageType,\n      selectedMessageConversation\n    });\n    this.props.checkedIds.length > 0 && this.props.clearCheckedIds();\n  };\n  markMessageConversations = mode => {\n    const ids = this.getIds();\n    this.props.markMessageConversations(mode, ids, this.props.selectedMessageType);\n    this.props.checkedIds.length > 0 && this.props.clearCheckedIds();\n  };\n  toggleDialog = () => {\n    this.setState({\n      dialogOpen: !this.state.dialogOpen\n    });\n  };\n\n  render() {\n    const messageConversation = this.props.selectedMessageConversation;\n    const multiSelect = this.props.checkedIds.length > 0;\n    const display = multiSelect || messageConversation !== undefined;\n    const actionButtons = <>\n                <FlatButton label={i18n.t('Cancel')} primary onClick={() => this.toggleDialog()} />\n                <FlatButton label={i18n.t('Submit')} primary keyboardFocused onClick={() => {\n        this.props.deleteMessageConversations(this.getIds(), this.props.selectedMessageType);\n        this.props.clearCheckedIds();\n        this.toggleDialog();\n\n        if (this.props.selectedMessageConversation) {\n          this.props.clearSelectedMessageConversation();\n          history.push(`/${this.props.selectedMessageType.id}`);\n        }\n      }} />\n            </>;\n    const displayNumberOfCheckedIds = this.props.checkedIds.length > multiSelectDisplayLimit ? `${multiSelectDisplayLimit}+` : this.props.checkedIds.length;\n    return display ? <div style={styles.canvas}>\n                <DialogWithReduxState title={i18n.t('Are you sure you want to delete selected message conversation(s)?')} actions={actionButtons} modal={false} open={this.state.dialogOpen} onRequestClose={this.toggleDialog} />\n                <AssignToDialog open={this.state.assignToOpen} onRequestClose={() => this.setState({\n        assignToOpen: !this.state.assignToOpen\n      })} updateMessageConversations={id => this.updateMessageConversation('ASSIGNEE', id)} messageType={this.props.selectedMessageType} feedbackRecipientsId={this.props.feedbackRecipientsId} />\n\n                <div style={styles.extendedChoices}>\n                    <IconButton tooltip={i18n.t('Delete selected')} onClick={() => {\n          this.toggleDialog();\n        }}>\n                        <Delete />\n                    </IconButton>\n\n                    <IconButton tooltip={i18n.t('Mark selected as unread')} onClick={() => {\n          this.markMessageConversations('unread');\n        }}>\n                        <MarkUnread />\n                    </IconButton>\n\n                    <IconButton tooltip={i18n.t('Mark selected as read')} onClick={() => {\n          this.markMessageConversations('read');\n        }}>\n                        <Done />\n                    </IconButton>\n                    {this.props.displayExtendedChoices && <IconButton onClick={() => this.setState({\n          assignToOpen: !this.state.assignToOpen\n        })} tooltip={i18n.t('Assign selected')}>\n                            <Assignment />\n                        </IconButton>}\n                    {<IconMenu iconButtonElement={<IconButton>\n                                    <MoreVertIcon />\n                                </IconButton>} anchorOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }} targetOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}>\n                            <MenuItem key={'markFollowUp'} value={'markFollowUp'} primaryText={i18n.t('Mark for followup')} onClick={() => this.updateMessageConversation('FOLLOW_UP', true)} />\n                            <MenuItem key={'clearFollowUp'} value={'clearFollowUp'} primaryText={i18n.t('Clear followup')} onClick={() => this.updateMessageConversation('FOLLOW_UP', false)} />\n                            {this.props.displayExtendedChoices && <Divider />}\n                            {this.props.displayExtendedChoices && <MenuItem key={'clearAssigned'} value={'clearAssigned'} primaryText={i18n.t('Clear assignee')} onClick={() => this.updateMessageConversation('ASSIGNEE', undefined)} />}\n                            {this.props.displayExtendedChoices && <MenuItem primaryText={i18n.t('Set status')} key={'setStatus'} rightIcon={<ArrowDropRight />} menuItems={extendedChoices.STATUS.map(elem => <MenuItem key={`${elem.key}_status`} value={elem.value} primaryText={elem.primaryText} onClick={() => this.updateMessageConversation('STATUS', elem.key)} />)} />}\n                            {this.props.displayExtendedChoices && <MenuItem primaryText={i18n.t('Set priority')} key={'setPriority'} rightIcon={<ArrowDropRight />} menuItems={extendedChoices.PRIORITY.map(elem => <MenuItem key={`${elem.key}_priority`} value={elem.value} primaryText={elem.primaryText} onClick={() => this.updateMessageConversation('PRIORITY', elem.key)} />)} />}\n                        </IconMenu>}\n                </div>\n                {multiSelect && <Subheader style={styles.nrSelected}>\n                        {`${displayNumberOfCheckedIds} ${i18n.t('selected')}`}\n                    </Subheader>}\n            </div> : <div />;\n  }\n\n}\n\nToolbarExtendedChoicePicker.propTypes = {\n  checkedIds: propTypes.array,\n  clearCheckedIds: propTypes.func,\n  clearSelectedMessageConversation: propTypes.func,\n  deleteMessageConversations: propTypes.func,\n  displayExtendedChoices: propTypes.bool,\n  feedbackRecipientsId: propTypes.string,\n  markMessageConversations: propTypes.func,\n  selectedMessageConversation: propTypes.object,\n  selectedMessageType: propTypes.object,\n  updateMessageConversations: propTypes.func\n};\n\nconst mapStateToProps = state => ({\n  selectedMessageType: state.messaging.selectedMessageType,\n  selectedMessageConversation: state.messaging.selectedMessageConversation,\n  checkedIds: state.messaging.checkedIds,\n  feedbackRecipientsId: state.messaging.feedbackRecipientsId\n});\n\nexport default compose(connect(mapStateToProps, {\n  clearCheckedIds,\n  clearSelectedMessageConversation,\n  deleteMessageConversations,\n  updateMessageConversations,\n  markMessageConversations\n}, null, {\n  pure: false\n}))(ToolbarExtendedChoicePicker);","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport ViewFancy from 'material-ui-icons/ViewList';\nimport ViewList from 'material-ui-icons/ViewHeadline';\nimport FlatButton from 'material-ui/FlatButton';\nimport Paper from 'material-ui/Paper';\nimport CreateMessageIcon from 'material-ui-icons/Add';\nimport NavigationBack from 'material-ui-icons/ArrowBack';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport Subheader from 'material-ui/Subheader';\nimport IconMenu from 'material-ui/IconMenu';\nimport IconButton from 'material-ui/IconButton';\nimport Checkbox from 'material-ui/Checkbox/Checkbox';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport i18n from '@dhis2/d2-i18n';\nimport history from '../../utils/history.js';\nimport theme from '../../styles/theme.js';\nimport extendedChoices from '../../constants/extendedChoices.js';\nimport ToolbarExtendedChoicePicker from './ToolbarExtendedChoicePicker.js';\nimport { debounce } from '../../utils/helpers.js';\nconst headerHeight = '48px';\nconst searchDelay = 300;\nconst styles = {\n  canvas(checkedOptions) {\n    return {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      backgroundColor: checkedOptions ? theme.palette.blue50 : theme.palette.accent2Color,\n      zIndex: 10\n    };\n  },\n\n  checkedOption: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    minWidth: '200px',\n    margin: '6px 0'\n  },\n  filterControl: {\n    flex: 2,\n    height: headerHeight,\n    marginRight: 16,\n    maxWidth: 256\n  },\n  rightHandCanvas: {\n    flex: '2 0',\n    display: 'flex',\n    paddingLeft: 16\n  },\n  // IE11 has buggy support for `justifyContent: flex-end;`\n  // to achieve the same result we use a spacer div\n  ie11Spacer: {\n    flexGrow: 1\n  },\n  iconMenu: {\n    width: '30px',\n    display: 'flex'\n  }\n};\n\nclass Toolbar extends Component {\n  state = {\n    lastMessageFilter: ''\n  };\n  debouncedSearch = debounce(this.search, searchDelay);\n\n  search(messageFilter) {\n    if (this.props.selectedMessageType && this.state.lastMessageFilter !== messageFilter) {\n      this.props.loadMessageConversations(this.props.selectedMessageType, this.props.selectedMessageType.id);\n      this.setState({\n        lastMessageFilter: messageFilter\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedMessageType && this.props.selectedMessageType.id !== prevProps.selectedMessageType.id) {\n      this.debouncedSearch('');\n      this.props.messageFilter !== undefined && this.props.setFilter(undefined, 'MESSAGE');\n      this.props.statusFilter !== undefined && this.props.setFilter(undefined, 'STATUS');\n      this.props.priorityFilter !== undefined && this.props.setFilter(undefined, 'PRIORITY');\n      this.props.assignedToMeFilter && this.props.setFilter(false, 'ASSIGNED_TO_ME');\n      this.props.markedForFollowUpFilter && this.props.setFilter(false, 'MARKED_FOR_FOLLOWUP');\n      this.props.unreadFilter && this.props.setFilter(false, 'UNREAD');\n    }\n\n    if (this.props.selectedMessageType !== undefined && !this.props.selectedMessageType.loading && (prevProps.statusFilter !== this.props.statusFilter || prevProps.priorityFilter !== this.props.priorityFilter || prevProps.assignedToMeFilter !== this.props.assignedToMeFilter || prevProps.markedForFollowUpFilter !== this.props.markedForFollowUpFilter || prevProps.unreadFilter !== this.props.unreadFilter || prevProps.selectedMessageType === undefined || prevProps.selectedMessageType.id !== this.props.selectedMessageType.id)) {\n      this.props.loadMessageConversations(this.props.selectedMessageType, this.props.selectedMessageType.id);\n    }\n  }\n\n  render() {\n    const id = this.props.id;\n    const displayExtendedChoices = this.props.displayExtendedChoices;\n    const checkedOptions = this.props.checkedOptions;\n    const displaySearch = !this.props.wideview || this.props.selectedMessageConversation === undefined && id !== 'create';\n    return <Paper style={styles.canvas(checkedOptions)}>\n                <div>\n                    {!checkedOptions && <FlatButton style={styles.checkedOption} icon={<CreateMessageIcon />} onClick={() => history.push('/PRIVATE/create')} label={i18n.t('Compose')} />}\n\n                    {checkedOptions && <FlatButton style={styles.checkedOption} icon={<NavigationBack />} onClick={() => this.props.clearCheckedIds()} label={i18n.t('Deselect all')} />}\n                </div>\n\n                <ToolbarExtendedChoicePicker displayExtendedChoices={displayExtendedChoices} />\n\n                <div style={styles.rightHandCanvas}>\n                    <div style={styles.ie11Spacer} />\n                    {displayExtendedChoices && displaySearch && !checkedOptions && <SelectField style={styles.filterControl} labelStyle={{\n          color: this.props.statusFilter === undefined ? 'lightGray' : 'black',\n          top: this.props.statusFilter === undefined ? '-15px' : '-2px'\n        }} selectedMenuItemStyle={{\n          color: theme.palette.primary1Color\n        }} floatingLabelText={this.props.statusFilter === undefined ? i18n.t('Status') : ''} floatingLabelStyle={{\n          top: '15px'\n        }} iconStyle={{\n          top: this.props.statusFilter === undefined ? '-15px' : '0px'\n        }} value={this.props.statusFilter} onChange={(event, key, payload) => {\n          this.props.setFilter(payload === null ? undefined : payload, 'STATUS');\n        }}>\n                                <MenuItem key={null} value={null} primaryText={''} />\n                                {extendedChoices.STATUS.map(elem => <MenuItem key={elem.key} value={elem.value} primaryText={elem.primaryText} />)}\n                            </SelectField>}\n\n                    {displayExtendedChoices && displaySearch && !checkedOptions && <SelectField style={styles.filterControl} labelStyle={{\n          color: this.props.priorityFilter === undefined ? 'lightGray' : 'black',\n          top: this.props.priorityFilter === undefined ? '-15px' : '-2px'\n        }} selectedMenuItemStyle={{\n          color: theme.palette.primary1Color\n        }} floatingLabelText={this.props.priorityFilter === undefined ? i18n.t('Priority') : ''} floatingLabelStyle={{\n          top: '15px'\n        }} iconStyle={{\n          top: this.props.priorityFilter === undefined ? '-15px' : '0px'\n        }} value={this.props.priorityFilter} onChange={(event, key, payload) => {\n          this.props.setFilter(payload === null ? undefined : payload, 'PRIORITY');\n        }}>\n                                <MenuItem key={null} value={null} primaryText={''} />\n                                {extendedChoices.PRIORITY.map(elem => <MenuItem key={elem.key} value={elem.value} primaryText={elem.primaryText} />)}\n                            </SelectField>}\n\n                    {!checkedOptions && displaySearch && <TextField style={styles.filterControl} fullWidth hintText={i18n.t('Search')} value={this.props.messageFilter || ''} onChange={(event, messageFilter) => {\n          this.debouncedSearch(messageFilter);\n          this.props.setFilter(messageFilter, 'MESSAGE');\n        }} type=\"search\" />}\n\n                    {!checkedOptions && displaySearch && <IconMenu iconButtonElement={<IconButton>\n                                    <MoreVertIcon />\n                                </IconButton>} anchorOrigin={{\n          horizontal: 'right',\n          vertical: 'top'\n        }} targetOrigin={{\n          horizontal: 'right',\n          vertical: 'top'\n        }} style={styles.iconMenu} menuStyle={{\n          overflowX: 'hidden'\n        }}>\n                            <Subheader style={{\n            padding: '0px 16px'\n          }}>\n                                {i18n.t('Set filter')}\n                            </Subheader>\n                            {this.props.displayExtendedChoices && <Checkbox style={{\n            padding: '0px 16px'\n          }} key={'assignedToMeFilter'} label={i18n.t('Assigned to me')} checked={this.props.assignedToMeFilter} onClick={() => {\n            this.props.setFilter(!this.props.assignedToMeFilter, 'ASSIGNED_TO_ME');\n          }} />}\n                            <Checkbox style={{\n            padding: '0px 16px'\n          }} key={'markedForFollowUpFilter'} label={i18n.t('Marked for followup')} checked={this.props.markedForFollowUpFilter} onClick={() => {\n            this.props.setFilter(!this.props.markedForFollowUpFilter, 'MARKED_FOR_FOLLOWUP');\n          }} />\n                            <Checkbox style={{\n            padding: '0px 16px'\n          }} key={'unreadFilter'} label={i18n.t('Unread messages')} checked={this.props.unreadFilter} onClick={() => {\n            this.props.setFilter(!this.props.unreadFilter, 'UNREAD');\n          }} />\n                        </IconMenu>}\n                    <FlatButton style={{\n          width: '50px',\n          alignSelf: 'center'\n        }} icon={!this.props.wideview ? <ViewList /> : <ViewFancy />} onClick={() => this.props.toogleWideview()} />\n                </div>\n            </Paper>;\n  }\n\n}\n\nToolbar.propTypes = {\n  assignedToMeFilter: propTypes.bool,\n  checkedOptions: propTypes.bool,\n  clearCheckedIds: propTypes.func,\n  displayExtendedChoices: propTypes.bool,\n  id: propTypes.string,\n  loadMessageConversations: propTypes.func,\n  markedForFollowUpFilter: propTypes.bool,\n  messageFilter: propTypes.string,\n  priorityFilter: propTypes.string,\n  selectedMessageConversation: propTypes.object,\n  selectedMessageType: propTypes.object,\n  setFilter: propTypes.func,\n  statusFilter: propTypes.string,\n  toogleWideview: propTypes.func,\n  unreadFilter: propTypes.bool,\n  wideview: propTypes.bool\n};\nexport default Toolbar;","import React, { Component } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport Subheader from 'material-ui/Subheader/Subheader';\nimport MailIcon from 'material-ui-icons/MailOutline';\nimport i18n from '@dhis2/d2-i18n';\nimport * as api from '../../api/api.js';\nimport { loadMessageConversations, setIsInFeedbackRecipientGroup, clearCheckedIds, setSelectedMessageConversation, setSelectedMessageType, clearSelectedMessageConversation, updateInputFields, setFilter, setDisplayTimeDiff, clearAttachments } from '../../actions/index.js';\nimport theme from '../../styles/theme.js';\nimport MessageConversation from '../MessageConversation/MessageConversation.js';\nimport SidebarList from '../List/SidebarList.js';\nimport MessageConversationList from '../List/MessageConversationList.js';\nimport CreateMessage from '../MessageConversation/CreateMessage.js';\nimport Toolbar from '../Common/Toolbar.js';\nimport { subheader } from '../../styles/style.js';\nimport './MessagingCenter.css';\nconst EXTENDED_CHOICES = ['TICKET', 'VALIDATION_RESULT'];\nconst refreshTimerTotal = 300000; // 5 minutes\n\nconst refreshTimerInterval = 10000; // 10 seconds\n\nclass MessagingCenter extends Component {\n  constructor(props) {\n    super(props);\n    this.intervalId = null;\n    this.state = {\n      autoRefresh: false,\n      checkedItems: false,\n      refreshTimer: refreshTimerTotal,\n      wideview: true\n    };\n  }\n\n  componentDidMount() {\n    const selectedMessageType = this.props.match.params.messageType;\n    const selectedId = this.props.match.params.messageId;\n\n    if (selectedId && selectedId !== selectedMessageType && selectedId !== 'create') {\n      const initialMessageConversation = {\n        id: selectedId\n      };\n      this.props.setSelectedMessageConversation(initialMessageConversation);\n    }\n\n    api.isInFeedbackRecipientGroup(this.props.currentUser).then(result => this.props.setIsInFeedbackRecipientGroup(result));\n    this.props.messageTypes.map(messageType => this.props.loadMessageConversations(messageType, selectedMessageType));\n    this.props.setDisplayTimeDiff();\n  }\n\n  componentDidUpdate() {\n    const selectedMessageType = this.props.match.params.messageType;\n    const selectedId = this.props.match.params.messageId;\n\n    if (!this.props.settingSelectedMessageConversation && selectedId && selectedMessageType !== selectedId && selectedId !== 'create' && (this.props.selectedMessageConversation === undefined || selectedId !== this.props.selectedMessageConversation.id)) {\n      const initialMessageConversation = {\n        id: selectedId\n      };\n      this.props.setSelectedMessageConversation(initialMessageConversation);\n    }\n\n    if (selectedMessageType === selectedId && selectedMessageType !== this.props.selectedMessageType.id) {\n      this.props.setSelectedMessageType(selectedMessageType);\n    }\n\n    if ((selectedMessageType === selectedId || selectedId === 'create') && this.props.selectedMessageConversation !== undefined) {\n      this.props.clearSelectedMessageConversation();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  setAutoRefresh = autoRefresh => {\n    // Cancel existing interval if it shouldn't autorefresh\n    if (!autoRefresh && this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n\n    if (autoRefresh) {\n      this.intervalId = setInterval(this.tick, refreshTimerInterval);\n    }\n\n    this.setState({\n      autoRefresh,\n      refreshTimer: refreshTimerTotal\n    });\n  };\n  tick = () => {\n    const timerHasElapsed = this.state.refreshTimer - refreshTimerInterval <= 0;\n\n    if (timerHasElapsed) {\n      this.refresh();\n      this.setState({\n        refreshTimer: refreshTimerTotal\n      });\n    } else {\n      this.setState(prevState => ({\n        refreshTimer: prevState.refreshTimer - refreshTimerInterval\n      }));\n    }\n  };\n  refresh = () => {\n    this.props.messageTypes.map(messageType => this.props.loadMessageConversations(messageType, this.props.selectedMessageType));\n\n    if (this.props.selectedMessageConversation) {\n      this.props.setSelectedMessageConversation(this.props.selectedMessageConversation);\n    }\n  };\n  toogleWideview = () => {\n    this.setState({\n      wideview: !this.state.wideview\n    });\n  };\n\n  render() {\n    const id = this.props.match.params.messageId;\n    const displayExtendedChoices = (this.props.selectedMessageType ? !!(EXTENDED_CHOICES.indexOf(this.props.selectedMessageType.id) + 1) : false) && this.props.isInFeedbackRecipientGroup;\n    return <div className=\"messaging-center\">\n                <Toolbar {...this.props} id={id} wideview={this.state.wideview} displayExtendedChoices={displayExtendedChoices} toogleWideview={this.toogleWideview} />\n                <div className=\"messaging-center__main-content\">\n                    <SidebarList {...this.props} drawerOpen={this.state.drawerOpen} messageTypes={this.props.messageTypes} autoRefresh={this.state.autoRefresh} refreshTimer={this.state.refreshTimer} setAutoRefresh={this.setAutoRefresh} />\n\n                    {this.props.selectedMessageConversation === undefined && !(this.state.wideview && id === 'create') && <MessageConversationList wideview={this.state.wideview} displayExtendedChoices={displayExtendedChoices && this.state.wideview} />}\n\n                    {id === 'create' && <CreateMessage {...this.props} wideview={this.state.wideview} />}\n\n                    {this.props.selectedMessageConversation !== undefined && !this.state.wideview && <MessageConversationList wideview={this.state.wideview} displayExtendedChoices={displayExtendedChoices && this.state.wideview} />}\n\n                    {this.props.selectedMessageConversation && id !== 'create' ? this.props.selectedMessageConversation !== undefined && <MessageConversation {...this.props} messageConversation={this.props.selectedMessageConversation} wideview={this.state.wideview} disableLink displayExtendedChoices={displayExtendedChoices} /> : !this.state.wideview && id !== 'create' && <div className=\"messaging-center__no-message-selected\">\n                                  <Subheader style={subheader}>\n                                      {i18n.t('Select a message')}\n                                  </Subheader>\n                                  <MailIcon style={{\n            color: theme.palette.primary1Color,\n            width: 120,\n            height: 120\n          }} />\n                              </div>}\n                </div>\n            </div>;\n  }\n\n}\n\nMessagingCenter.propTypes = {\n  clearSelectedMessageConversation: propTypes.func,\n  currentUser: propTypes.object,\n  isInFeedbackRecipientGroup: propTypes.bool,\n  loadMessageConversations: propTypes.func,\n  match: propTypes.object,\n  messageTypes: propTypes.array,\n  selectedMessageConversation: propTypes.object,\n  selectedMessageType: propTypes.object,\n  setDisplayTimeDiff: propTypes.func,\n  setIsInFeedbackRecipientGroup: propTypes.func,\n  setSelectedMessageConversation: propTypes.func,\n  setSelectedMessageType: propTypes.func,\n  settingSelectedMessageConversation: propTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.messaging.currentUser,\n  snackMessage: state.messaging.snackMessage,\n  messageTypes: state.messaging.messageTypes,\n  messageConversations: state.messaging.messageConversations,\n  messageFilter: state.messaging.messageFilter,\n  statusFilter: state.messaging.statusFilter,\n  priorityFilter: state.messaging.priorityFilter,\n  assignedToMeFilter: state.messaging.assignedToMeFilter,\n  markedForFollowUpFilter: state.messaging.markedForFollowUpFilter,\n  unreadFilter: state.messaging.unreadFilter,\n  selectedMessageType: state.messaging.selectedMessageType,\n  selectedMessageConversation: state.messaging.selectedMessageConversation,\n  settingSelectedMessageConversation: state.messaging.settingSelectedMessageConversation,\n  checkedIds: state.messaging.checkedIds,\n  checkedOptions: state.messaging.checkedIds.length > 0,\n  loaded: state.messaging.loaded,\n  isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n  attachments: state.messaging.attachments\n});\n\nexport default compose(connect(mapStateToProps, {\n  loadMessageConversations,\n  setIsInFeedbackRecipientGroup,\n  clearCheckedIds,\n  setSelectedMessageConversation,\n  setSelectedMessageType,\n  clearSelectedMessageConversation,\n  updateInputFields,\n  setFilter,\n  setDisplayTimeDiff,\n  clearAttachments\n}, null, {\n  pure: false\n}))(MessagingCenter);","import { Router, Route } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport React from 'react';\nimport MessagingCenter from '../MessagingCenter/MessagingCenter.js';\nimport history from '../../utils/history.js';\n\nconst Routes = () => <Router history={history}>\n        <div>\n            <Route exact path=\"/\" component={() => <Redirect to=\"/PRIVATE\" />} />\n            <Route path=\"/:messageType/:messageId?/:recipientId?\" component={MessagingCenter} />\n        </div>\n    </Router>;\n\nexport default Routes;","import React, { useEffect } from 'react';\nimport propTypes from '@dhis2/prop-types';\nimport { useConfig } from '@dhis2/app-runtime';\nimport cx from 'classnames';\nimport { connect } from 'react-redux';\nimport { CircularProgress } from 'material-ui';\nimport CustomSnackBar from '../Common/CustomSnackBar.js';\nimport Routes from './Routes.js';\nimport { setCurrentUser, setDhis2CoreVersion } from '../../actions/index.js';\nimport classes from './App.module.css';\n\nconst App = ({\n  currentUser,\n  setCurrentUser,\n  setDhis2CoreVersion\n}) => {\n  const {\n    loading,\n    error\n  } = currentUser;\n  const {\n    serverVersion\n  } = useConfig();\n  useEffect(() => {\n    setDhis2CoreVersion(serverVersion.minor);\n    setCurrentUser();\n  }, []);\n\n  if (loading) {\n    return <div className={classes.center}>\n                <CircularProgress size={48} />\n            </div>;\n  }\n\n  if (error) {\n    return <div className={cx(classes.center, classes.error)}>{error}</div>;\n  }\n\n  return <div>\n            <CustomSnackBar />\n            <Routes />\n        </div>;\n};\n\nApp.propTypes = {\n  currentUser: propTypes.object.isRequired,\n  setCurrentUser: propTypes.func.isRequired,\n  setDhis2CoreVersion: propTypes.func.isRequired\n};\nexport default connect(state => ({\n  currentUser: state.messaging.currentUser\n}), {\n  setCurrentUser,\n  setDhis2CoreVersion\n})(App);","const messageTypes = [{\n  id: 'PRIVATE',\n  displayName: 'Inbox',\n  unread: 0,\n  loaded: 0,\n  loading: false,\n  total: 0,\n  page: 1\n}, {\n  id: 'VALIDATION_RESULT',\n  displayName: 'Validation',\n  unread: 0,\n  loaded: 0,\n  loading: false,\n  total: 0,\n  page: 1\n}, {\n  id: 'TICKET',\n  displayName: 'Ticket',\n  unread: 0,\n  loaded: 0,\n  loading: false,\n  total: 0,\n  page: 1\n}, {\n  id: 'SYSTEM',\n  displayName: 'System',\n  unread: 0,\n  loaded: 0,\n  loading: false,\n  total: 0,\n  page: 1\n}];\nexport default messageTypes;","import i18n from '@dhis2/d2-i18n';\nimport log from 'loglevel';\nimport * as actions from '../constants/actions.js';\nimport messageTypes from '../constants/messageTypes.js';\nimport { POSITIVE, NEGATIVE, NEUTRAL } from '../constants/development.js';\nimport { findIndexOfId } from '../utils/helpers.js';\nexport const initialState = {\n  currentUser: {\n    loading: true,\n    error: null,\n    id: null,\n    authorities: null,\n    userGroups: null\n  },\n  // Message conversation\n  messageConversations: {},\n  messageTypes,\n  selectedMessageType: undefined,\n  selectedMessageConversation: undefined,\n  settingSelectedMessageConversation: false,\n  checkedIds: [],\n  messageFilter: undefined,\n  statusFilter: undefined,\n  priorityFilter: undefined,\n  assignedToMeFilter: false,\n  markedForFollowUpFilter: false,\n  unreadFilter: false,\n  isInFeedbackRecipientGroup: false,\n  feedbackRecipientsId: undefined,\n  displayTimeDiff: 0,\n  // Input for create and reply\n  subject: '',\n  input: '',\n  recipients: [],\n  // Attachments\n  attachments: [],\n  // Snackbar\n  snackMessage: '',\n  onSnackActionClick: undefined,\n  onSnackRequestClose: undefined,\n  snackType: NEUTRAL\n};\n\nfunction messageReducer(state = initialState, action) {\n  const stateMessageTypes = state.messageTypes;\n  const oldAttachments = state.attachments;\n\n  switch (action.type) {\n    case actions.SET_CURRENT_USER:\n      return { ...state,\n        currentUser: {\n          loading: true,\n          error: null,\n          id: null,\n          authorities: null,\n          userGroups: null\n        }\n      };\n\n    case actions.SET_CURRENT_USER_SUCCESS:\n      return { ...state,\n        currentUser: {\n          loading: false,\n          error: null,\n          id: action.payload.id,\n          authorities: action.payload.authorities,\n          userGroups: action.payload.userGroups\n        }\n      };\n\n    case actions.SET_CURRENT_USER_ERROR:\n      return { ...state,\n        currentUser: {\n          loading: false,\n          error: action.payload,\n          id: null,\n          authorities: null,\n          userGroups: null\n        }\n      };\n\n    case actions.SET_DISPLAY_TIME_DIFF_SUCCESS:\n      return { ...state,\n        displayTimeDiff: action.payload\n      };\n\n    case actions.MESSAGE_CONVERSATIONS_LOAD_SUCCESS:\n      {\n        const replaceMessageType = stateMessageTypes.find(type => type.id === action.payload.messageType.id);\n        replaceMessageType.loaded = action.payload.messageConversations.length;\n        replaceMessageType.total = action.payload.pager.total;\n        replaceMessageType.unread = action.payload.nrOfUnread;\n        replaceMessageType.page = action.payload.pager.page;\n        replaceMessageType.loading = false;\n        messageTypes.splice([findIndexOfId(stateMessageTypes, replaceMessageType.id)], 1, replaceMessageType);\n        const setSelectedMessageType = action.payload.selectedMessageType === replaceMessageType.id && (action.payload.selectedMessageType === state.selectedMessageType || state.selectedMessageType === undefined);\n        return { ...state,\n          messageTypes,\n          messageConversations: { ...state.messageConversations,\n            [replaceMessageType.id]: action.payload.messageConversations\n          },\n          selectedMessageType: setSelectedMessageType ? replaceMessageType : state.selectedMessageType\n        };\n      }\n\n    case actions.MESSAGE_CONVERSATION_UPDATE_ERROR:\n      return { ...state,\n        snackMessage: action.payload.error.message,\n        snackType: NEGATIVE\n      };\n\n    case actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS:\n      {\n        let snackMessage = '';\n\n        switch (action.payload.identifier) {\n          case 'STATUS':\n            snackMessage = i18n.t('Successfully updated status');\n            break;\n\n          case 'PRIORITY':\n            snackMessage = i18n.t('Successfully updated priority');\n            break;\n\n          case 'ASSIGNEE':\n            snackMessage = i18n.t('Successfully updated assignee');\n            break;\n\n          case 'FOLLOW_UP':\n            snackMessage = i18n.t('Successfully changed followup');\n            break;\n\n          default:\n            log.error('Unexpected identifier for updateMessageConversations success');\n            break;\n        }\n\n        return { ...state,\n          snackMessage,\n          snackType: POSITIVE\n        };\n      }\n\n    case actions.SEND_MESSAGE_ERROR:\n      return { ...state,\n        snackMessage: action.payload.error.message,\n        snackType: NEGATIVE\n      };\n\n    case actions.MESSAGE_CONVERSATIONS_DELETE_ERROR:\n      return { ...state,\n        snackMessage: action.payload.error.message,\n        snackType: NEGATIVE\n      };\n\n    case actions.MESSAGE_CONVERSATIONS_DELETE_SUCCESS:\n      return { ...state,\n        snackMessage: i18n.t('Successfully deleted message conversation(s)'),\n        snackType: POSITIVE\n      };\n\n    case actions.DISPLAY_SNACK_MESSAGE:\n      return { ...state,\n        snackMessage: action.payload.message,\n        snackType: action.payload.snackType,\n        onSnackActionClick: action.payload.onSnackActionClick,\n        onSnackRequestClose: action.payload.onSnackRequestClose\n      };\n\n    case actions.CLEAR_SNACK_MESSAGE:\n      return { ...state,\n        snackMessage: '',\n        snackType: NEUTRAL\n      };\n\n    case actions.SET_CHECKED:\n      {\n        const messageConversation = action.payload.messageConversation;\n        let checkedIds = state.checkedIds;\n\n        if (action.payload.selectedValue) {\n          checkedIds.push(messageConversation);\n        } else {\n          checkedIds = checkedIds.filter(element => element.id !== messageConversation.id);\n        }\n\n        return { ...state,\n          checkedIds\n        };\n      }\n\n    case actions.SET_ALL_CHECKED:\n      return { ...state,\n        checkedIds: action.payload.messageConversationIds\n      };\n\n    case actions.CLEAR_CHECKED:\n      return { ...state,\n        checkedIds: []\n      };\n\n    case actions.SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS:\n      return { ...state,\n        selectedMessageConversation: action.payload.messageConversation,\n        settingSelectedMessageConversation: false\n      };\n\n    case actions.SET_SELECTED_MESSAGE_CONVERSATION:\n      return { ...state,\n        settingSelectedMessageConversation: true\n      };\n\n    case actions.CLEAR_SELECTED_MESSAGE_CONVERSATION:\n      return { ...state,\n        selectedMessageConversation: undefined\n      };\n\n    case actions.SET_SELECTED_MESSAGE_TYPE:\n      return { ...state,\n        checkedIds: [],\n        selectedMessageType: stateMessageTypes.find(type => type.id === action.payload.messageTypeId),\n        selectedMessageConversations: state.messageConversations[action.payload.messageTypeId],\n        selectedMessageConversation: undefined\n      };\n\n    case actions.UPDATE_INPUT_FIELDS:\n      return { ...state,\n        subject: action.payload.subject,\n        input: action.payload.input,\n        recipients: action.payload.recipients\n      };\n\n    case actions.ADD_RECIPIENT_BY_ID_SUCCESS:\n      return { ...state,\n        recipients: [...state.recipients, action.payload]\n      };\n\n    case actions.SET_FILTER:\n      return { ...state,\n        messageFilter: action.payload.filterType === 'MESSAGE' ? action.payload.filter : state.messageFilter,\n        statusFilter: action.payload.filterType === 'STATUS' ? action.payload.filter : state.statusFilter,\n        priorityFilter: action.payload.filterType === 'PRIORITY' ? action.payload.filter : state.priorityFilter,\n        assignedToMeFilter: action.payload.filterType === 'ASSIGNED_TO_ME' ? action.payload.filter : state.assignedToMeFilter,\n        markedForFollowUpFilter: action.payload.filterType === 'MARKED_FOR_FOLLOWUP' ? action.payload.filter : state.markedForFollowUpFilter,\n        unreadFilter: action.payload.filterType === 'UNREAD' ? action.payload.filter : state.unreadFilter\n      };\n\n    case actions.LOAD_MESSAGE_CONVERSATIONS:\n      {\n        const loadingMessageType = action.payload.messageType;\n        loadingMessageType.loading = true;\n\n        if (action.payload.loadMore) {\n          loadingMessageType.page++;\n        }\n\n        messageTypes[findIndexOfId(messageTypes, loadingMessageType.id)] = loadingMessageType; // TODO: This can probably be removed because action.payload.messageType === state.selectedMessageType\n\n        const selectedMessageType = state.selectedMessageType;\n\n        if (selectedMessageType) {\n          selectedMessageType.loading = true;\n\n          if (action.payload.loadMore) {\n            selectedMessageType.page++;\n          }\n        }\n\n        return { ...state,\n          messageTypes,\n          selectedMessageType\n        };\n      }\n\n    case actions.SET_IN_FEEDBACK_RECIPIENT_GROUP:\n      return { ...state,\n        isInFeedbackRecipientGroup: action.payload.isInFeedbackRecipientGroup.authorized,\n        feedbackRecipientsId: action.payload.isInFeedbackRecipientGroup.feedbackRecipientsId\n      };\n\n    case actions.ADD_ATTACHMENT_SUCCESS:\n      return { ...state,\n        attachments: state.attachments.map(attachment => attachment.name === action.payload.name ? {\n          id: action.payload.id,\n          name: attachment.name,\n          contentLength: attachment.contentLength,\n          loading: false\n        } : attachment)\n      };\n\n    case actions.ADD_ATTACHMENT_ERROR:\n      return { ...state,\n        attachments: oldAttachments.filter(attachment => attachment.id !== action.payload.attachmentId),\n        snackMessage: action.payload.error.message,\n        snackType: NEGATIVE\n      };\n\n    case actions.ADD_ATTACHMENT:\n      return { ...state,\n        attachments: state.attachments.concat({\n          name: action.payload.name,\n          contentLength: action.payload.size,\n          loading: true\n        })\n      };\n\n    case actions.REMOVE_ATTACHMENT:\n      return { ...state,\n        attachments: oldAttachments.filter(attachment => attachment.id !== action.payload.attachmentId)\n      };\n\n    case actions.CANCEL_ATTACHMENT:\n      return { ...state,\n        attachments: oldAttachments.filter(attachment => attachment.name !== action.payload.attachmentName)\n      };\n\n    case actions.CLEAR_ATTACHMENTS:\n      return { ...state,\n        attachments: []\n      };\n\n    case actions.SET_DHIS2_CORE_VERSION:\n      return { ...state,\n        dhis2CoreVersion: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default messageReducer;","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport messageReducer from './reducers/messageReducer.js';\nconst middlewares = [ReduxThunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst reducer = combineReducers({\n  messaging: messageReducer\n});\nexport default createStore(reducer, composeEnhancers(applyMiddleware(...middlewares)));","import React from 'react';\nimport { Provider } from 'react-redux';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { useDataEngine } from '@dhis2/app-runtime';\nimport theme from '../../styles/theme.js';\nimport App from './App.js';\nimport store from '../../store.js';\nimport { setEngine } from '../../api/api.js';\nimport '../../index.css';\nimport 'typeface-roboto';\n\nconst AppWrapper = () => {\n  const engine = useDataEngine();\n  setEngine(engine);\n  return <Provider store={store}>\n            <MuiThemeProvider muiTheme={theme}>\n                <App />\n            </MuiThemeProvider>\n        </Provider>;\n};\n\nexport default AppWrapper;"],"sourceRoot":""}