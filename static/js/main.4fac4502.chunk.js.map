{"version":3,"sources":["serviceWorker.js","constants/actions.js","constants/development.js","utils/helpers.js","api/api.js","actions/index.js","styles/theme.js","components/Common/CustomSnackBar.jsx","constants/messageTypes.js","reducers/messageReducer.js","store.js","utils/history.js","components/Attachments/Attachments.jsx","components/MessageConversation/Message.jsx","components/Attachments/AttachmentUploadButton.jsx","components/MessageConversation/ReplyCard.jsx","components/Common/SuggestionField.jsx","components/Common/ExtendedChoiceLabel.jsx","styles/messageConversationStyles.js","components/MessageConversation/MessageConversation.jsx","components/List/MessageTypeItem.jsx","components/List/SidebarList.jsx","styles/style.js","components/List/ListItemHeader.jsx","components/List/MessageConversationListItem.jsx","components/List/MessageConversationList.jsx","components/MessageConversation/CreateMessage.jsx","constants/extendedChoices.js","components/Common/AssignToDialog.jsx","components/Common/ToolbarExtendedChoicePicker.jsx","components/Common/Toolbar.jsx","components/MessagingCenter/MessagingCenter.jsx","components/App/Routes.jsx","components/App/AddD2Context.jsx","components/App/App.jsx","locales/index.js","utils/configI18n.js","index.js"],"names":["Boolean","window","location","hostname","match","LOAD_MESSAGE_CONVERSATIONS","MESSAGE_CONVERSATIONS_LOAD_SUCCESS","MESSAGE_CONVERSATIONS_DELETE_SUCCESS","MESSAGE_CONVERSATIONS_DELETE_ERROR","MESSAGE_CONVERSATION_UPDATE_SUCCESS","MESSAGE_CONVERSATION_UPDATE_ERROR","SEND_MESSAGE_ERROR","SET_FILTER","DISPLAY_SNACK_MESSAGE","CLEAR_SNACK_MESSAGE","SET_CHECKED","SET_ALL_CHECKED","CLEAR_CHECKED","SET_SELECTED_MESSAGE_TYPE","CLEAR_SELECTED_MESSAGE_CONVERSATION","SET_SELECTED_MESSAGE_CONVERSATION","SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS","UPDATE_INPUT_FIELDS","SET_IN_FEEDBACK_RECIPIENT_GROUP","SET_DISPLAY_TIME_DIFF_SUCCESS","ADD_RECIPIENT_BY_ID_SUCCESS","ADD_ATTACHMENT","ADD_ATTACHMENT_SUCCESS","ADD_ATTACHMENT_ERROR","REMOVE_ATTACHMENT","CLEAR_ATTACHMENTS","CANCEL_ATTACHMENT","SET_DHIS2_CORE_VERSION","fontFamily","NEUTRAL","POSITIVE","NEGATIVE","findIndexOfId","list","id","len","length","index","debounce","fn","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","supportsAttachments","dhis2CoreVersion","getMessageConversations","_ref","messageType","page","messageFilter","status","priority","assignedToMeFilter","markedForFollowUpFilter","unreadFilter","filters","concat","push","getD2Instance","then","instance","currentUser","Api","getApi","get","undefined","fields","order","filter","result","messageConversations","pager","catch","error","getMessageConversation","messageConversation","updateMessageConversationStatus","messageConversationId","value","post","updateMessageConversationPriority","updateMessageConversationAssignee","delete","updateMessageConversationFollowup","messageConversationIds","getNrOfUnread","total","sendMessage","_ref2","subject","users","userGroups","organisationUnits","text","attachments","sendFeedbackMessage","headers","Content-Type","replyMessage","_ref3","message","internalReply","deleteMessageConversation","markRead","markedReadConversations","markUnread","markedUnreadConversations","searchRecipients","_ref5","searchValue","searchOnlyUsers","searchOnlyFeedbackRecipients","feedbackRecipientsId","system","version","minor","url","pageSize","_ref6","searchUserGroups","_ref7","searchOrganisationUnits","_ref8","addRecipients","_ref9","getUserById","_ref10","displayName","type","addAttachment","attachment","form","FormData","append","createAttachment","downloadAttachment","messageId","attachmentId","baseUrl","filename","link","document","createElement","href","setAttribute","body","appendChild","click","downloadBlob","createAction","payload","setSelectedMessageConversation","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","wrap","_context2","prev","next","actions","api","sent","t0","stop","_x2","loadMessageConversations","selectedMessageType","loadMore","_callee4","getState","promises","state","_state$messaging","i","promise","nrOfUnread","_context4","messaging","statusFilter","priorityFilter","Promise","all","reduce","accumulated","r","_x4","_x5","markMessageConversations","mode","markedConversations","_ref12","_callee9","_context9","_x13","_ref16","_callee12","_context12","response","fileResource","name","contentLength","_x16","clearCheckedIds","clearSelectedMessageConversation","displaySnackMessage","_ref18","onSnackActionClick","onSnackRequestClose","snackType","setFilter","filterType","updateInputFields","input","recipients","clearAttachments","setSelectedMessageType","messageTypeId","removeAttachment","cancelAttachment","attachmentName","getMuiTheme","palette","negative","pinkA200","blue50","primary1Color","primary2Color","blue100","primary3Color","blue300","primary4Color","blue500","accent1Color","grey50","accent2Color","grey100","accent3Color","grey300","accent4Color","grey500","followUp","orange500","darkGray","grey700","superDarkGray","grey900","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","clockCircleColor","fade","shadowColor","fullBlack","contentColorStyle","theme","CustomSnackBar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","closeMessage","clearSnackMessage","setState","show","_prevProps","prevState","_this2","react_default","Snackbar_default","open","autoHideDuration","onRequestClose","action","onActionClick","contentStyle","color","style","pointerEvents","whiteSpace","bodyStyle","maxWidth","Component","compose","connect","snackMessage","pure","messageTypes","unread","loaded","loading","initialState","selectedMessageConversation","settingSelectedMessageConversation","checkedIds","isInFeedbackRecipientGroup","displayTimeDiff","messageReducer","stateMessageTypes","oldAttachments","objectSpread","replaceMessageType","find","splice","defineProperty","identifier","i18n","t","log","selectedValue","element","selectedMessageConversations","toConsumableArray","loadingMessageType","authorized","map","size","middlewares","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","combineReducers","createStore","applyMiddleware","createHashHistory","Attachment","dataDirection","FlatButton_default","className","backgroundColor","label","parseFloat","parseInt","toFixed","labelPosition","onClick","icon","CloudDownload_default","Clear_default","LinearProgress_default","Attachments","Attachments_Attachment","key","styles","canvas","padding","innerCanvas","margin","paddingBottom","cardText","wordBreak","fromFormat","datePlacement","display","justifyContent","marginRight","dateFormat","overflow","textOverflow","Message","lastMessage","enableAttachments","fromTitle","sender","today","moment","messageDate","created","add","internal","placement","diff","from","format","year","components_Attachments_Attachments","paddingLeft","CardText_default","Linkify_default","Divider_default","createHandleChange","event","files","target","AttachmentUploadButton","containerElement","AttachFile_default","onChange","ReplyCard","_this$props","wipeInput","inputError","texFieldUpdate","newValue","handleDiscard","discardState","expanded","Card","marginTop","TextField_default","rows","underlineShow","multiLine","fullWidth","floatingLabelText","RaisedButton_default","primary","disabled","components_Attachments_AttachmentUploadButton","_ref11","_callee8","_context8","_x11","_x12","searchDelay","SuggestionField","searchResult","lastSearch","errorText","debouncedSearch","search","bind","assertThisInitialized","onSuggestionClick","chip","recipient","updateRecipients","onRemoveChip","updateInput","addType","internalSearchResult","searchWarning","_this3","height","inputHeight","ChipInput_default","marginBottom","openOnFocus","searchText","dataSource","dataSourceConfig","onUpdateInput","onRequestAdd","onRequestDelete","subheaderTitle","paddingRight","subheader","fontWeight","ExtendedChoiceLabel","showTitle","title","displayLabel","charAt","toLowerCase","substr","flex","Subheader_default","overflowY","overflowX","paddingTop","flexDirection","header","iconButton","alignSelf","subjectSubheader","fontSize","participantsCanvas","participants","flexWrap","participantAddRow","participantsSuggestionField","participantsAdd","messagesCanvas","messagesInnerCanvas","NOTIFICATIONS","MessageConversation","backToList","history","_this$props2","cursor","messages","notification","indexOf","userMessages","slice","userMessage","recipientsExpanded","user","userMessagesLength","IconButton_default","tooltipPosition","tooltip","ArrowBack_default","displayExtendedChoices","Common_ExtendedChoiceLabel","assignee","participant","Chip_default","Common_SuggestionField","limitSearchArray","Add_default","Paper_default","MessageConversation_Message","MessageConversation_ReplyCard","assign","_ref13","_ref14","_callee10","_context10","_x14","_ref17","_callee13","_context13","_x17","MessageTypeItem","onMouseEnter","setHoverText","onMouseLeave","setNeutralText","setTextColor","getBackgroundColor","role","alignItems","marginLeft","CircularProgress_default","Badge_default","badgeContent","secondary","badgeStyle","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","minWidth","SidebarList","params","List","List_MessageTypeItem","Toggle_default","width","refreshTimer","toggled","autoRefresh","onToggle","setAutoRefresh","messagePanelContainer","transition","boxSizing","position","boxShadow","borderBottom","checkBox","extendedLabel","MessageConversationListItem","allChecked","children","Checkbox_default","checked","onCheck","isInputChecked","setAllChecked","child","container","wideview","flag","fontColor","flexBasis","textAlign","read","lastSender","x","containerBackgroundColor","innerText","setChecked","Flag_default","MessageConversationList","onScroll","messageList","getElementById","isBottom","debouncedOnScroll","el","scrollHeight","scrollTop","outerHeight","Array","isArray","lookup","Set","item","has","dedupeById","ListItemHeader","List_MessageConversationListItem","messageTypeField","CreateMessage","subjectUpdate","inputUpdate","isMessageFeedback","generateUid","addRecipientByUserId","_this$props$match$par","recipientId","discardDisabled","RadioButton_default","_callee6","_getState","_getState$messaging","_context6","_x7","_x8","_callee7","_context7","_x9","_x10","_ref15","_callee11","_context11","console","_x15","extendedChoices","STATUS","primaryText","PRIORITY","AssignToDialog","updateMessageConversations","Dialog_default","nrSelected","ToolbarExtendedChoicePicker","getIds","updateMessageConversation","ids","toggleDialog","dialogOpen","checkedItems","assignToOpen","multiSelect","actionButtons","keyboardFocused","deleteMessageConversations","displayNumberOfCheckedIds","modal","Common_AssignToDialog","Delete_default","Markunread_default","Done_default","Assignment_default","IconMenu_default","iconButtonElement","more_vert_default","anchorOrigin","horizontal","vertical","targetOrigin","MenuItem_default","rightIcon","navigation_arrow_drop_right_default","menuItems","elem","material_ui_Subheader_default","_callee5","_context5","_x6","_ref4","_callee3","_context3","t1","_x3","checkedOptions","zIndex","checkedOption","filterControl","rightHandCanvas","ie11Spacer","flexGrow","iconMenu","Toolbar","lastMessageFilter","prevProps","displaySearch","Common_ToolbarExtendedChoicePicker","SelectField_default","labelStyle","top","selectedMenuItemStyle","floatingLabelStyle","iconStyle","hintText","menuStyle","Checkbox_Checkbox_default","ViewList_default","ViewHeadline_default","toogleWideview","EXTENDED_CHOICES","refreshTimerTotal","refreshTimerInterval","MessagingCenter","intervalId","clearInterval","setInterval","tick","refresh","selectedId","setDhis2CoreVersion","d2","initialMessageConversation","configuration","symbol","userAuthorities","authorities","getOwnPropertySymbols","configurationResult","includes","group","feedbackRecipients","setIsInFeedbackRecipientGroup","setDisplayTimeDiff","Common_Toolbar","List_SidebarList","drawerOpen","List_MessageConversationList","MessageConversation_CreateMessage","components_MessageConversation_MessageConversation","disableLink","MailOutline_default","contextTypes","PropTypes","object","_callee","serverDate","_context","_x","Routes","react_router","exact","path","component","to","AddD2Context","getChildContext","render","MuiThemeProvider_default","muiTheme","React","childContextTypes","App","es","store","App_AddD2Context","lib","appName","Common_CustomSnackBar","App_Routes","namespace","locale","addResources","arTranslations","enTranslations","esTranslations","frTranslations","idTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","ruTranslations","ukTranslations","urTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","configI18n","userSettings","uiLocale","keyUiLocale","config","sources","dhisConfig","systemVersion","providerApiVersion","process","schemas","init","getUserSettings","es_lib","apiVersion","CssReset","components_App_App","initApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fac4502.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","export const LOAD_MESSAGE_CONVERSATIONS = 'LOAD_MESSAGE_CONVERSATIONS'\nexport const LOAD_MORE_MESSAGE_CONVERSATIONS = 'LOAD_MORE_MESSAGE_CONVERSATIONS'\nexport const MESSAGE_CONVERSATIONS_LOAD_SUCCESS =\n    'MESSAGE_CONVERSATIONS_LOAD_SUCCESS'\nexport const MESSAGE_CONVERSATIONS_LOAD_ERROR =\n    'MESSAGE_CONVERSATIONS_LOAD_ERROR'\n\nexport const DELETE_MESSAGE_CONVERSATIONS = 'DELETE_MESSAGE_CONVERSATIONS'\nexport const MESSAGE_CONVERSATIONS_DELETE_SUCCESS =\n    'MESSAGE_CONVERSATIONS_DELETE_SUCCESS'\nexport const MESSAGE_CONVERSATIONS_DELETE_ERROR =\n    'MESSAGE_CONVERSATIONS_DELETE_ERROR'\n\nexport const UPDATE_MESSAGE_CONVERSATIONS = 'UPDATE_MESSAGE_CONVERSATIONS'\nexport const MESSAGE_CONVERSATION_UPDATE_SUCCESS =\n    'MESSAGE_CONVERSATION_UPDATE_SUCCESS'\nexport const MESSAGE_CONVERSATION_UPDATE_ERROR =\n    'MESSAGE_CONVERSATION_UPDATE_ERROR'\n\nexport const MARK_MESSAGE_CONVERSATIONS = 'MARK_MESSAGE_CONVERSATIONS'\nexport const MARK_MESSAGE_CONVERSATIONS_SUCCESS =\n    'MARK_MESSAGE_CONVERSATIONS_SUCCESS'\nexport const MARK_MESSAGE_CONVERSATIONS_ERROR =\n    'MARK_MESSAGE_CONVERSATIONS_ERROR'\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS'\nexport const SEND_MESSAGE_ERROR = 'SEND_MESSAGE_ERROR'\n\nexport const SEND_FEEDBACK_MESSAGE = 'SEND_FEEDBACK_MESSAGE'\n\nexport const REPLY_MESSAGE = 'REPLY_MESSAGE'\nexport const REPLY_MESSAGE_SUCCESS = 'REPLY_MESSAGE_SUCCESS'\nexport const REPLY_MESSAGE_ERROR = 'REPLY_MESSAGE_ERROR'\n\nexport const SET_FILTER = 'SET_FILTER'\nexport const DISPLAY_SNACK_MESSAGE = 'DISPLAY_SNACK_MESSAGE;'\nexport const CLEAR_SNACK_MESSAGE = 'CLEAR_SNACK_MESSAGE'\n\nexport const SET_CHECKED = 'SET_CHECKED'\nexport const SET_ALL_CHECKED = 'SET_ALL_CHECKED'\n\nexport const CLEAR_CHECKED = 'CLEAR_CHECKED'\nexport const SET_SELECTED_MESSAGE_TYPE = 'SET_SELECTED_MESSAGE_TYPE'\n\nexport const CLEAR_SELECTED_MESSAGE_CONVERSATION =\n    'CLEAR_SELECTED_MESSAGE_CONVERSATION'\nexport const SET_SELECTED_MESSAGE_CONVERSATION =\n    'SET_SELECTED_MESSAGE_CONVERSATION'\nexport const SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS =\n    'SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS'\nexport const SET_SELECTED_MESSAGE_CONVERSATION_ERROR =\n    'SET_SELECTED_MESSAGE_CONVERSATION_ERROR'\n\nexport const UPDATE_INPUT_FIELDS = 'UPDATE_INPUT_FIELDS'\n\nexport const SET_IN_FEEDBACK_RECIPIENT_GROUP = 'SET_IN_FEEDBACK_RECIPIENT_GROUP'\n\nexport const SET_DISPLAY_TIME_DIFF = 'SET_DISPLAY_TIME_DIFF'\nexport const SET_DISPLAY_TIME_DIFF_SUCCESS = 'SET_DISPLAY_TIME_DIFF_SUCCESS'\nexport const SET_DISPLAY_TIME_DIFF_ERROR = 'SET_DISPLAY_TIME_DIFF_ERROR'\n\n/* Recipient actions */\nexport const RECIPIENT_SEARCH = 'RECIPIENT_SEARCH'\nexport const RECIPIENT_SEARCH_SUCCESS = 'RECIPIENT_SEARCH_SUCCESS'\nexport const RECIPIENT_SEARCH_ERROR = 'RECIPIENT_SEARCH_ERROR'\n\nexport const ADD_RECIPIENTS = 'ADD_RECIPIENTS'\nexport const ADD_RECIPIENTS_SUCCESS = 'ADD_RECIPIENTS_SUCCESS'\nexport const ADD_RECIPIENTS_ERROR = 'ADD_RECIPIENTS_ERROR'\nexport const ADD_RECIPIENT_BY_ID_SUCCESS = 'ADD_RECIPIENT_BY_ID_SUCCESS'\n\n/* Attachments */\nexport const ADD_ATTACHMENT = 'ADD_ATTACHMENT'\nexport const ADD_ATTACHMENT_SUCCESS = 'ADD_ATTACHMENT_SUCCESS'\nexport const ADD_ATTACHMENT_ERROR = 'ADD_ATTACHMENT_ERROR'\n\nexport const DOWNLOAD_ATTACHMENT = 'DOWNLOAD_ATTACHMENT'\nexport const DOWNLOAD_ATTACHMENT_SUCCESS = 'DOWNLOAD_ATTACHMENT_SUCCESS'\nexport const DOWNLOAD_ATTACHMENT_ERROR = 'DOWNLOAD_ATTACHMENT_ERROR'\n\nexport const REMOVE_ATTACHMENT = 'REMOVE_ATTACHMENT'\n\nexport const CLEAR_ATTACHMENTS = 'CLEAR_ATTACHMENTS'\nexport const CANCEL_ATTACHMENT = 'CANCEL_ATTACHMENT'\n\n/* DHIS2 CORE VERSION */\nexport const SET_DHIS2_CORE_VERSION = 'SET_DHIS2_CORE_VERSION'\n","export const pageSize = 35\nexport const fontFamily = 'Roboto, Helvetica, Arial, sans-serif'\n\nexport const NEUTRAL = 'NEUTRAL'\nexport const POSITIVE = 'POSITIVE'\nexport const NEGATIVE = 'NEGATIVE'\n","export function dedupeById(list) {\n    if (!Array.isArray(list)) {\n        return undefined\n    }\n    const lookup = new Set()\n    return list.filter(item => {\n        if (lookup.has(item.id)) {\n            return false\n        }\n\n        lookup.add(item.id)\n        return true\n    })\n}\n\nexport function findIndexOfId(list, id) {\n    const len = list.length\n    for (let index = 0; index < len; index++) {\n        if (list[index].id === id) {\n            return index\n        }\n    }\n    return undefined\n}\n\nexport function debounce(fn, delay) {\n    let timer = null\n    return function() {\n        const context = this\n        const args = arguments\n        clearTimeout(timer)\n        timer = setTimeout(function() {\n            fn.apply(context, args)\n        }, delay)\n    }\n}\n\nexport function supportsAttachments(dhis2CoreVersion) {\n    return dhis2CoreVersion > 30\n}\n\nexport function supportsUnversionedApiCalls(dhis2CoreVersion) {\n    return dhis2CoreVersion > 31\n}\n\nexport function supportsUserLookupEndPoint(dhis2CoreVersion) {\n    return dhis2CoreVersion > 34\n}\n","import { getInstance as getD2Instance } from 'd2/lib/d2'\nimport { pageSize } from '../constants/development'\nimport { supportsUserLookupEndPoint } from '../utils/helpers.js'\n\nconst initialMessageConversationFields =\n    'id, displayName, subject, messageType, lastSender[id, displayName], assignee[id, displayName], status, priority, lastUpdated, read, lastMessage, followUp'\n\nconst messageConversationFields =\n    '*,assignee[id, displayName],messages[*,sender[id,displayName],attachments[id, name, contentLength]],userMessages[user[id, displayName]]'\n\nconst order = 'lastMessage:desc'\n\nexport const getMessageConversations = ({\n    messageType,\n    page,\n    messageFilter,\n    status,\n    priority,\n    assignedToMeFilter,\n    markedForFollowUpFilter,\n    unreadFilter,\n}) => {\n    const filters = [`messageType:eq:${messageType}`]\n    typeof status !== 'undefined' && filters.push(`status:eq:${status}`)\n    typeof priority !== 'undefined' && filters.push(`priority:eq:${priority}`)\n    markedForFollowUpFilter && filters.push('followUp:eq:true')\n    unreadFilter && filters.push('read:eq:false')\n\n    return getD2Instance()\n        .then(instance => {\n            assignedToMeFilter &&\n                filters.push(`assignee.id:eq:${instance.currentUser.id}`)\n\n            return instance.Api.getApi().get(\n                `messageConversations?pageSize=${pageSize}&page=${page}${\n                    messageFilter !== '' && messageFilter !== undefined\n                        ? `&queryString=${messageFilter}`\n                        : ''\n                }`,\n                {\n                    fields: [initialMessageConversationFields],\n                    order,\n                    filter: filters,\n                }\n            )\n        })\n        .then(result => ({\n            messageConversations: result.messageConversations,\n            pager: result.pager,\n        }))\n        .catch(error => {\n            throw error\n        })\n}\n\nexport const getMessageConversation = messageConversation =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get(\n                `messageConversations/${messageConversation.id}`,\n                {\n                    fields: [messageConversationFields],\n                }\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const getServerDate = () =>\n    getD2Instance()\n        .then(instance => instance.Api.getApi().get('system/info'))\n        .then(result => result.serverDate)\n        .catch(error => {\n            throw error\n        })\n\nexport const updateMessageConversationStatus = (messageConversationId, value) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${messageConversationId}/status?messageConversationStatus=${value}`\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const updateMessageConversationPriority = (\n    messageConversationId,\n    value\n) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${messageConversationId}/priority?messageConversationPriority=${value}`\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const updateMessageConversationAssignee = (\n    messageConversationId,\n    value\n) =>\n    getD2Instance()\n        .then(instance =>\n            value === undefined\n                ? instance.Api.getApi().delete(\n                      `messageConversations/${messageConversationId}/assign`\n                  )\n                : instance.Api.getApi().post(\n                      `messageConversations/${messageConversationId}/assign?userId=${value}`\n                  )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const updateMessageConversationFollowup = (\n    messageConversationIds,\n    value\n) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${value ? 'followup' : 'unfollowup'}`,\n                messageConversationIds\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const getNrOfUnread = messageType =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('messageConversations', {\n                fields: 'read',\n                filter: ['read:eq:false', `messageType:eq:${messageType}`],\n            })\n        )\n        .then(result => result.pager.total)\n        .catch(error => {\n            throw error\n        })\n\nexport const sendMessage = ({\n    subject,\n    users,\n    userGroups,\n    organisationUnits,\n    text,\n    attachments,\n    id,\n}) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post('messageConversations', {\n                id,\n                subject,\n                users,\n                userGroups,\n                organisationUnits,\n                attachments,\n                text,\n            })\n        )\n        .then(() => ({ messageConversationId: id }))\n        .catch(error => {\n            throw error\n        })\n\nexport const sendFeedbackMessage = (subject, text) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/feedback?subject=${subject}`,\n                text,\n                {\n                    headers: { 'Content-Type': 'text/plain' },\n                }\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const replyMessage = ({ message, internalReply, attachments, id }) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${id}?internal=${internalReply}${\n                    attachments.length > 0 ? `&attachments=${attachments}` : ''\n                }`,\n                message,\n                {\n                    headers: { 'Content-Type': 'text/plain' },\n                }\n            )\n        )\n        .catch(error => {\n            throw error\n        })\n\nexport const deleteMessageConversation = messageConversationId =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().delete(\n                `messageConversations/${messageConversationId}/${\n                    instance.currentUser.id\n                }`\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const markRead = markedReadConversations =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                'messageConversations/read',\n                markedReadConversations\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const markUnread = markedUnreadConversations =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                'messageConversations/unread',\n                markedUnreadConversations\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\n/* Feedback recipient query */\nexport const isInFeedbackRecipientGroup = () =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('me', { fields: 'userGroups[id]' })\n        )\n        .then(result =>\n            getD2Instance()\n                .then(instance => ({\n                    configuration: instance.Api.getApi()\n                        .get('configuration')\n                        .then(configuration => configuration),\n                    instance,\n                }))\n                .then(({ configuration, instance }) => {\n                    const getSymbolProperties = symbol =>\n                        Array.from(\n                            symbol[Object.getOwnPropertySymbols(symbol)[0]]\n                        )\n\n                    const userAuthorities = getSymbolProperties(\n                        instance.currentUser.authorities\n                    )\n                    return configuration.then(configurationResult => ({\n                        authorized:\n                            userAuthorities.includes('ALL') ||\n                            !!result.userGroups.find(\n                                group =>\n                                    group.id ===\n                                    configurationResult.feedbackRecipients.id\n                            ),\n                        feedbackRecipientsId:\n                            configurationResult.feedbackRecipients.id,\n                    }))\n                })\n                .catch(error => {\n                    throw error\n                })\n        )\n        .catch(error => {\n            throw error\n        })\n\n/* Recipient search */\nconst MAX_RECIPIENT = 10\nconst searchOrganisationUnits = searchValue =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('organisationUnits', {\n                fields: 'id, displayName',\n                pageSize: MAX_RECIPIENT,\n                filter: [`displayName:token:${searchValue}`, 'users:gte:1'],\n            })\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nconst searchUserGroups = searchValue =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get('userGroups', {\n                fields: 'id, displayName',\n                pageSize: MAX_RECIPIENT,\n                filter: [`displayName:token:${searchValue}`],\n            })\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const searchRecipients = ({\n    searchValue,\n    searchOnlyUsers,\n    searchOnlyFeedbackRecipients,\n    feedbackRecipientsId,\n}) => {\n    return getD2Instance()\n        .then(instance => {\n            if (supportsUserLookupEndPoint(instance.system.version.minor)) {\n                // version >= v2.35\n                const url = searchOnlyFeedbackRecipients\n                    ? 'userLookup/feedbackRecipients'\n                    : 'userLookup'\n\n                return instance.Api.getApi().get(`${url}?query=${searchValue}`)\n            } else {\n                // version < 2.35\n                const filters = [`displayName:token:${searchValue}`]\n                if (searchOnlyFeedbackRecipients) {\n                    filters.push(`userGroups.id:eq:${feedbackRecipientsId}`)\n                }\n\n                return instance.Api.getApi().get('users', {\n                    pageSize: MAX_RECIPIENT,\n                    filter: filters,\n                })\n            }\n        })\n        .then(({ users }) =>\n            searchOnlyUsers\n                ? { users, undefined }\n                : searchUserGroups(searchValue).then(({ userGroups }) =>\n                      searchOrganisationUnits(searchValue).then(\n                          ({ organisationUnits }) => ({\n                              users,\n                              userGroups,\n                              organisationUnits,\n                          })\n                      )\n                  )\n        )\n        .catch(error => {\n            throw error\n        })\n}\n\nexport const fetchParticipants = messageConversationId =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get(\n                `messageConversations/${messageConversationId}`,\n                {\n                    fields: 'userMessages[user[id, displayName]]',\n                }\n            )\n        )\n        .then(result => result)\n        .catch(error => {\n            throw error\n        })\n\nexport const addRecipients = ({\n    users,\n    userGroups,\n    organisationUnits,\n    messageConversationId,\n}) =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                `messageConversations/${messageConversationId}/recipients`,\n                {\n                    users,\n                    userGroups,\n                    organisationUnits,\n                }\n            )\n        )\n        .catch(error => {\n            throw error\n        })\n\nexport const getUserById = id =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().get(`users/${id}`, {\n                fields: 'id,displayName',\n            })\n        )\n        .then(({ id, displayName }) => ({\n            id,\n            displayName,\n            type: 'user',\n        }))\n        .catch(error => {\n            throw error\n        })\n\nexport function createAttachment(attachment) {\n    const form = new FormData()\n    form.append('file', attachment)\n    return form\n}\n\nexport const addAttachment = attachment =>\n    getD2Instance()\n        .then(instance =>\n            instance.Api.getApi().post(\n                '/fileResources?domain=MESSAGE_ATTACHMENT',\n                createAttachment(attachment)\n            )\n        )\n        .catch(error => {\n            throw error\n        })\n\nexport function downloadBlob(url, filename) {\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('target', '_blank')\n    document.body.appendChild(link)\n    link.click()\n}\n\nexport const downloadAttachment = (\n    messageConversationId,\n    messageId,\n    attachmentId\n) =>\n    getD2Instance()\n        .then(instance => {\n            const baseUrl = instance.Api.getApi().baseUrl\n            return downloadBlob(\n                `${baseUrl}/messageConversations/${messageConversationId}/${messageId}/attachments/${attachmentId}`\n            )\n        })\n        .catch(error => {\n            throw error\n        })\n","import * as actions from '../constants/actions'\nimport log from 'loglevel'\nimport * as api from '../api/api'\nimport moment from 'moment'\n\n// Simple hack to solve negative time difference\nconst FUTURE_HACK = 5000\nconst createAction = (type, payload) => ({ type, payload })\n\n/******************\n * THUNKS SECTION *\n ******************/\n\nexport const setDisplayTimeDiff = () => async dispatch => {\n    try {\n        const serverDate = await api.getServerDate()\n        const displayTimeDiff = moment().diff(moment(serverDate)) - FUTURE_HACK\n\n        dispatch(\n            createAction(actions.SET_DISPLAY_TIME_DIFF_SUCCESS, displayTimeDiff)\n        )\n    } catch (error) {\n        dispatch(createAction(actions.SET_DISPLAY_TIME_DIFF_ERROR, { error }))\n    }\n}\n\nexport const setSelectedMessageConversation = messageConversation => async dispatch => {\n    dispatch(createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION))\n\n    try {\n        const result = await api.getMessageConversation(messageConversation)\n\n        dispatch(\n            createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS, {\n                messageConversation: result,\n            })\n        )\n    } catch (error) {\n        dispatch(\n            createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION_ERROR, {\n                error,\n            })\n        )\n    }\n}\n\nexport const updateMessageConversations = ({\n    messageConversationIds,\n    identifier,\n    value,\n    messageType,\n    selectedMessageConversation,\n}) => async dispatch => {\n    if (identifier === 'FOLLOW_UP') {\n        try {\n            await api.updateMessageConversationFollowup(\n                messageConversationIds,\n                value\n            )\n            dispatch(\n                createAction(actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS, {\n                    messageType: messageType,\n                    page: 1,\n                    identifier: identifier,\n                })\n            )\n            dispatch(loadMessageConversations())\n        } catch (error) {\n            dispatch(\n                createAction(actions.MESSAGE_CONVERSATION_UPDATE_ERROR, {\n                    error,\n                })\n            )\n        }\n    } else {\n        const promises = messageConversationIds.map(messageConversationId => {\n            let promise\n            switch (identifier) {\n                case 'STATUS':\n                    promise = api.updateMessageConversationStatus(\n                        messageConversationId,\n                        value\n                    )\n                    break\n                case 'PRIORITY':\n                    promise = api.updateMessageConversationPriority(\n                        messageConversationId,\n                        value\n                    )\n                    break\n                case 'ASSIGNEE':\n                    if (\n                        value !== undefined &&\n                        messageType.id === 'VALIDATION_RESULT'\n                    ) {\n                        promise = api\n                            .addRecipients({\n                                users: value.map(value => ({\n                                    id: value,\n                                })),\n                                userGroups: [],\n                                organisationUnits: [],\n                                messageConversationId,\n                            })\n                            .then(() =>\n                                api.updateMessageConversationAssignee(\n                                    messageConversationId,\n                                    value\n                                )\n                            )\n                    } else {\n                        promise = api.updateMessageConversationAssignee(\n                            messageConversationId,\n                            value\n                        )\n                    }\n\n                    break\n                default:\n                    log.error(\n                        'Unexpected identifier for updateMessageConversations'\n                    )\n                    break\n            }\n            return promise\n        })\n\n        try {\n            await Promise.all(promises)\n            dispatch(\n                createAction(actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS, {\n                    messageType: messageType,\n                    page: 1,\n                    identifier: identifier,\n                })\n            )\n            dispatch(loadMessageConversations())\n        } catch (error) {\n            dispatch(\n                createAction(actions.MESSAGE_CONVERSATION_UPDATE_ERROR, {\n                    error,\n                })\n            )\n        }\n    }\n\n    if (selectedMessageConversation) {\n        dispatch(setSelectedMessageConversation(selectedMessageConversation))\n    }\n}\n\nexport const loadMessageConversations = (\n    messageType,\n    selectedMessageType,\n    loadMore = false\n) => async (dispatch, getState) => {\n    const promises = []\n    const state = getState()\n    const {\n        messageFilter,\n        statusFilter: status,\n        priorityFilter: priority,\n        assignedToMeFilter,\n        markedForFollowUpFilter,\n        unreadFilter,\n    } = state.messaging\n\n    // Default fallback values so this action can be called without arguments\n    messageType = messageType || state.messaging.selectedMessageType\n    selectedMessageType =\n        selectedMessageType || state.messaging.selectedMessageType.id\n\n    dispatch(\n        createAction(actions.LOAD_MESSAGE_CONVERSATIONS, {\n            messageType,\n            loadMore,\n        })\n    )\n\n    try {\n        for (let i = 1; i <= messageType.page; i++) {\n            const promise = api\n                .getMessageConversations({\n                    messageType: messageType.id,\n                    page: i,\n                    messageFilter,\n                    status,\n                    priority,\n                    assignedToMeFilter,\n                    markedForFollowUpFilter,\n                    unreadFilter,\n                })\n                .then(result => ({\n                    messageConversations: result.messageConversations,\n                    pager: result.pager,\n                }))\n\n            promises.push(promise)\n        }\n\n        const result = await Promise.all(promises)\n        const nrOfUnread = await api.getNrOfUnread(messageType.id)\n        const messageConversations = result.reduce(\n            (accumulated, r) => accumulated.concat(r.messageConversations),\n            []\n        )\n\n        dispatch(\n            createAction(actions.MESSAGE_CONVERSATIONS_LOAD_SUCCESS, {\n                messageConversations,\n                pager: result[result.length - 1].pager,\n                messageType,\n                selectedMessageType,\n                nrOfUnread,\n            })\n        )\n    } catch (error) {\n        dispatch(\n            createAction(actions.MESSAGE_CONVERSATIONS_LOAD_ERROR, { error })\n        )\n    }\n}\n\nexport const deleteMessageConversations = (\n    messageConversationIds,\n    messageType\n) => async dispatch => {\n    try {\n        const promises = messageConversationIds.map(messageConversationId =>\n            api.deleteMessageConversation(messageConversationId)\n        )\n\n        await Promise.all(promises)\n\n        dispatch(\n            createAction(actions.MESSAGE_CONVERSATIONS_DELETE_SUCCESS, {\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(loadMessageConversations())\n    } catch (error) {\n        dispatch(\n            createAction(actions.MESSAGE_CONVERSATIONS_DELETE_ERROR, { error })\n        )\n    }\n}\n\nexport const sendMessage = ({\n    users,\n    userGroups,\n    organisationUnits,\n    messageConversationId,\n    messageType,\n}) => async (dispatch, getState) => {\n    try {\n        const {\n            messaging: { subject, input, attachments },\n        } = getState()\n\n        await api.sendMessage({\n            subject,\n            users,\n            userGroups,\n            organisationUnits,\n            text: input,\n            attachments,\n            id: messageConversationId,\n        })\n\n        dispatch(\n            createAction(actions.SEND_MESSAGE_SUCCESS, { messageType, page: 1 })\n        )\n        dispatch(loadMessageConversations())\n    } catch (error) {\n        dispatch(createAction(actions.SEND_MESSAGE_ERROR, { error }))\n    }\n}\n\nexport const sendFeedbackMessage = messageType => async (\n    dispatch,\n    getState\n) => {\n    const state = getState()\n    try {\n        await api.sendFeedbackMessage(\n            state.messaging.subject,\n            state.messaging.input\n        )\n\n        dispatch(\n            createAction(actions.SEND_MESSAGE_SUCCESS, {\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(loadMessageConversations())\n    } catch (error) {\n        dispatch(createAction(actions.SEND_MESSAGE_ERROR, { error }))\n    }\n}\n\nexport const replyMessage = ({\n    message,\n    internalReply,\n    messageConversation,\n    messageType,\n}) => async (dispatch, getState) => {\n    try {\n        const { id } = messageConversation\n        const state = getState()\n        const attachments = state.messaging.attachments.map(\n            attachment => attachment.id\n        )\n\n        await api.replyMessage({\n            message,\n            internalReply,\n            attachments,\n            id,\n        })\n\n        dispatch(\n            createAction(actions.REPLY_MESSAGE_SUCCESS, {\n                messageConversation: messageConversation,\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(loadMessageConversations())\n        dispatch(setSelectedMessageConversation(messageConversation))\n    } catch (error) {\n        dispatch(createAction(actions.REPLY_MESSAGE_ERROR, { error }))\n    }\n}\n\nexport const markMessageConversations = (\n    mode,\n    markedConversations,\n    messageType\n) => async dispatch => {\n    try {\n        await (mode === 'read'\n            ? api.markRead(markedConversations)\n            : api.markUnread(markedConversations))\n\n        dispatch(\n            createAction(actions.MARK_MESSAGE_CONVERSATIONS_SUCCESS, {\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(loadMessageConversations())\n    } catch (error) {\n        dispatch(\n            createAction(actions.MARK_MESSAGE_CONVERSATIONS_ERROR, { error })\n        )\n    }\n}\n\nexport const addRecipients = ({\n    users,\n    userGroups,\n    organisationUnits,\n    messageConversation,\n    messageType,\n}) => async dispatch => {\n    try {\n        const { id: messageConversationId } = messageConversation\n\n        await api.addRecipients({\n            users,\n            userGroups,\n            organisationUnits,\n            messageConversationId,\n        })\n\n        dispatch(\n            createAction(actions.ADD_RECIPIENTS_SUCCESS, {\n                messageConversation: messageConversation,\n                messageType: messageType,\n                page: 1,\n            })\n        )\n\n        dispatch(setSelectedMessageConversation(messageConversation))\n    } catch (error) {\n        dispatch(createAction(actions.ADD_RECIPIENTS_ERROR, { error }))\n    }\n}\n\nexport const addRecipientByUserId = id => async dispatch => {\n    try {\n        const user = await api.getUserById(id)\n\n        dispatch(createAction(actions.ADD_RECIPIENT_BY_ID_SUCCESS, user))\n    } catch (error) {\n        console.error(error)\n        // No action required, the field will just be empty\n    }\n}\n\nexport const addAttachment = attachment => async dispatch => {\n    dispatch(createAction(actions.ADD_ATTACHMENT, attachment))\n\n    try {\n        const result = await api.addAttachment(attachment)\n\n        dispatch(\n            createAction(actions.ADD_ATTACHMENT_SUCCESS, {\n                id: result.response.fileResource.id,\n                name: attachment.name,\n                contentLength: result.response.fileResource.contentLength,\n            })\n        )\n    } catch (error) {\n        dispatch(createAction(actions.ADD_ATTACHMENT_ERROR, { error }))\n    }\n}\n\nexport const downloadAttachment = (\n    messageConversationId,\n    messageId,\n    attachmentId\n) => async dispatch => {\n    try {\n        await api.downloadAttachment(\n            messageConversationId,\n            messageId,\n            attachmentId\n        )\n\n        dispatch(createAction(actions.DOWNLOAD_ATTACHMENT_SUCCESS))\n    } catch (error) {\n        dispatch(createAction(actions.DOWNLOAD_ATTACHMENT_ERROR, { error }))\n    }\n}\n\n/************************\n * PLAIN ACTION SECTION *\n ************************/\n\nexport const clearSnackMessage = () => createAction(actions.CLEAR_SNACK_MESSAGE)\n\nexport const clearCheckedIds = () => createAction(actions.CLEAR_CHECKED)\n\nexport const clearSelectedMessageConversation = () =>\n    createAction(actions.CLEAR_SELECTED_MESSAGE_CONVERSATION)\n\nexport const displaySnackMessage = ({\n    message,\n    onSnackActionClick,\n    onSnackRequestClose,\n    snackType,\n}) =>\n    createAction(actions.DISPLAY_SNACK_MESSAGE, {\n        message,\n        onSnackActionClick,\n        onSnackRequestClose,\n        snackType,\n    })\n\nexport const setAllChecked = messageConversationIds =>\n    createAction(actions.SET_ALL_CHECKED, { messageConversationIds })\n\nexport const setChecked = (messageConversation, selectedValue) =>\n    createAction(actions.SET_CHECKED, { messageConversation, selectedValue })\n\nexport const setFilter = (filter, filterType) =>\n    createAction(actions.SET_FILTER, { filter, filterType })\n\nexport const updateInputFields = (subject, input, recipients) =>\n    createAction(actions.UPDATE_INPUT_FIELDS, { subject, input, recipients })\n\nexport const clearAttachments = () => createAction(actions.CLEAR_ATTACHMENTS)\n\nexport const setSelectedMessageType = messageTypeId =>\n    createAction(actions.SET_SELECTED_MESSAGE_TYPE, { messageTypeId })\n\nexport const removeAttachment = attachmentId =>\n    createAction(actions.REMOVE_ATTACHMENT, { attachmentId })\n\nexport const cancelAttachment = attachmentName =>\n    createAction(actions.CANCEL_ATTACHMENT, { attachmentName })\n\nexport const setIsInFeedbackRecipientGroup = isInFeedbackRecipientGroup =>\n    createAction(actions.SET_IN_FEEDBACK_RECIPIENT_GROUP, {\n        isInFeedbackRecipientGroup,\n    })\n\nexport const setDhis2CoreVersion = version =>\n    createAction(actions.SET_DHIS2_CORE_VERSION, version)\n","import getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport { fade } from 'material-ui/utils/colorManipulator'\nimport {\n    blue50,\n    blue100,\n    blue300,\n    blue500,\n    pinkA200,\n    grey50,\n    grey100,\n    grey300,\n    grey500,\n    grey700,\n    grey900,\n    orange500,\n    white,\n    darkBlack,\n    fullBlack,\n} from 'material-ui/styles/colors'\n\nexport default getMuiTheme({\n    palette: {\n        negative: pinkA200,\n        blue50,\n        primary1Color: '#1D8BF1',\n        primary2Color: blue100,\n        primary3Color: blue300,\n        primary4Color: blue500,\n        accent1Color: grey50,\n        accent2Color: grey100,\n        accent3Color: grey300,\n        accent4Color: grey500,\n        followUp: orange500,\n        darkGray: grey700,\n        superDarkGray: grey900,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey300,\n        clockCircleColor: fade(darkBlack, 0.07),\n        shadowColor: fullBlack,\n    },\n})\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Snackbar from 'material-ui/Snackbar'\nimport { clearSnackMessage } from '../../actions'\nimport { compose, pure } from 'recompose'\nimport theme from '../../styles/theme'\n\nconst DEFAULT_MESSAGE_DURATION = 4000\nconst contentColorStyle = {\n    NEGATIVE: theme.palette.negative,\n    NEUTRAL: theme.palette.primary1Color,\n    POSITIVE: theme.palette.alternateTextColor,\n}\n\nclass CustomSnackBar extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            show: false,\n        }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n        if (!prevState.show && this.props.message) {\n            this.setState({\n                show: true,\n            })\n        }\n    }\n\n    closeMessage = () => {\n        this.props.clearSnackMessage()\n        this.setState({\n            show: false,\n        })\n        this.props.onSnackRequestClose && this.props.onSnackRequestClose()\n    }\n\n    render() {\n        return (\n            <Snackbar\n                open={this.props.message !== '' && this.state.show}\n                message={this.props.message || 'Missing snackbar message'}\n                autoHideDuration={DEFAULT_MESSAGE_DURATION}\n                onRequestClose={this.closeMessage}\n                action={this.props.onSnackActionClick && 'undo'}\n                onActionClick={() => {\n                    this.props.onSnackActionClick()\n                    this.setState({\n                        show: false,\n                    })\n                }}\n                contentStyle={{ color: contentColorStyle[this.props.type] }}\n                style={{ pointerEvents: 'none', whiteSpace: 'nowrap' }}\n                bodyStyle={{ pointerEvents: 'initial', maxWidth: 'none' }}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    message: state.messaging.snackMessage,\n    type: state.messaging.snackType,\n    onSnackActionClick: state.messaging.onSnackActionClick,\n    onSnackRequestClose: state.messaging.onSnackRequestClose,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            clearSnackMessage,\n        }\n    ),\n    pure\n)(CustomSnackBar)\n","const messageTypes = [\n    {\n        id: 'PRIVATE',\n        displayName: 'Inbox',\n        unread: 0,\n        loaded: 0,\n        loading: false,\n        total: 0,\n        page: 1,\n    },\n    {\n        id: 'VALIDATION_RESULT',\n        displayName: 'Validation',\n        unread: 0,\n        loaded: 0,\n        loading: false,\n        total: 0,\n        page: 1,\n    },\n    {\n        id: 'TICKET',\n        displayName: 'Ticket',\n        unread: 0,\n        loaded: 0,\n        loading: false,\n        total: 0,\n        page: 1,\n    },\n    {\n        id: 'SYSTEM',\n        displayName: 'System',\n        unread: 0,\n        loaded: 0,\n        loading: false,\n        total: 0,\n        page: 1,\n    },\n]\n\nexport default messageTypes\n","import i18n from '@dhis2/d2-i18n'\nimport log from 'loglevel'\nimport * as actions from '../constants/actions'\nimport messageTypes from '../constants/messageTypes'\nimport { POSITIVE, NEGATIVE, NEUTRAL } from '../constants/development'\nimport { findIndexOfId } from '../utils/helpers'\n\nexport const initialState = {\n    // Message conversation\n    messageConversations: {},\n    messageTypes,\n    selectedMessageType: undefined,\n    selectedMessageConversation: undefined,\n    settingSelectedMessageConversation: false,\n    checkedIds: [],\n    messageFilter: undefined,\n    statusFilter: undefined,\n    priorityFilter: undefined,\n    assignedToMeFilter: false,\n    markedForFollowUpFilter: false,\n    unreadFilter: false,\n    isInFeedbackRecipientGroup: false,\n    feedbackRecipientsId: undefined,\n    displayTimeDiff: 0,\n\n    // Input for create and reply\n    subject: '',\n    input: '',\n    recipients: [],\n\n    // Attachments\n    attachments: [],\n\n    // Snackbar\n    snackMessage: '',\n    onSnackActionClick: undefined,\n    onSnackRequestClose: undefined,\n    snackType: NEUTRAL,\n}\n\nfunction messageReducer(state = initialState, action) {\n    const stateMessageTypes = state.messageTypes\n    const oldAttachments = state.attachments\n\n    switch (action.type) {\n        case actions.SET_DISPLAY_TIME_DIFF_SUCCESS:\n            return {\n                ...state,\n                displayTimeDiff: action.payload,\n            }\n\n        case actions.MESSAGE_CONVERSATIONS_LOAD_SUCCESS: {\n            const replaceMessageType = stateMessageTypes.find(\n                type => type.id === action.payload.messageType.id\n            )\n            replaceMessageType.loaded =\n                action.payload.messageConversations.length\n            replaceMessageType.total = action.payload.pager.total\n            replaceMessageType.unread = action.payload.nrOfUnread\n            replaceMessageType.page = action.payload.pager.page\n            replaceMessageType.loading = false\n            messageTypes.splice(\n                [findIndexOfId(stateMessageTypes, replaceMessageType.id)],\n                1,\n                replaceMessageType\n            )\n\n            const setSelectedMessageType =\n                action.payload.selectedMessageType === replaceMessageType.id &&\n                (action.payload.selectedMessageType ===\n                    state.selectedMessageType ||\n                    state.selectedMessageType === undefined)\n\n            return {\n                ...state,\n                messageTypes,\n                messageConversations: {\n                    ...state.messageConversations,\n                    [replaceMessageType.id]:\n                        action.payload.messageConversations,\n                },\n                selectedMessageType: setSelectedMessageType\n                    ? replaceMessageType\n                    : state.selectedMessageType,\n            }\n        }\n\n        case actions.MESSAGE_CONVERSATION_UPDATE_ERROR:\n            return {\n                ...state,\n                snackMessage: action.payload.error.message,\n                snackType: NEGATIVE,\n            }\n\n        case actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS: {\n            let snackMessage = ''\n            switch (action.payload.identifier) {\n                case 'STATUS':\n                    snackMessage = i18n.t('Successfully updated status')\n                    break\n                case 'PRIORITY':\n                    snackMessage = i18n.t('Successfully updated priority')\n                    break\n                case 'ASSIGNEE':\n                    snackMessage = i18n.t('Successfully updated assignee')\n                    break\n                case 'FOLLOW_UP':\n                    snackMessage = i18n.t('Successfully changed followup')\n                    break\n                default:\n                    log.error(\n                        'Unexpected identifier for updateMessageConversations success'\n                    )\n                    break\n            }\n\n            return {\n                ...state,\n                snackMessage,\n                snackType: POSITIVE,\n            }\n        }\n\n        case actions.SEND_MESSAGE_ERROR:\n            return {\n                ...state,\n                snackMessage: action.payload.error.message,\n                snackType: NEGATIVE,\n            }\n\n        case actions.MESSAGE_CONVERSATIONS_DELETE_ERROR:\n            return {\n                ...state,\n                snackMessage: action.payload.error.message,\n                snackType: NEGATIVE,\n            }\n\n        case actions.MESSAGE_CONVERSATIONS_DELETE_SUCCESS:\n            return {\n                ...state,\n                snackMessage: i18n.t(\n                    'Successfully deleted message conversation(s)'\n                ),\n                snackType: POSITIVE,\n            }\n\n        case actions.DISPLAY_SNACK_MESSAGE:\n            return {\n                ...state,\n                snackMessage: action.payload.message,\n                snackType: action.payload.snackType,\n                onSnackActionClick: action.payload.onSnackActionClick,\n                onSnackRequestClose: action.payload.onSnackRequestClose,\n            }\n\n        case actions.CLEAR_SNACK_MESSAGE:\n            return {\n                ...state,\n                snackMessage: '',\n                snackType: NEUTRAL,\n            }\n\n        case actions.SET_CHECKED: {\n            const messageConversation = action.payload.messageConversation\n\n            let checkedIds = state.checkedIds\n            if (action.payload.selectedValue) {\n                checkedIds.push(messageConversation)\n            } else {\n                checkedIds = checkedIds.filter(\n                    element => element.id !== messageConversation.id\n                )\n            }\n\n            return {\n                ...state,\n                checkedIds,\n            }\n        }\n\n        case actions.SET_ALL_CHECKED:\n            return {\n                ...state,\n                checkedIds: action.payload.messageConversationIds,\n            }\n\n        case actions.CLEAR_CHECKED:\n            return {\n                ...state,\n                checkedIds: [],\n            }\n\n        case actions.SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS:\n            return {\n                ...state,\n                selectedMessageConversation: action.payload.messageConversation,\n                settingSelectedMessageConversation: false,\n            }\n\n        case actions.SET_SELECTED_MESSAGE_CONVERSATION:\n            return {\n                ...state,\n                settingSelectedMessageConversation: true,\n            }\n\n        case actions.CLEAR_SELECTED_MESSAGE_CONVERSATION:\n            return {\n                ...state,\n                selectedMessageConversation: undefined,\n            }\n\n        case actions.SET_SELECTED_MESSAGE_TYPE:\n            return {\n                ...state,\n                checkedIds: [],\n                selectedMessageType: stateMessageTypes.find(\n                    type => type.id === action.payload.messageTypeId\n                ),\n                selectedMessageConversations:\n                    state.messageConversations[action.payload.messageTypeId],\n                selectedMessageConversation: undefined,\n            }\n\n        case actions.UPDATE_INPUT_FIELDS:\n            return {\n                ...state,\n                subject: action.payload.subject,\n                input: action.payload.input,\n                recipients: action.payload.recipients,\n            }\n\n        case actions.ADD_RECIPIENT_BY_ID_SUCCESS:\n            return {\n                ...state,\n                recipients: [...state.recipients, action.payload],\n            }\n\n        case actions.SET_FILTER:\n            return {\n                ...state,\n                messageFilter:\n                    action.payload.filterType === 'MESSAGE'\n                        ? action.payload.filter\n                        : state.messageFilter,\n                statusFilter:\n                    action.payload.filterType === 'STATUS'\n                        ? action.payload.filter\n                        : state.statusFilter,\n                priorityFilter:\n                    action.payload.filterType === 'PRIORITY'\n                        ? action.payload.filter\n                        : state.priorityFilter,\n                assignedToMeFilter:\n                    action.payload.filterType === 'ASSIGNED_TO_ME'\n                        ? action.payload.filter\n                        : state.assignedToMeFilter,\n                markedForFollowUpFilter:\n                    action.payload.filterType === 'MARKED_FOR_FOLLOWUP'\n                        ? action.payload.filter\n                        : state.markedForFollowUpFilter,\n                unreadFilter:\n                    action.payload.filterType === 'UNREAD'\n                        ? action.payload.filter\n                        : state.unreadFilter,\n            }\n\n        case actions.LOAD_MESSAGE_CONVERSATIONS: {\n            const loadingMessageType = action.payload.messageType\n            loadingMessageType.loading = true\n\n            if (action.payload.loadMore) {\n                loadingMessageType.page++\n            }\n\n            messageTypes[\n                findIndexOfId(messageTypes, loadingMessageType.id)\n            ] = loadingMessageType\n\n            // TODO: This can probably be removed because action.payload.messageType === state.selectedMessageType\n            const selectedMessageType = state.selectedMessageType\n            if (selectedMessageType) {\n                selectedMessageType.loading = true\n                if (action.payload.loadMore) {\n                    selectedMessageType.page++\n                }\n            }\n\n            return {\n                ...state,\n                messageTypes,\n                selectedMessageType,\n            }\n        }\n\n        case actions.SET_IN_FEEDBACK_RECIPIENT_GROUP:\n            return {\n                ...state,\n                isInFeedbackRecipientGroup:\n                    action.payload.isInFeedbackRecipientGroup.authorized,\n                feedbackRecipientsId:\n                    action.payload.isInFeedbackRecipientGroup\n                        .feedbackRecipientsId,\n            }\n\n        case actions.ADD_ATTACHMENT_SUCCESS:\n            return {\n                ...state,\n                attachments: state.attachments.map(attachment =>\n                    attachment.name === action.payload.name\n                        ? {\n                              id: action.payload.id,\n                              name: attachment.name,\n                              contentLength: attachment.contentLength,\n                              loading: false,\n                          }\n                        : attachment\n                ),\n            }\n\n        case actions.ADD_ATTACHMENT_ERROR:\n            return {\n                ...state,\n                attachments: oldAttachments.filter(\n                    attachment => attachment.id !== action.payload.attachmentId\n                ),\n                snackMessage: action.payload.error.message,\n                snackType: NEGATIVE,\n            }\n\n        case actions.ADD_ATTACHMENT:\n            return {\n                ...state,\n                attachments: state.attachments.concat({\n                    name: action.payload.name,\n                    contentLength: action.payload.size,\n                    loading: true,\n                }),\n            }\n\n        case actions.REMOVE_ATTACHMENT:\n            return {\n                ...state,\n                attachments: oldAttachments.filter(\n                    attachment => attachment.id !== action.payload.attachmentId\n                ),\n            }\n\n        case actions.CANCEL_ATTACHMENT:\n            return {\n                ...state,\n                attachments: oldAttachments.filter(\n                    attachment =>\n                        attachment.name !== action.payload.attachmentName\n                ),\n            }\n\n        case actions.CLEAR_ATTACHMENTS:\n            return {\n                ...state,\n                attachments: [],\n            }\n\n        case actions.SET_DHIS2_CORE_VERSION:\n            return {\n                ...state,\n                dhis2CoreVersion: action.payload,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default messageReducer\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport messageReducer from './reducers/messageReducer'\n\nconst middlewares = [ReduxThunk]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(createLogger())\n}\n\nconst reducer = combineReducers({\n    messaging: messageReducer,\n})\n\nexport default createStore(\n    reducer,\n    composeEnhancers(applyMiddleware(...middlewares))\n)\n","import { createHashHistory } from 'history'\n\nexport default createHashHistory()\n","import React from 'react'\nimport FlatButton from 'material-ui/FlatButton'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport Clear from 'material-ui-icons/Clear'\nimport Download from 'material-ui-icons/CloudDownload'\nimport theme from '../../styles/theme'\nimport './Attachments.css'\n\nconst Attachments = ({\n    dataDirection,\n    attachments,\n    style,\n    removeAttachment,\n    downloadAttachment,\n    cancelAttachment,\n}) => (\n    <div className=\"attachment\" style={{ ...style }}>\n        {attachments.map((attachment, index) => (\n            <Attachment\n                // combining name with index prevents errors when user uploads files with duplicate names\n                key={`${attachment.name}-${index}`}\n                dataDirection={dataDirection}\n                attachment={attachment}\n                removeAttachment={removeAttachment}\n                downloadAttachment={downloadAttachment}\n                cancelAttachment={cancelAttachment}\n            />\n        ))}\n    </div>\n)\n\nconst Attachment = ({\n    dataDirection,\n    attachment,\n    removeAttachment,\n    downloadAttachment,\n    cancelAttachment,\n}) => {\n    return (\n        <FlatButton\n            className=\"attachment__button\"\n            backgroundColor={theme.palette.accent2Color}\n            label={`${attachment.name} (${parseFloat(\n                parseInt(attachment.contentLength, 10) / 1000000\n            ).toFixed(2)} MB)`}\n            labelPosition=\"after\"\n            onClick={() => {\n                dataDirection === 'download'\n                    ? downloadAttachment(attachment)\n                    : attachment.loading\n                    ? cancelAttachment(attachment.name)\n                    : removeAttachment(attachment)\n            }}\n            icon={dataDirection === 'download' ? <Download /> : <Clear />}\n        >\n            {attachment.loading && (\n                <LinearProgress\n                    className={'attachment__progress'}\n                    mode=\"indeterminate\"\n                />\n            )}\n        </FlatButton>\n    )\n}\n\nexport default Attachments\n","import React from 'react'\nimport Divider from 'material-ui/Divider'\nimport CardText from 'material-ui/Card/CardText'\nimport Attachments from '../Attachments/Attachments'\nimport i18n from '@dhis2/d2-i18n'\nimport Linkify from 'react-linkify'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\nimport moment from 'moment'\n\nconst styles = {\n    canvas(backgroundColor) {\n        return {\n            backgroundColor,\n            padding: '16px 16px 16px 16px',\n        }\n    },\n    innerCanvas: {\n        margin: '',\n        paddingBottom: '0px',\n    },\n    cardText: {\n        padding: '16px 0px 16px 0px',\n        fontFamily,\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'break-word',\n    },\n    fromFormat: {\n        fontFamily,\n    },\n    datePlacement: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginRight: '10px',\n    },\n    dateFormat: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        fontFamily,\n    },\n}\n\nconst Message = ({\n    displayTimeDiff,\n    message,\n    currentUser,\n    lastMessage,\n    downloadAttachment,\n    cancelAttachment,\n    enableAttachments,\n}) => {\n    const fromTitle = message.sender\n        ? currentUser && currentUser.id === message.sender.id\n            ? 'me'\n            : message.sender.displayName\n        : 'system'\n    const today = moment()\n    const messageDate = moment(message.created).add(displayTimeDiff)\n\n    return (\n        <div style={styles.canvas(theme.palette.canvasColor)}>\n            <div style={styles.innerCanvas}>\n                <div style={styles.fromFormat}>\n                    {message.internal\n                        ? i18n.t(`Internal message from ${fromTitle}`)\n                        : i18n.t(`Message from ${fromTitle}`)}\n                </div>\n\n                <div placement={'bottom'} style={styles.datePlacement}>\n                    <div style={styles.dateFormat}>\n                        {today.diff(messageDate, 'hours') < 72\n                            ? `${messageDate.from(today)}, ${messageDate.format(\n                                  'HH:mm'\n                              )}`\n                            : today.year() === messageDate.year()\n                            ? messageDate.format('MMM DD, HH:mm')\n                            : messageDate.format('MMM DD, YYYY HH:mm')}\n                    </div>\n                </div>\n\n                {enableAttachments && (\n                    <Attachments\n                        dataDirection={'download'}\n                        style={{ paddingLeft: 0 }}\n                        attachments={message.attachments}\n                        downloadAttachment={downloadAttachment}\n                        cancelAttachment={cancelAttachment}\n                    />\n                )}\n\n                <CardText style={styles.cardText}>\n                    <Linkify>{message.text}</Linkify>\n                </CardText>\n            </div>\n            {!lastMessage && <Divider />}\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport FlatButton from 'material-ui/FlatButton'\nimport AttachFile from 'material-ui-icons/AttachFile'\nimport i18n from '@dhis2/d2-i18n'\nimport './AttachmentUploadButton.css'\n\nconst createHandleChange = addAttachment => event => {\n    const files = event.target.files\n    const hasFile = files.length > 0\n\n    if (hasFile) {\n        addAttachment(files[0])\n    }\n}\n\nconst AttachmentUploadButton = ({ addAttachment }) => (\n    <FlatButton\n        className=\"attachment__upload-button\"\n        label={i18n.t('Upload attachment')}\n        labelPosition=\"after\"\n        containerElement=\"label\"\n        icon={<AttachFile />}\n    >\n        <input\n            className=\"attachment__upload-button--input\"\n            type=\"file\"\n            onChange={createHandleChange(addAttachment)}\n        />\n    </FlatButton>\n)\n\nexport default AttachmentUploadButton\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Card, CardActions, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport TextField from 'material-ui/TextField'\nimport AttachmentUploadButton from '../Attachments/AttachmentUploadButton'\nimport Attachments from '../Attachments/Attachments'\nimport { supportsAttachments } from '../../utils/helpers'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    replyMessage,\n    setSelectedMessageType,\n    updateInputFields,\n    displaySnackMessage,\n    addAttachment,\n    removeAttachment,\n    cancelAttachment,\n} from '../../actions'\nimport { NEGATIVE } from '../../constants/development'\n\nclass ReplyCard extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            discardState: false,\n        }\n    }\n\n    componentWillUnmount() {\n        this.wipeInput()\n    }\n\n    replyMessage = internalReply => {\n        const {\n            input: message,\n            selectedMessageConversation: messageConversation,\n            selectedMessageType: messageType,\n        } = this.props\n\n        this.props.replyMessage({\n            message,\n            internalReply,\n            messageConversation,\n            messageType,\n        })\n\n        this.wipeInput()\n    }\n\n    wipeInput = () => {\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n        this.setState({\n            inputError: false,\n        })\n    }\n\n    texFieldUpdate = (event, newValue) => {\n        this.props.updateInputFields('', newValue, [])\n    }\n\n    handleDiscard = () => {\n        const message = i18n.t('Reply discarded')\n        const snackType = NEGATIVE\n        const onSnackActionClick = () => this.setState({ discardState: false })\n        const onSnackRequestClose = () => {\n            this.setState({ discardState: false })\n            this.wipeInput()\n        }\n\n        this.setState({ discardState: true })\n        this.props.displaySnackMessage({\n            message,\n            onSnackActionClick,\n            onSnackRequestClose,\n            snackType,\n        })\n        this.setState({\n            expanded: false,\n        })\n    }\n\n    render() {\n        return (\n            <Card style={{ marginTop: '5px' }} expanded>\n                <CardText style={{ padding: '0px 0px 0px 16px' }}>\n                    <TextField\n                        key={this.props.messageConversation.id}\n                        id={this.props.messageConversation.id}\n                        rows={5}\n                        underlineShow={false}\n                        value={this.state.discardState ? '' : this.props.input}\n                        multiLine\n                        fullWidth\n                        floatingLabelText={i18n.t('Message')}\n                        onChange={this.texFieldUpdate}\n                    />\n                    {this.props.enableAttachments &&\n                        !this.state.discardState && (\n                            <Attachments\n                                dataDirection={'upload'}\n                                attachments={this.props.attachments}\n                                removeAttachment={attachment =>\n                                    this.props.removeAttachment(attachment.id)\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                            />\n                        )}\n\n                    <CardActions style={{ paddingLeft: '0px' }}>\n                        <RaisedButton\n                            primary\n                            label={i18n.t('Reply')}\n                            disabled={\n                                this.props.input === '' ||\n                                this.state.discardState\n                            }\n                            onClick={() => this.replyMessage(false)}\n                        />\n                        {this.props.isInFeedbackRecipientGroup &&\n                            this.props.selectedMessageType.id === 'TICKET' && (\n                                <FlatButton\n                                    primary\n                                    label={i18n.t('Internal reply')}\n                                    disabled={\n                                        this.props.input === '' ||\n                                        this.state.discardState\n                                    }\n                                    onClick={() => this.replyMessage(true)}\n                                />\n                            )}\n                        <FlatButton\n                            label={i18n.t('Discard')}\n                            disabled={\n                                this.props.input === '' ||\n                                this.state.discardState\n                            }\n                            onClick={this.handleDiscard}\n                        />\n                        {this.props.enableAttachments && (\n                            <AttachmentUploadButton\n                                addAttachment={attachment => {\n                                    this.props.addAttachment(attachment)\n                                }}\n                            />\n                        )}\n                        )\n                    </CardActions>\n                </CardText>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n    messageTypes: state.messaging.messageTypes,\n    input: state.messaging.input,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n    attachments: state.messaging.attachments,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            replyMessage,\n            setSelectedMessageType,\n            updateInputFields,\n            displaySnackMessage,\n            addAttachment,\n            removeAttachment,\n            cancelAttachment,\n        },\n        null,\n        { pure: false }\n    )\n)(ReplyCard)\n","import React, { Component } from 'react'\nimport ChipInput from 'material-ui-chip-input'\nimport { debounce } from '../../utils/helpers'\nimport i18n from '@dhis2/d2-i18n'\nimport * as api from '../../api/api'\n\nconst searchDelay = 300\nconst minCharLength = 2\n\n/*\n * An AutoComplete text field with suggestions from a given list of\n * identifiable objects. Selected objects are shown as chips in the text field.\n */\n\nclass SuggestionField extends Component {\n    state = {\n        input: '',\n        searchResult: [],\n        searchOnlyUsers: this.props.searchOnlyUsers,\n        searchOnlyFeedbackRecipients: this.props.searchOnlyFeedbackRecipients,\n        lastSearch: '',\n        errorText: undefined,\n    }\n\n    debouncedSearch = debounce(this.search.bind(this), searchDelay)\n\n    search(input) {\n        const doSearch =\n            !this.state.searchResult.find(\n                result => result.displayName === input\n            ) &&\n            input !== '' &&\n            input.length >= minCharLength\n\n        if (doSearch) {\n            const {\n                feedbackRecipientsId,\n                searchOnlyUsers,\n                searchOnlyFeedbackRecipients,\n            } = this.props\n\n            api.searchRecipients({\n                searchValue: input,\n                searchOnlyUsers,\n                searchOnlyFeedbackRecipients,\n                feedbackRecipientsId,\n            }).then(({ users, userGroups, organisationUnits }) => {\n                const addType = type => result => ({ ...result, type })\n                let internalSearchResult = users.map(addType('user'))\n\n                if (!this.state.searchOnlyUsers) {\n                    internalSearchResult = internalSearchResult\n                        .concat(userGroups.map(addType('userGroup')))\n                        .concat(\n                            organisationUnits.map(addType('organisationUnit'))\n                        )\n                }\n\n                this.setState({\n                    searchResult: internalSearchResult,\n                    errorText:\n                        internalSearchResult.length === 0\n                            ? i18n.t('No results found')\n                            : undefined,\n                })\n            })\n        } else {\n            this.setState({\n                lastSearch: input,\n                searchResult:\n                    (this.state.lastSearch !== '' && input === '') ||\n                    input.length < minCharLength\n                        ? []\n                        : this.state.searchResult,\n                errorText:\n                    input !== '' && input.length < minCharLength\n                        ? i18n.t(\n                              `Please enter at least ${minCharLength} characters`\n                          )\n                        : this.state.searchWarning,\n            })\n        }\n    }\n\n    onSuggestionClick = chip => {\n        if (this.props.onSuggestionClick !== undefined) {\n            this.props.onSuggestionClick(chip)\n        } else {\n            this.wipeInput()\n            this.debouncedSearch('')\n\n            const doInsert = !this.props.recipients.find(\n                recipient => recipient.id === chip.id\n            )\n\n            doInsert &&\n                this.props.updateRecipients([\n                    ...this.props.recipients,\n                    this.state.searchResult.find(\n                        result => result.id === chip.id\n                    ),\n                ])\n        }\n    }\n\n    onRemoveChip = id => {\n        this.props.updateRecipients(\n            this.props.recipients.filter(recipient => recipient.id !== id)\n        )\n    }\n\n    wipeInput = () => {\n        this.setState({\n            input: '',\n            searchResult: [],\n        })\n    }\n\n    updateInput = input => {\n        this.debouncedSearch(input)\n        this.setState({\n            input,\n        })\n    }\n\n    render() {\n        return (\n            <div\n                style={{ ...this.props.style, height: this.props.inputHeight }}\n            >\n                <ChipInput\n                    style={{ marginBottom: 16 }}\n                    disabled={\n                        this.props.disabled === undefined\n                            ? false\n                            : this.props.disabled\n                    }\n                    errorText={this.props.errorText || this.state.errorText}\n                    value={this.props.recipients}\n                    fullWidth\n                    openOnFocus\n                    searchText={this.state.input}\n                    floatingLabelText={this.props.label}\n                    dataSource={this.state.searchResult}\n                    dataSourceConfig={{ text: 'displayName', value: 'id' }}\n                    onUpdateInput={this.updateInput}\n                    onRequestAdd={chip => this.onSuggestionClick(chip)}\n                    onRequestDelete={id => this.onRemoveChip(id)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SuggestionField\n","import React from 'react'\nimport Subheader from 'material-ui/Subheader/Subheader'\n\nconst styles = {\n    subheaderTitle: {\n        height: '32px',\n        color: 'black',\n        paddingLeft: 0,\n        paddingRight: 16,\n    },\n    subheader(color, fontWeight) {\n        return {\n            height: '32px',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            padding: 0,\n            color,\n            fontWeight,\n        }\n    },\n}\n\nconst ExtendedChoiceLabel = ({\n    showTitle,\n    title,\n    label,\n    color,\n    fontWeight,\n}) => {\n    const displayLabel =\n        label && label !== 'NONE'\n            ? title === 'Assignee'\n                ? label\n                : `${label.charAt(0)}${label\n                      .toLowerCase()\n                      .substr(1, label.length)}`\n            : '-'\n\n    return (\n        <div style={{ flex: 2, paddingLeft: 10, maxWidth: 200 }}>\n            {showTitle && (\n                <Subheader style={styles.subheaderTitle}> {title} </Subheader>\n            )}\n            <Subheader style={styles.subheader(color, fontWeight)}>\n                {displayLabel}\n            </Subheader>\n        </div>\n    )\n}\n\nexport default ExtendedChoiceLabel\n","import theme from '../styles/theme'\nimport { fontFamily } from '../constants/development'\n\nexport const styles = {\n    canvas: {\n        flex: '3 0',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        height: 'calc(100vh - 110px)',\n        paddingTop: '10px',\n    },\n    innerCanvas: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0px 10px 0px 10px',\n    },\n    header: {\n        display: 'flex',\n    },\n    iconButton: {\n        display: 'flex',\n        alignSelf: 'center',\n    },\n    subjectSubheader: {\n        display: 'flex',\n        alignSelf: 'center',\n        fontSize: '20px',\n        fontFamily,\n    },\n    participantsCanvas: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    participants: {\n        paddingLeft: '12px',\n        paddingTop: '10px',\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        height: '32px',\n        marginRight: '3px',\n        marginBottom: '3px',\n    },\n    participantAddRow: {\n        display: 'flex',\n    },\n    participantsSuggestionField: {\n        paddingLeft: '12px',\n        marginBottom: '0px',\n        flex: 1,\n    },\n    participantsAdd: {\n        alignSelf: 'flex-end',\n        marginBottom: '28px',\n        paddingLeft: '12px',\n    },\n    messagesCanvas: {\n        marginBottom: '50px',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.accent2Color,\n        margin: '0px 10px 10px 10px',\n    },\n    messagesInnerCanvas: {\n        padding: '0px',\n    },\n}\n\nexport default styles\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\n\nimport history from '../../utils/history'\nimport {\n    addRecipients,\n    downloadAttachment,\n    cancelAttachment,\n    clearSelectedMessageConversation,\n} from '../../actions'\nimport { supportsAttachments } from '../../utils/helpers'\n\nimport { getInstance as getD2Instance } from 'd2/lib/d2'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport AddIcon from 'material-ui-icons/Add'\nimport NavigationBack from 'material-ui-icons/ArrowBack'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport Chip from 'material-ui/Chip'\nimport Paper from 'material-ui/Paper'\nimport i18n from '@dhis2/d2-i18n'\nimport Message from './Message'\nimport ReplyCard from './ReplyCard'\nimport SuggestionField from '../Common/SuggestionField'\nimport ExtendedChoiceLabel from '../Common/ExtendedChoiceLabel'\nimport { styles } from '../../styles/messageConversationStyles'\nimport theme from '../../styles/theme'\n\nconst NOTIFICATIONS = ['TICKET', 'VALIDATION_RESULT']\nconst maxParticipantsDisplay = 30\n\nclass MessageConversation extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            recipients: [],\n            currentUser: undefined,\n            cursor: 'auto',\n        }\n    }\n\n    componentDidMount() {\n        getD2Instance().then(instance => {\n            this.setState({\n                currentUser: instance.currentUser,\n            })\n        })\n    }\n\n    backToList = () => {\n        const {\n            clearSelectedMessageConversation,\n            messageConversation,\n        } = this.props\n        history.push(`/${messageConversation.messageType}`)\n        clearSelectedMessageConversation()\n    }\n\n    addRecipients = () => {\n        const users = this.state.recipients.filter(r => r.type === 'user')\n        const userGroups = this.state.recipients.filter(\n            r => r.type === 'userGroup'\n        )\n        const organisationUnits = this.state.recipients.filter(\n            r => r.type === 'organisationUnit'\n        )\n        const {\n            messageConversation,\n            selectedMessageType: messageType,\n        } = this.props\n\n        this.props.addRecipients({\n            users,\n            userGroups,\n            organisationUnits,\n            messageConversation,\n            messageType,\n        })\n\n        this.setState({\n            recipients: [],\n        })\n    }\n\n    updateRecipients = recipients => {\n        this.setState({\n            recipients,\n        })\n    }\n\n    render() {\n        const { messageConversation } = this.props\n        const messages = messageConversation.messages\n        const notification = !!(\n            NOTIFICATIONS.indexOf(messageConversation.messageType) + 1\n        )\n        const participants = messageConversation.userMessages\n            .slice(0, maxParticipantsDisplay)\n            .map(userMessage =>\n                typeof this.state.currentUser === 'undefined' ||\n                this.state.recipientsExpanded ||\n                this.state.currentUser.id !== userMessage.user.id\n                    ? userMessage.user.displayName\n                    : i18n.t('me')\n            )\n        const userMessagesLength = messageConversation.userMessages.length\n\n        if (userMessagesLength > maxParticipantsDisplay) {\n            participants.push(\n                ' + '.concat(userMessagesLength - maxParticipantsDisplay)\n            )\n        }\n\n        return (\n            <div id=\"messageconversation\" style={styles.canvas}>\n                <div style={styles.innerCanvas}>\n                    <div style={styles.header}>\n                        <IconButton\n                            style={styles.iconButton}\n                            tooltipPosition=\"bottom-right\"\n                            onClick={this.backToList}\n                            tooltip={i18n.t('Show all messages')}\n                        >\n                            <NavigationBack />\n                        </IconButton>\n                        <Subheader style={styles.subjectSubheader}>\n                            {messageConversation.subject}\n                        </Subheader>\n                        {this.props.displayExtendedChoices && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Status')}\n                                label={messageConversation.status}\n                            />\n                        )}\n                        {this.props.displayExtendedChoices && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Priority')}\n                                label={messageConversation.priority}\n                            />\n                        )}\n                        {notification && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Assignee')}\n                                label={\n                                    messageConversation.assignee\n                                        ? messageConversation.assignee\n                                              .displayName\n                                        : undefined\n                                }\n                            />\n                        )}\n                    </div>\n                    <div style={styles.participantsCanvas}>\n                        <Subheader\n                            style={{\n                                paddingLeft: '12px',\n                                paddingTop: '10px',\n                            }}\n                        >\n                            {i18n.t('Participants')}\n                        </Subheader>\n                        <div style={styles.participants}>\n                            {participants.map(participant => (\n                                <Chip key={participant} style={styles.chip}>\n                                    {participant}\n                                </Chip>\n                            ))}\n                        </div>\n                    </div>\n                    <div style={styles.participantAddRow}>\n                        <SuggestionField\n                            style={styles.participantsSuggestionField}\n                            label={i18n.t('Add participants to conversation')}\n                            messageConversation={messageConversation}\n                            recipients={this.state.recipients}\n                            updateRecipients={this.updateRecipients}\n                            limitSearchArray={messageConversation.userMessages}\n                        />\n                        <div style={styles.participantsAdd}>\n                            <FlatButton\n                                icon={<AddIcon />}\n                                onClick={() => this.addRecipients()}\n                                label={i18n.t('Add')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div style={styles.messagesCanvas}>\n                    <Paper style={styles.messagesInnerCanvas}>\n                        {messages.map((message, i) => (\n                            <Message\n                                key={message.id}\n                                displayTimeDiff={this.props.displayTimeDiff}\n                                message={message}\n                                messageConversation={messageConversation}\n                                notification={notification}\n                                currentUser={this.state.currentUser}\n                                lastMessage={i + 1 === messages.length}\n                                downloadAttachment={attachment =>\n                                    this.props.downloadAttachment(\n                                        messageConversation.id,\n                                        message.id,\n                                        attachment.id\n                                    )\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                                enableAttachments={this.props.enableAttachments}\n                            />\n                        ))}\n                    </Paper>\n                    <ReplyCard\n                        {...this.props}\n                        messageConversation={messageConversation}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    displayTimeDiff: state.messaging.displayTimeDiff,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            addRecipients,\n            downloadAttachment,\n            cancelAttachment,\n            clearSelectedMessageConversation,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversation)\n","import React, { Component } from 'react'\n\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Badge from 'material-ui/Badge'\nimport Subheader from 'material-ui/Subheader/Subheader'\n\nimport i18n from '@dhis2/d2-i18n'\n\nimport theme from '../../styles/theme'\n\nclass MessageTypeItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            backgroundColor: theme.palette.accent2Color,\n            textColor: theme.palette.darkGray,\n        }\n    }\n\n    onClick = () => {\n        this.props.onClick()\n    }\n\n    onMouseEnter = () => {\n        this.setHoverText()\n        this.setState({ cursor: 'pointer' })\n    }\n    onMouseLeave = () => {\n        this.setNeutralText()\n        this.setState({ cursor: 'auto' })\n    }\n\n    setNeutralText = () => this.setTextColor(theme.palette.accent2Color)\n    setHoverText = () => this.setTextColor(theme.palette.accent3Color)\n\n    setTextColor = color => {\n        this.setState({\n            backgroundColor: color,\n        })\n    }\n\n    getBackgroundColor = (selectedValue, id) =>\n        selectedValue && id === selectedValue.id\n            ? theme.palette.accent3Color\n            : this.state.backgroundColor\n\n    render() {\n        return (\n            <div\n                role=\"presentation\"\n                style={{\n                    ...this.state,\n                    backgroundColor: this.getBackgroundColor(\n                        this.props.selectedMessageType,\n                        this.props.messageType.id\n                    ),\n                    cursor: this.state.cursor,\n                    alignItems: 'center',\n                    height: '49px',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                }}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onClick={() => this.onClick()}\n            >\n                <Subheader\n                    style={{\n                        marginLeft: '5px',\n                        fontSize:\n                            this.props.selectedMessageType &&\n                            this.props.messageType.id ===\n                                this.props.selectedMessageType.id\n                                ? '18px'\n                                : '16px',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        color:\n                            this.props.selectedMessageType &&\n                            this.props.messageType.id ===\n                                this.props.selectedMessageType.id\n                                ? theme.palette.primary1Color\n                                : this.state.textColor,\n                    }}\n                >\n                    {i18n.t(this.props.messageType.displayName)}\n                </Subheader>\n                {this.props.loading ? (\n                    <CircularProgress\n                        style={{ marginRight: '10px' }}\n                        color={theme.palette.primary1Color}\n                        size={24}\n                    />\n                ) : (\n                    this.props.messageType.unread > 0 && (\n                        <Badge\n                            style={{ marginTop: '12px', marginRight: '5px' }}\n                            badgeContent={\n                                this.props.messageType.unread > 100\n                                    ? '99+'\n                                    : this.props.messageType.unread\n                            }\n                            secondary\n                            badgeStyle={{ backgroundColor: '#439E8E' }}\n                        />\n                    )\n                )}\n            </div>\n        )\n    }\n}\n\nexport default MessageTypeItem\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { List } from 'material-ui/List'\nimport Divider from 'material-ui/Divider'\nimport Toggle from 'material-ui/Toggle'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport { setSelectedMessageType, clearCheckedIds } from '../../actions'\nimport MessageTypeItem from './MessageTypeItem'\nimport theme from '../../styles/theme'\nimport moment from 'moment'\n\nconst styles = {\n    canvas: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: 'calc(100vh - 95px)',\n        borderLeftStyle: 'solid',\n        borderLeftWidth: '0.5px',\n        borderLeftColor: theme.palette.accent4Color,\n        borderRightStyle: 'solid',\n        borderRightWidth: '1px',\n        borderRightColor: theme.palette.accent4Color,\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        minWidth: '200px',\n    },\n}\n\nclass SidebarList extends Component {\n    constructor(props) {\n        super(props)\n        this.props.setSelectedMessageType(this.props.match.params.messageType)\n    }\n\n    render() {\n        const messageTypes = this.props.messageTypes\n\n        return (\n            <div style={styles.canvas}>\n                <List\n                    style={{\n                        padding: '0px',\n                    }}\n                >\n                    {messageTypes &&\n                        messageTypes.map(messageType => (\n                            <div key={messageType.id}>\n                                <MessageTypeItem\n                                    messageType={messageType}\n                                    onClick={() => {\n                                        this.props.setSelectedMessageType(\n                                            messageType.id\n                                        )\n                                        this.props.updateInputFields('', '', [])\n                                        this.props.attachments.length > 0 &&\n                                            this.props.clearAttachments()\n                                        history.push(`/${messageType.id}`)\n                                    }}\n                                    selectedMessageType={\n                                        this.props.selectedMessageType\n                                    }\n                                    loading={messageType.loading}\n                                />\n                                <Divider />\n                            </div>\n                        ))}\n                </List>\n                <Toggle\n                    style={{ width: '', margin: '20px' }}\n                    label={`${i18n.t('Auto refresh')} (${moment(\n                        this.props.refreshTimer\n                    ).format('mm:ss')})`}\n                    toggled={this.props.autoRefresh}\n                    onToggle={() =>\n                        this.props.setAutoRefresh(!this.props.autoRefresh)\n                    }\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    messageTypes: state.messaging.messageTypes,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setSelectedMessageType,\n            clearCheckedIds,\n        },\n        null,\n        { pure: false }\n    )\n)(SidebarList)\n","import theme from '../styles/theme'\n\nexport const messagePanelContainer = {\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    borderRightWidth: '1px',\n    borderRightColor: theme.palette.accent4Color,\n    height: 'calc(100vh - 95px)',\n}\n\nexport const subheader = {\n    paddingLeft: '0px',\n    fontSize: '20px',\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport Checkbox from 'material-ui/Checkbox'\nimport Paper from 'material-ui/Paper'\nimport i18n from '@dhis2/d2-i18n'\nimport { setAllChecked, clearCheckedIds } from '../../actions'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\n\nconst fontSize = '16px'\n\nconst styles = {\n    canvas(backgroundColor) {\n        return {\n            backgroundColor,\n            display: 'flex',\n            transition: 'all 0.2s ease-in-out',\n            boxSizing: 'border-box',\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            alignSelf: 'center',\n            boxShadow: 'none',\n            borderBottom: '1px solid #dfdfdf',\n        }\n    },\n    checkBox: {\n        flex: '0 0 32px',\n        display: 'flex',\n        alignSelf: 'center',\n        paddingLeft: '12px',\n    },\n    sender: {\n        fontFamily,\n        fontSize,\n        flex: 3,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: 'black',\n        paddingLeft: 10,\n        alignSelf: 'center',\n    },\n    subject: {\n        flex: 8,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        fontFamily,\n        fontSize,\n        color: 'black',\n        paddingLeft: 10,\n    },\n    extendedLabel: {\n        flex: 2,\n        color: 'black',\n        fontSize,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        padding: '0 0 0 10px',\n    },\n}\n\nclass MessageConversationListItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            cursor: 'auto',\n            allChecked: false,\n        }\n    }\n\n    componentDidUpdate() {\n        if (\n            this.state.allChecked &&\n            this.props.checkedIds.length < this.props.children.length\n        ) {\n            this.setState({ allChecked: false })\n        }\n    }\n\n    render() {\n        const displayExtendedChoices = this.props.displayExtendedChoices\n\n        return (\n            <Paper style={styles.canvas(theme.palette.canvasColor)}>\n                <Checkbox\n                    checked={this.state.allChecked}\n                    style={styles.checkBox}\n                    onCheck={(event, isInputChecked) => {\n                        this.state.allChecked\n                            ? this.props.clearCheckedIds()\n                            : this.props.setAllChecked(\n                                  this.props.children.map(child => ({\n                                      id: child.id,\n                                  }))\n                              )\n\n                        this.setState({ allChecked: !this.state.allChecked })\n                    }}\n                />\n                <div style={styles.sender}>{i18n.t('Sender')}</div>\n                <Subheader style={styles.subject}>\n                    {i18n.t('Subject')}\n                </Subheader>\n                {displayExtendedChoices && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Status')}\n                    </Subheader>\n                )}\n                {displayExtendedChoices && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Priority')}\n                    </Subheader>\n                )}\n                {this.props.notification && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Assignee')}\n                    </Subheader>\n                )}\n                <Subheader style={styles.extendedLabel}>\n                    {i18n.t('Date')}\n                </Subheader>\n            </Paper>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    checkedIds: state.messaging.checkedIds,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setAllChecked,\n            clearCheckedIds,\n        }\n    )\n)(MessageConversationListItem)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport Checkbox from 'material-ui/Checkbox'\nimport Paper from 'material-ui/Paper'\nimport Flag from 'material-ui-icons/Flag'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport {\n    setChecked,\n    setSelectedMessageConversation,\n    markMessageConversations,\n    clearCheckedIds,\n    setFilter,\n    updateInputFields,\n    clearAttachments,\n} from '../../actions'\nimport ExtendedChoiceLabel from '../Common/ExtendedChoiceLabel'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\nimport moment from 'moment'\n\nconst styles = {\n    container(backgroundColor, wideview, cursor) {\n        return {\n            backgroundColor,\n            display: 'flex',\n            transition: 'all 0.2s ease-in-out',\n            cursor: cursor,\n            boxSizing: 'border-box',\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            boxShadow: 'none',\n            borderBottom: '1px solid #dfdfdf',\n            flexWrap: wideview ? 'nowrap' : 'wrap',\n        }\n    },\n    checkBox(wideview) {\n        return {\n            flex: '0 0 32px',\n            display: 'flex',\n            alignSelf: 'center',\n            paddingLeft: wideview ? 12 : 6,\n        }\n    },\n    flag: {\n        color: theme.palette.followUp,\n        marginRight: 4,\n    },\n    sender(wideview, fontWeight) {\n        return {\n            fontFamily,\n            fontSize: '14px',\n            flex: 3,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            display: 'flex',\n            alignItems: 'center',\n            color: 'black',\n            paddingLeft: wideview ? 10 : 0,\n            fontWeight,\n        }\n    },\n    subject(wideview, fontColor, fontWeight) {\n        return {\n            flex: 8,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            paddingLeft: 10,\n            fontFamily,\n            color: fontColor,\n            fontWeight,\n            order: wideview ? 'inherit' : 10,\n            marginTop: wideview ? 0 : -10,\n            flexBasis: wideview ? '0%' : '100%',\n        }\n    },\n    dateFormat(wideview, fontColor, fontWeight) {\n        return {\n            flex: 2,\n            fontFamily,\n            paddingLeft: wideview ? 10 : 0,\n            paddingRight: wideview ? 0 : 10,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            textAlign: wideview ? '' : 'end',\n            color: fontColor,\n            fontWeight,\n        }\n    },\n}\n\nclass MessageConversationListItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            backgroundColor: theme.palette.canvasColor,\n            cursor: 'auto',\n        }\n    }\n\n    onClick = messageConversation => {\n        this.props.setSelectedMessageConversation(messageConversation)\n        if (messageConversation && !messageConversation.read) {\n            this.props.markMessageConversations(\n                'read',\n                [messageConversation.id],\n                this.props.selectedMessageType\n            )\n        }\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n        history.push(\n            `/${messageConversation.messageType}/${messageConversation.id}`\n        )\n    }\n\n    onMouseEnter = () =>\n        this.setState({\n            cursor: 'pointer',\n            backgroundColor: theme.palette.accent2Color,\n        })\n    onMouseLeave = () =>\n        this.setState({\n            cursor: 'auto',\n            backgroundColor: theme.palette.canvasColor,\n        })\n\n    getBackgroundColor = (messageConversation, checked) => {\n        const selectedMessageConversation =\n            this.props.selectedMessageConversation &&\n            messageConversation.id === this.props.selectedMessageConversation.id\n\n        if (checked && !selectedMessageConversation) {\n            return theme.palette.blue50\n        } else if (selectedMessageConversation) {\n            return theme.palette.accent3Color\n        }\n        return this.state.backgroundColor\n    }\n\n    render() {\n        const messageConversation = this.props.messageConversation\n        const title = messageConversation.lastSender\n            ? messageConversation.lastSender.displayName\n            : this.props.selectedMessageType.displayName\n        const checked = !!this.props.checkedIds.find(\n            x => x.id === messageConversation.id\n        )\n\n        const displayExtendedChoices = this.props.displayExtendedChoices\n\n        const displayTimeDiff = this.props.displayTimeDiff\n\n        const today = moment()\n        const messageDate = moment(messageConversation.lastMessage).add(\n            displayTimeDiff\n        )\n        const fontWeight = !messageConversation.read ? 'bold' : ''\n        const fontColor = this.props.messageConversation.read\n            ? 'black'\n            : theme.palette.darkGray\n\n        const containerBackgroundColor = this.getBackgroundColor(\n            messageConversation,\n            checked\n        )\n\n        return (\n            <Paper\n                style={styles.container(\n                    containerBackgroundColor,\n                    this.props.wideview,\n                    this.state.cursor\n                )}\n                onClick={event => {\n                    const onClick =\n                        event.target.innerText !== undefined &&\n                        event.target.innerText !== ''\n\n                    if (\n                        onClick &&\n                        !this.props.settingSelectedMessageConversation\n                    ) {\n                        this.onClick(messageConversation)\n                        this.props.checkedIds.length > 0 &&\n                            this.props.clearCheckedIds()\n                        if (\n                            this.props.wideview &&\n                            (this.props.messageFilter !== undefined ||\n                                this.props.priorityFilter !== undefined ||\n                                this.props.statusFilter !== undefined)\n                        ) {\n                            this.props.setFilter(undefined, 'MESSAGE')\n                        }\n                    }\n                }}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                <Checkbox\n                    checked={checked}\n                    style={styles.checkBox(this.props.wideview)}\n                    onCheck={(event, isInputChecked) => {\n                        this.props.setChecked(messageConversation, !checked)\n                    }}\n                />\n                <div style={styles.sender(this.props.wideview, fontWeight)}>\n                    {messageConversation.followUp && (\n                        <Flag style={styles.flag} />\n                    )}\n                    <span>{title}</span>\n                </div>\n                <Subheader\n                    style={styles.subject(\n                        this.props.wideview,\n                        fontColor,\n                        fontWeight\n                    )}\n                >\n                    {messageConversation.subject}\n                </Subheader>\n                {displayExtendedChoices && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Status')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={messageConversation.status}\n                    />\n                )}\n                {displayExtendedChoices && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Priority')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={messageConversation.priority}\n                    />\n                )}\n                {this.props.notification && this.props.wideview && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Assignee')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={\n                            messageConversation.assignee\n                                ? messageConversation.assignee.displayName\n                                : undefined\n                        }\n                    />\n                )}\n                <Subheader\n                    style={styles.dateFormat(\n                        this.props.wideview,\n                        fontColor,\n                        fontWeight\n                    )}\n                >\n                    {today.diff(messageDate, 'hours') < 72\n                        ? messageDate.from(today)\n                        : today.year() === messageDate.year()\n                        ? messageDate.format('MMM DD')\n                        : messageDate.format('ll')}\n                </Subheader>\n            </Paper>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    settingSelectedMessageConversation:\n        state.messaging.settingSelectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n    checkedIds: state.messaging.checkedIds,\n    displayTimeDiff: state.messaging.displayTimeDiff,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    attachments: state.messaging.attachments,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setChecked,\n            setSelectedMessageConversation,\n            markMessageConversations,\n            clearCheckedIds,\n            setFilter,\n            updateInputFields,\n            clearAttachments,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversationListItem)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport i18n from '@dhis2/d2-i18n'\nimport { loadMessageConversations } from '../../actions'\nimport { messagePanelContainer } from '../../styles/style'\nimport theme from '../../styles/theme'\nimport ListItemHeader from './ListItemHeader'\nimport MessageConversationListItem from './MessageConversationListItem'\nimport { dedupeById, debounce } from '../../utils/helpers'\n\nconst NOTIFICATIONS = ['VALIDATION_RESULT', 'TICKET']\nconst bottomEmptyHeight = 50\n\nconst styles = {\n    canvas(wideview) {\n        return {\n            flex: '1 0',\n            maxWidth: wideview ? 'none' : '350px',\n            minWidth: wideview ? 'none' : '250px',\n            borderRightStyle: wideview ? '' : 'solid',\n            ...messagePanelContainer,\n        }\n    },\n    loading: {\n        backgroundColor: theme.palette.accent2Color,\n        height: `${bottomEmptyHeight}px`,\n        transition: 'all 0.2s ease-in-out',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n}\n\nclass MessageConversationList extends Component {\n    onScroll = messageType => {\n        const messageList = document.getElementById('messagelist')\n        if (\n            !this.props.selectedMessageType.loading &&\n            this.isBottom(messageList) &&\n            messageType.loaded < messageType.total\n        ) {\n            this.props.loadMessageConversations(\n                messageType,\n                messageType.id,\n                true\n            )\n        }\n    }\n\n    debouncedOnScroll = debounce(this.onScroll, 150)\n    isBottom = el => el.scrollHeight - el.scrollTop < window.outerHeight\n\n    render() {\n        const children = dedupeById(\n            this.props.messageConversations[this.props.selectedMessageType.id]\n        )\n\n        const messageType = this.props.selectedMessageType\n            ? this.props.selectedMessageType\n            : ''\n        const selectedValue = this.props.selectedMessageConversation\n            ? this.props.selectedMessageConversation.id\n            : ''\n\n        const notification = !!(NOTIFICATIONS.indexOf(messageType.id) + 1)\n        return (\n            <div\n                id={'messagelist'}\n                onScroll={() =>\n                    this.debouncedOnScroll(this.props.selectedMessageType)\n                }\n                style={styles.canvas(this.props.wideview)}\n            >\n                {this.props.wideview && (\n                    <ListItemHeader\n                        notification={notification}\n                        displayExtendedChoices={\n                            this.props.displayExtendedChoices\n                        }\n                    >\n                        {children}\n                    </ListItemHeader>\n                )}\n                {children && children.length !== 0\n                    ? children.map(child => (\n                          <MessageConversationListItem\n                              key={child.id}\n                              messageConversation={child}\n                              wideview={this.props.wideview}\n                              selectedValue={selectedValue}\n                              notification={notification}\n                              displayExtendedChoices={\n                                  this.props.displayExtendedChoices\n                              }\n                          />\n                      ))\n                    : !this.props.selectedMessageType.loading && (\n                          <Subheader>\n                              {i18n.t(\n                                  `No ${messageType.displayName.toLowerCase()} messages`\n                              )}\n                          </Subheader>\n                      )}\n                {this.props.selectedMessageType.loading && (\n                    <div style={styles.loading}>\n                        <CircularProgress\n                            style={{ marginTop: '10px' }}\n                            color={theme.palette.primary1Color}\n                        />\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    messageTypes: state.messaging.messageTypes,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    messageConversations: state.messaging.messageConversations,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            loadMessageConversations,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversationList)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { generateUid } from 'd2/lib/uid'\nimport i18n from '@dhis2/d2-i18n'\nimport { Card, CardActions, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport TextField from 'material-ui/TextField'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport RadioButton from 'material-ui/RadioButton'\nimport {\n    sendMessage,\n    sendFeedbackMessage,\n    displaySnackMessage,\n    updateInputFields,\n    addAttachment,\n    removeAttachment,\n    cancelAttachment,\n    addRecipientByUserId,\n} from '../../actions'\nimport history from '../../utils/history'\nimport { supportsAttachments } from '../../utils/helpers'\nimport SuggestionField from '../Common/SuggestionField'\nimport AttachmentUploadButton from '../Attachments/AttachmentUploadButton'\nimport { NEGATIVE } from '../../constants/development'\nimport Attachments from '../Attachments/Attachments'\nimport { subheader } from '../../styles/style'\n\nconst styles = {\n    canvas: {\n        flex: '3 0',\n        margin: '10px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        height: 'calc(100vh - 110px)',\n    },\n    messageTypeField: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    messageType: { width: '300px', marginTop: '10px' },\n}\n\nclass CreateMessage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isMessageFeedback: false,\n        }\n    }\n\n    componentDidMount() {\n        const { addRecipientByUserId } = this.props\n        const { messageId, recipientId } = this.props.match.params\n\n        if (messageId === 'create' && recipientId) {\n            addRecipientByUserId(recipientId)\n        }\n    }\n\n    subjectUpdate = (event, newValue) => {\n        this.props.updateInputFields(\n            newValue,\n            this.props.input,\n            this.props.recipients\n        )\n    }\n\n    inputUpdate = (event, newValue) => {\n        this.props.updateInputFields(\n            this.props.subject,\n            newValue,\n            this.props.recipients\n        )\n    }\n\n    updateRecipients = recipients => {\n        this.props.updateInputFields(\n            this.props.subject,\n            this.props.input,\n            recipients\n        )\n    }\n\n    sendMessage = () => {\n        const messageTypeId = this.state.isMessageFeedback\n            ? 'TICKET'\n            : 'PRIVATE'\n        const messageType = this.props.messageTypes.find(\n            messageType => messageType.id === messageTypeId\n        )\n\n        if (this.state.isMessageFeedback) {\n            this.props.sendFeedbackMessage(messageType)\n            history.push('/TICKET')\n        } else {\n            const users = this.props.recipients.filter(r => r.type === 'user')\n            const userGroups = this.props.recipients.filter(\n                r => r.type === 'userGroup'\n            )\n            const organisationUnits = this.props.recipients.filter(\n                r => r.type === 'organisationUnit'\n            )\n            const messageConversationId = generateUid()\n\n            this.props.sendMessage({\n                users,\n                userGroups,\n                organisationUnits,\n                messageConversationId,\n                messageType,\n            })\n            history.push('/PRIVATE')\n        }\n    }\n\n    wipeInput = () => {\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n    }\n\n    handleDiscard = () => {\n        const message = i18n.t('Message discarded')\n        const snackType = NEGATIVE\n        const onSnackActionClick = () => history.push('/PRIVATE/create')\n        const onSnackRequestClose = () => this.wipeInput()\n\n        this.props.displaySnackMessage({\n            message,\n            onSnackActionClick,\n            onSnackRequestClose,\n            snackType,\n        })\n\n        history.push('/PRIVATE')\n    }\n\n    render() {\n        const disabled =\n            this.props.subject === '' ||\n            this.props.input === '' ||\n            (!this.state.isMessageFeedback &&\n                this.props.recipients.length === 0)\n\n        const discardDisabled =\n            this.props.subject === '' &&\n            this.props.input === '' &&\n            (!this.state.isMessageFeedback &&\n                this.props.recipients.length === 0)\n\n        return (\n            <div style={styles.canvas}>\n                <Subheader style={subheader}> {i18n.t('Create')}</Subheader>\n                <Card>\n                    <CardText>\n                        <SuggestionField\n                            style={{ margin: '0px' }}\n                            label={i18n.t('To')}\n                            disabled={this.state.isMessageFeedback}\n                            recipients={\n                                this.state.isMessageFeedback\n                                    ? [\n                                          {\n                                              id: 'id',\n                                              displayName: i18n.t(\n                                                  'Feedback recipient group'\n                                              ),\n                                          },\n                                      ]\n                                    : this.props.recipients\n                            }\n                            updateRecipients={this.updateRecipients}\n                            inputHeight={'100px'}\n                        />\n                        <div style={styles.messageTypeField}>\n                            <div style={styles.messageType}>\n                                <RadioButton\n                                    label={i18n.t('Private message')}\n                                    checked={!this.state.isMessageFeedback}\n                                    onCheck={() => {\n                                        this.setState({\n                                            isMessageFeedback: !this.state\n                                                .isMessageFeedback,\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div style={styles.messageType}>\n                                <RadioButton\n                                    label={i18n.t('Feedback message')}\n                                    checked={this.state.isMessageFeedback}\n                                    onCheck={() => {\n                                        this.setState({\n                                            isMessageFeedback: !this.state\n                                                .isMessageFeedback,\n                                        })\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <TextField\n                            floatingLabelText={i18n.t('Subject')}\n                            fullWidth\n                            value={this.props.subject}\n                            onChange={this.subjectUpdate}\n                        />\n                        <TextField\n                            key={'createMessage'}\n                            id={'createMessage'}\n                            rows={5}\n                            underlineShow={false}\n                            value={this.props.input}\n                            multiLine\n                            fullWidth\n                            floatingLabelText={i18n.t('Message')}\n                            onChange={this.inputUpdate}\n                        />\n                        {this.props.enableAttachments && (\n                            <Attachments\n                                dataDirection={'upload'}\n                                attachments={this.props.attachments}\n                                removeAttachment={attachment =>\n                                    this.props.removeAttachment(attachment.id)\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                            />\n                        )}\n                        <CardActions style={{ paddingLeft: '0px' }}>\n                            <RaisedButton\n                                primary\n                                disabled={disabled}\n                                label={i18n.t('Send')}\n                                onClick={() => this.sendMessage()}\n                            />\n                            <FlatButton\n                                label={i18n.t('Discard')}\n                                disabled={discardDisabled}\n                                onClick={this.handleDiscard}\n                            />\n                            {this.props.enableAttachments && (\n                                <AttachmentUploadButton\n                                    addAttachment={attachment => {\n                                        this.props.addAttachment(attachment)\n                                    }}\n                                />\n                            )}\n                        </CardActions>\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    messageTypes: state.messaging.messageTypes,\n    subject: state.messaging.subject,\n    input: state.messaging.input,\n    recipients: state.messaging.recipients,\n    attachments: state.messaging.attachments,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            sendMessage,\n            sendFeedbackMessage,\n            displaySnackMessage,\n            updateInputFields,\n            addAttachment,\n            removeAttachment,\n            cancelAttachment,\n            addRecipientByUserId,\n        },\n        null,\n        { pure: false }\n    )\n)(CreateMessage)\n","import i18n from '@dhis2/d2-i18n'\n\nconst extendedChoices = {\n    STATUS: [\n        { key: 'NONE', value: 'NONE', primaryText: i18n.t('No status') },\n        { key: 'OPEN', value: 'OPEN', primaryText: i18n.t('Open') },\n        { key: 'PENDING', value: 'PENDING', primaryText: i18n.t('Pending') },\n        { key: 'INVALID', value: 'INVALID', primaryText: i18n.t('Invalid') },\n        { key: 'SOLVED', value: 'SOLVED', primaryText: i18n.t('Solved') },\n    ],\n    PRIORITY: [\n        { key: 'NONE', value: 'NONE', primaryText: i18n.t('No priority') },\n        { key: 'HIGH', value: 'HIGH', primaryText: i18n.t('High') },\n        { key: 'MEDIUM', value: 'MEDIUM', primaryText: i18n.t('Medium') },\n        { key: 'LOW', value: 'LOW', primaryText: i18n.t('Low') },\n    ],\n}\n\nexport default extendedChoices\n","import React from 'react'\nimport Dialog from 'material-ui/Dialog'\nimport i18n from '@dhis2/d2-i18n'\nimport SuggestionField from './SuggestionField'\n\nconst AssignToDialog = ({\n    open,\n    onRequestClose,\n    updateMessageConversations,\n    messageType,\n    feedbackRecipientsId,\n}) => (\n    <Dialog\n        open={open}\n        onRequestClose={() => {\n            onRequestClose()\n        }}\n    >\n        <SuggestionField\n            onSuggestionClick={chip => {\n                updateMessageConversations([chip.id])\n                onRequestClose()\n            }}\n            searchOnlyUsers\n            searchOnlyFeedbackRecipients={messageType.id === 'TICKET'}\n            feedbackRecipientsId={feedbackRecipientsId}\n            recipients={[]}\n            key={'suggestionField'}\n            label={i18n.t('Assignee')}\n        />\n    </Dialog>\n)\n\nexport default AssignToDialog\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport FlatButton from 'material-ui/FlatButton'\nimport Dialog from 'material-ui/Dialog'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport ArrowDropRight from 'material-ui/svg-icons/navigation-arrow-drop-right'\nimport Assignment from 'material-ui-icons/Assignment'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport IconButton from 'material-ui/IconButton'\nimport Subheader from 'material-ui/Subheader'\nimport Divider from 'material-ui/Divider'\nimport Delete from 'material-ui-icons/Delete'\nimport MarkUnread from 'material-ui-icons/Markunread'\nimport Done from 'material-ui-icons/Done'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    clearCheckedIds,\n    clearSelectedMessageConversation,\n    deleteMessageConversations,\n    updateMessageConversations,\n    markMessageConversations,\n} from '../../actions'\nimport extendedChoices from '../../constants/extendedChoices'\nimport history from '../../utils/history'\nimport AssignToDialog from './AssignToDialog'\n\nconst multiSelectDisplayLimit = 99\n\nconst styles = {\n    canvas: {\n        width: '400px',\n        display: 'flex',\n    },\n    extendedChoices: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    nrSelected: {\n        padding: '0px 0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n}\n\nclass ToolbarExtendedChoicePicker extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            checkedItems: false,\n            dialogOpen: false,\n            assignToOpen: false,\n        }\n    }\n\n    getIds = () =>\n        this.props.selectedMessageConversation &&\n        this.props.checkedIds.length === 0\n            ? [this.props.selectedMessageConversation.id]\n            : this.props.checkedIds.map(id => id.id)\n\n    updateMessageConversation = (identifier, value) => {\n        const {\n            selectedMessageType: messageType,\n            selectedMessageConversation,\n        } = this.props\n        const messageConversationIds = this.getIds()\n\n        this.props.updateMessageConversations({\n            messageConversationIds,\n            identifier,\n            value,\n            messageType,\n            selectedMessageConversation,\n        })\n        this.props.checkedIds.length > 0 && this.props.clearCheckedIds()\n    }\n\n    markMessageConversations = mode => {\n        const ids = this.getIds()\n        this.props.markMessageConversations(\n            mode,\n            ids,\n            this.props.selectedMessageType\n        )\n        this.props.checkedIds.length > 0 && this.props.clearCheckedIds()\n    }\n\n    toggleDialog = () => {\n        this.setState({ dialogOpen: !this.state.dialogOpen })\n    }\n\n    render() {\n        const messageConversation = this.props.selectedMessageConversation\n        const multiSelect = this.props.checkedIds.length > 0\n        const display = multiSelect || messageConversation !== undefined\n\n        const actionButtons = [\n            <FlatButton\n                label={i18n.t('Cancel')}\n                primary\n                onClick={() => this.toggleDialog()}\n            />,\n            <FlatButton\n                label={i18n.t('Submit')}\n                primary\n                keyboardFocused\n                onClick={() => {\n                    this.props.deleteMessageConversations(\n                        this.getIds(),\n                        this.props.selectedMessageType\n                    )\n                    this.props.clearCheckedIds()\n                    this.toggleDialog()\n\n                    if (this.props.selectedMessageConversation) {\n                        this.props.clearSelectedMessageConversation()\n                        history.push(`/${this.props.selectedMessageType.id}`)\n                    }\n                }}\n            />,\n        ]\n\n        const displayNumberOfCheckedIds =\n            this.props.checkedIds.length > multiSelectDisplayLimit\n                ? `${multiSelectDisplayLimit}+`\n                : this.props.checkedIds.length\n\n        return display ? (\n            <div style={styles.canvas}>\n                <Dialog\n                    title={i18n.t(\n                        'Are you sure you want to delete selected message conversation(s)?'\n                    )}\n                    actions={actionButtons}\n                    modal={false}\n                    open={this.state.dialogOpen}\n                    onRequestClose={this.toggleDialog}\n                />\n                <AssignToDialog\n                    open={this.state.assignToOpen}\n                    onRequestClose={() =>\n                        this.setState({\n                            assignToOpen: !this.state.assignToOpen,\n                        })\n                    }\n                    updateMessageConversations={id =>\n                        this.updateMessageConversation('ASSIGNEE', id)\n                    }\n                    messageType={this.props.selectedMessageType}\n                    feedbackRecipientsId={this.props.feedbackRecipientsId}\n                />\n\n                <div style={styles.extendedChoices}>\n                    <IconButton\n                        tooltip={i18n.t('Delete selected')}\n                        onClick={() => {\n                            this.toggleDialog()\n                        }}\n                    >\n                        <Delete />\n                    </IconButton>\n\n                    <IconButton\n                        tooltip={i18n.t('Mark selected as unread')}\n                        onClick={() => {\n                            this.markMessageConversations('unread')\n                        }}\n                    >\n                        <MarkUnread />\n                    </IconButton>\n\n                    <IconButton\n                        tooltip={i18n.t('Mark selected as read')}\n                        onClick={() => {\n                            this.markMessageConversations('read')\n                        }}\n                    >\n                        <Done />\n                    </IconButton>\n                    {this.props.displayExtendedChoices && (\n                        <IconButton\n                            onClick={() =>\n                                this.setState({\n                                    assignToOpen: !this.state.assignToOpen,\n                                })\n                            }\n                            tooltip={i18n.t('Assign selected')}\n                        >\n                            <Assignment />\n                        </IconButton>\n                    )}\n                    {\n                        <IconMenu\n                            iconButtonElement={\n                                <IconButton>\n                                    <MoreVertIcon />\n                                </IconButton>\n                            }\n                            anchorOrigin={{\n                                horizontal: 'left',\n                                vertical: 'top',\n                            }}\n                            targetOrigin={{\n                                horizontal: 'left',\n                                vertical: 'top',\n                            }}\n                        >\n                            <MenuItem\n                                key={'markFollowUp'}\n                                value={'markFollowUp'}\n                                primaryText={i18n.t('Mark for followup')}\n                                onClick={() =>\n                                    this.updateMessageConversation(\n                                        'FOLLOW_UP',\n                                        true\n                                    )\n                                }\n                            />\n                            <MenuItem\n                                key={'clearFollowUp'}\n                                value={'clearFollowUp'}\n                                primaryText={i18n.t('Clear followup')}\n                                onClick={() =>\n                                    this.updateMessageConversation(\n                                        'FOLLOW_UP',\n                                        false\n                                    )\n                                }\n                            />\n                            {this.props.displayExtendedChoices && <Divider />}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    key={'clearAssigned'}\n                                    value={'clearAssigned'}\n                                    primaryText={i18n.t('Clear assignee')}\n                                    onClick={() =>\n                                        this.updateMessageConversation(\n                                            'ASSIGNEE',\n                                            undefined\n                                        )\n                                    }\n                                />\n                            )}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    primaryText={i18n.t('Set status')}\n                                    key={'setStatus'}\n                                    rightIcon={<ArrowDropRight />}\n                                    menuItems={extendedChoices.STATUS.map(\n                                        elem => (\n                                            <MenuItem\n                                                key={`${elem.key}_status`}\n                                                value={elem.value}\n                                                primaryText={elem.primaryText}\n                                                onClick={() =>\n                                                    this.updateMessageConversation(\n                                                        'STATUS',\n                                                        elem.key\n                                                    )\n                                                }\n                                            />\n                                        )\n                                    )}\n                                />\n                            )}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    primaryText={i18n.t('Set priority')}\n                                    key={'setPriority'}\n                                    rightIcon={<ArrowDropRight />}\n                                    menuItems={extendedChoices.PRIORITY.map(\n                                        elem => (\n                                            <MenuItem\n                                                key={`${elem.key}_priority`}\n                                                value={elem.value}\n                                                primaryText={elem.primaryText}\n                                                onClick={() =>\n                                                    this.updateMessageConversation(\n                                                        'PRIORITY',\n                                                        elem.key\n                                                    )\n                                                }\n                                            />\n                                        )\n                                    )}\n                                />\n                            )}\n                        </IconMenu>\n                    }\n                </div>\n                {multiSelect && (\n                    <Subheader style={styles.nrSelected}>\n                        {`${displayNumberOfCheckedIds} ${i18n.t('selected')}`}\n                    </Subheader>\n                )}\n            </div>\n        ) : (\n            <div />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    checkedIds: state.messaging.checkedIds,\n    feedbackRecipientsId: state.messaging.feedbackRecipientsId,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            clearCheckedIds,\n            clearSelectedMessageConversation,\n            deleteMessageConversations,\n            updateMessageConversations,\n            markMessageConversations,\n        },\n        null,\n        { pure: false }\n    )\n)(ToolbarExtendedChoicePicker)\n","import React, { Component } from 'react'\nimport ViewFancy from 'material-ui-icons/ViewList'\nimport ViewList from 'material-ui-icons/ViewHeadline'\nimport FlatButton from 'material-ui/FlatButton'\nimport Paper from 'material-ui/Paper'\nimport CreateMessageIcon from 'material-ui-icons/Add'\nimport NavigationBack from 'material-ui-icons/ArrowBack'\nimport TextField from 'material-ui/TextField'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport Subheader from 'material-ui/Subheader'\nimport IconMenu from 'material-ui/IconMenu'\nimport IconButton from 'material-ui/IconButton'\nimport Checkbox from 'material-ui/Checkbox/Checkbox'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport theme from '../../styles/theme'\nimport extendedChoices from '../../constants/extendedChoices'\nimport ToolbarExtendedChoicePicker from './ToolbarExtendedChoicePicker'\nimport { debounce } from '../../utils/helpers'\n\nconst headerHeight = '48px'\nconst searchDelay = 300\n\nconst styles = {\n    canvas(checkedOptions) {\n        return {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            backgroundColor: checkedOptions\n                ? theme.palette.blue50\n                : theme.palette.accent2Color,\n            zIndex: 10,\n        }\n    },\n    checkedOption: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        minWidth: '200px',\n        margin: '6px 0',\n    },\n    filterControl: {\n        flex: 2,\n        height: headerHeight,\n        marginRight: 16,\n        maxWidth: 256,\n    },\n    rightHandCanvas: {\n        flex: '2 0',\n        display: 'flex',\n        paddingLeft: 16,\n    },\n    // IE11 has buggy support for `justifyContent: flex-end;`\n    // to achieve the same result we use a spacer div\n    ie11Spacer: {\n        flexGrow: 1,\n    },\n    iconMenu: {\n        width: '30px',\n        display: 'flex',\n    },\n}\n\nclass Toolbar extends Component {\n    state = {\n        lastMessageFilter: '',\n    }\n    debouncedSearch = debounce(this.search, searchDelay)\n\n    search(messageFilter) {\n        if (\n            this.props.selectedMessageType &&\n            this.state.lastMessageFilter !== messageFilter\n        ) {\n            this.props.loadMessageConversations(\n                this.props.selectedMessageType,\n                this.props.selectedMessageType.id\n            )\n            this.setState({ lastMessageFilter: messageFilter })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            prevProps.selectedMessageType &&\n            this.props.selectedMessageType.id !==\n                prevProps.selectedMessageType.id\n        ) {\n            this.debouncedSearch('')\n            this.props.messageFilter !== undefined &&\n                this.props.setFilter(undefined, 'MESSAGE')\n            this.props.statusFilter !== undefined &&\n                this.props.setFilter(undefined, 'STATUS')\n            this.props.priorityFilter !== undefined &&\n                this.props.setFilter(undefined, 'PRIORITY')\n            this.props.assignedToMeFilter &&\n                this.props.setFilter(false, 'ASSIGNED_TO_ME')\n            this.props.markedForFollowUpFilter &&\n                this.props.setFilter(false, 'MARKED_FOR_FOLLOWUP')\n            this.props.unreadFilter && this.props.setFilter(false, 'UNREAD')\n        }\n\n        if (\n            this.props.selectedMessageType !== undefined &&\n            !this.props.selectedMessageType.loading &&\n            (prevProps.statusFilter !== this.props.statusFilter ||\n                prevProps.priorityFilter !== this.props.priorityFilter ||\n                prevProps.assignedToMeFilter !==\n                    this.props.assignedToMeFilter ||\n                prevProps.markedForFollowUpFilter !==\n                    this.props.markedForFollowUpFilter ||\n                prevProps.unreadFilter !== this.props.unreadFilter ||\n                prevProps.selectedMessageType === undefined ||\n                prevProps.selectedMessageType.id !==\n                    this.props.selectedMessageType.id)\n        ) {\n            this.props.loadMessageConversations(\n                this.props.selectedMessageType,\n                this.props.selectedMessageType.id\n            )\n        }\n    }\n\n    render() {\n        const id = this.props.id\n        const displayExtendedChoices = this.props.displayExtendedChoices\n        const checkedOptions = this.props.checkedOptions\n\n        const displaySearch =\n            !this.props.wideview ||\n            (this.props.selectedMessageConversation === undefined &&\n                id !== 'create')\n\n        return (\n            <Paper style={styles.canvas(checkedOptions)}>\n                <div>\n                    {!checkedOptions && (\n                        <FlatButton\n                            style={styles.checkedOption}\n                            icon={<CreateMessageIcon />}\n                            onClick={() => history.push('/PRIVATE/create')}\n                            label={i18n.t('Compose')}\n                        />\n                    )}\n\n                    {checkedOptions && (\n                        <FlatButton\n                            style={styles.checkedOption}\n                            icon={<NavigationBack />}\n                            onClick={() => this.props.clearCheckedIds()}\n                            label={i18n.t('Deselect all')}\n                        />\n                    )}\n                </div>\n\n                <ToolbarExtendedChoicePicker\n                    displayExtendedChoices={displayExtendedChoices}\n                />\n\n                <div style={styles.rightHandCanvas}>\n                    <div style={styles.ie11Spacer} />\n                    {displayExtendedChoices &&\n                        displaySearch &&\n                        !checkedOptions && (\n                            <SelectField\n                                style={styles.filterControl}\n                                labelStyle={{\n                                    color:\n                                        this.props.statusFilter === undefined\n                                            ? 'lightGray'\n                                            : 'black',\n                                    top:\n                                        this.props.statusFilter === undefined\n                                            ? '-15px'\n                                            : '-2px',\n                                }}\n                                selectedMenuItemStyle={{\n                                    color: theme.palette.primary1Color,\n                                }}\n                                floatingLabelText={\n                                    this.props.statusFilter === undefined\n                                        ? i18n.t('Status')\n                                        : ''\n                                }\n                                floatingLabelStyle={{\n                                    top: '15px',\n                                }}\n                                iconStyle={{\n                                    top:\n                                        this.props.statusFilter === undefined\n                                            ? '-15px'\n                                            : '0px',\n                                }}\n                                value={this.props.statusFilter}\n                                onChange={(event, key, payload) => {\n                                    this.props.setFilter(\n                                        payload === null ? undefined : payload,\n                                        'STATUS'\n                                    )\n                                }}\n                            >\n                                <MenuItem\n                                    key={null}\n                                    value={null}\n                                    primaryText={''}\n                                />\n                                {extendedChoices.STATUS.map(elem => (\n                                    <MenuItem\n                                        key={elem.key}\n                                        value={elem.value}\n                                        primaryText={elem.primaryText}\n                                    />\n                                ))}\n                            </SelectField>\n                        )}\n\n                    {displayExtendedChoices &&\n                        displaySearch &&\n                        !checkedOptions && (\n                            <SelectField\n                                style={styles.filterControl}\n                                labelStyle={{\n                                    color:\n                                        this.props.priorityFilter === undefined\n                                            ? 'lightGray'\n                                            : 'black',\n                                    top:\n                                        this.props.priorityFilter === undefined\n                                            ? '-15px'\n                                            : '-2px',\n                                }}\n                                selectedMenuItemStyle={{\n                                    color: theme.palette.primary1Color,\n                                }}\n                                floatingLabelText={\n                                    this.props.priorityFilter === undefined\n                                        ? i18n.t('Priority')\n                                        : ''\n                                }\n                                floatingLabelStyle={{\n                                    top: '15px',\n                                }}\n                                iconStyle={{\n                                    top:\n                                        this.props.priorityFilter === undefined\n                                            ? '-15px'\n                                            : '0px',\n                                }}\n                                value={this.props.priorityFilter}\n                                onChange={(event, key, payload) => {\n                                    this.props.setFilter(\n                                        payload === null ? undefined : payload,\n                                        'PRIORITY'\n                                    )\n                                }}\n                            >\n                                <MenuItem\n                                    key={null}\n                                    value={null}\n                                    primaryText={''}\n                                />\n                                {extendedChoices.PRIORITY.map(elem => (\n                                    <MenuItem\n                                        key={elem.key}\n                                        value={elem.value}\n                                        primaryText={elem.primaryText}\n                                    />\n                                ))}\n                            </SelectField>\n                        )}\n\n                    {!checkedOptions && displaySearch && (\n                        <TextField\n                            style={styles.filterControl}\n                            fullWidth\n                            hintText={i18n.t('Search')}\n                            value={this.props.messageFilter || ''}\n                            onChange={(event, messageFilter) => {\n                                this.debouncedSearch(messageFilter)\n                                this.props.setFilter(messageFilter, 'MESSAGE')\n                            }}\n                            type=\"search\"\n                        />\n                    )}\n\n                    {!checkedOptions && displaySearch && (\n                        <IconMenu\n                            iconButtonElement={\n                                <IconButton>\n                                    <MoreVertIcon />\n                                </IconButton>\n                            }\n                            anchorOrigin={{\n                                horizontal: 'right',\n                                vertical: 'top',\n                            }}\n                            targetOrigin={{\n                                horizontal: 'right',\n                                vertical: 'top',\n                            }}\n                            style={styles.iconMenu}\n                            menuStyle={{ overflowX: 'hidden' }}\n                        >\n                            <Subheader style={{ padding: '0px 16px' }}>\n                                {i18n.t('Set filter')}\n                            </Subheader>\n                            {this.props.displayExtendedChoices && (\n                                <Checkbox\n                                    style={{ padding: '0px 16px' }}\n                                    key={'assignedToMeFilter'}\n                                    label={i18n.t('Assigned to me')}\n                                    checked={this.props.assignedToMeFilter}\n                                    onClick={() => {\n                                        this.props.setFilter(\n                                            !this.props.assignedToMeFilter,\n                                            'ASSIGNED_TO_ME'\n                                        )\n                                    }}\n                                />\n                            )}\n                            <Checkbox\n                                style={{ padding: '0px 16px' }}\n                                key={'markedForFollowUpFilter'}\n                                label={i18n.t('Marked for followup')}\n                                checked={this.props.markedForFollowUpFilter}\n                                onClick={() => {\n                                    this.props.setFilter(\n                                        !this.props.markedForFollowUpFilter,\n                                        'MARKED_FOR_FOLLOWUP'\n                                    )\n                                }}\n                            />\n                            <Checkbox\n                                style={{ padding: '0px 16px' }}\n                                key={'unreadFilter'}\n                                label={i18n.t('Unread messages')}\n                                checked={this.props.unreadFilter}\n                                onClick={() => {\n                                    this.props.setFilter(\n                                        !this.props.unreadFilter,\n                                        'UNREAD'\n                                    )\n                                }}\n                            />\n                        </IconMenu>\n                    )}\n                    <FlatButton\n                        style={{\n                            width: '50px',\n                            alignSelf: 'center',\n                        }}\n                        icon={\n                            !this.props.wideview ? <ViewList /> : <ViewFancy />\n                        }\n                        onClick={() => this.props.toogleWideview()}\n                    />\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default Toolbar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport MailIcon from 'material-ui-icons/MailOutline'\nimport i18n from '@dhis2/d2-i18n'\nimport * as api from '../../api/api'\nimport {\n    loadMessageConversations,\n    setIsInFeedbackRecipientGroup,\n    clearCheckedIds,\n    setSelectedMessageConversation,\n    setSelectedMessageType,\n    clearSelectedMessageConversation,\n    updateInputFields,\n    setFilter,\n    setDisplayTimeDiff,\n    clearAttachments,\n    setDhis2CoreVersion,\n} from '../../actions'\nimport theme from '../../styles/theme'\nimport MessageConversation from '../MessageConversation/MessageConversation'\nimport SidebarList from '../List/SidebarList'\nimport MessageConversationList from '../List/MessageConversationList'\nimport CreateMessage from '../MessageConversation/CreateMessage'\nimport Toolbar from '../Common/Toolbar'\nimport { subheader } from '../../styles/style'\nimport './MessagingCenter.css'\n\nconst EXTENDED_CHOICES = ['TICKET', 'VALIDATION_RESULT']\nconst refreshTimerTotal = 300000 // 5 minutes\nconst refreshTimerInterval = 10000 // 10 seconds\n\nclass MessagingCenter extends Component {\n    constructor(props) {\n        super(props)\n\n        this.intervalId = null\n        this.state = {\n            autoRefresh: false,\n            checkedItems: false,\n            refreshTimer: refreshTimerTotal,\n            wideview: true,\n        }\n    }\n\n    componentDidMount() {\n        const selectedMessageType = this.props.match.params.messageType\n        const selectedId = this.props.match.params.messageId\n\n        this.props.setDhis2CoreVersion(this.context.d2.system.version.minor)\n\n        if (\n            selectedId &&\n            selectedId !== selectedMessageType &&\n            selectedId !== 'create'\n        ) {\n            const initialMessageConversation = { id: selectedId }\n            this.props.setSelectedMessageConversation(\n                initialMessageConversation\n            )\n        }\n\n        api.isInFeedbackRecipientGroup().then(result =>\n            this.props.setIsInFeedbackRecipientGroup(result)\n        )\n\n        this.props.messageTypes.map(messageType =>\n            this.props.loadMessageConversations(\n                messageType,\n                selectedMessageType\n            )\n        )\n\n        this.props.setDisplayTimeDiff()\n    }\n\n    componentDidUpdate() {\n        const selectedMessageType = this.props.match.params.messageType\n        const selectedId = this.props.match.params.messageId\n\n        if (\n            !this.props.settingSelectedMessageConversation &&\n            selectedId &&\n            selectedMessageType !== selectedId &&\n            selectedId !== 'create' &&\n            (this.props.selectedMessageConversation === undefined ||\n                selectedId !== this.props.selectedMessageConversation.id)\n        ) {\n            const initialMessageConversation = { id: selectedId }\n            this.props.setSelectedMessageConversation(\n                initialMessageConversation\n            )\n        }\n\n        if (\n            selectedMessageType === selectedId &&\n            selectedMessageType !== this.props.selectedMessageType.id\n        ) {\n            this.props.setSelectedMessageType(selectedMessageType)\n        }\n\n        if (\n            (selectedMessageType === selectedId || selectedId === 'create') &&\n            this.props.selectedMessageConversation !== undefined\n        ) {\n            this.props.clearSelectedMessageConversation()\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId)\n        }\n    }\n\n    setAutoRefresh = autoRefresh => {\n        // Cancel existing interval if it shouldn't autorefresh\n        if (!autoRefresh && this.intervalId) {\n            clearInterval(this.intervalId)\n            this.intervalId = null\n        }\n\n        if (autoRefresh) {\n            this.intervalId = setInterval(this.tick, refreshTimerInterval)\n        }\n\n        this.setState({\n            autoRefresh,\n            refreshTimer: refreshTimerTotal,\n        })\n    }\n\n    tick = () => {\n        const timerHasElapsed =\n            this.state.refreshTimer - refreshTimerInterval <= 0\n\n        if (timerHasElapsed) {\n            this.refresh()\n            this.setState({\n                refreshTimer: refreshTimerTotal,\n            })\n        } else {\n            this.setState(prevState => ({\n                refreshTimer: prevState.refreshTimer - refreshTimerInterval,\n            }))\n        }\n    }\n\n    refresh = () => {\n        this.props.messageTypes.map(messageType =>\n            this.props.loadMessageConversations(\n                messageType,\n                this.props.selectedMessageType\n            )\n        )\n\n        if (this.props.selectedMessageConversation) {\n            this.props.setSelectedMessageConversation(\n                this.props.selectedMessageConversation\n            )\n        }\n    }\n\n    toogleWideview = () => {\n        this.setState({ wideview: !this.state.wideview })\n    }\n\n    render() {\n        const id = this.props.match.params.messageId\n\n        const displayExtendedChoices =\n            (this.props.selectedMessageType\n                ? !!(\n                      EXTENDED_CHOICES.indexOf(\n                          this.props.selectedMessageType.id\n                      ) + 1\n                  )\n                : false) && this.props.isInFeedbackRecipientGroup\n\n        return (\n            <div className=\"messaging-center\">\n                <Toolbar\n                    {...this.props}\n                    id={id}\n                    wideview={this.state.wideview}\n                    displayExtendedChoices={displayExtendedChoices}\n                    toogleWideview={this.toogleWideview}\n                />\n                <div className=\"messaging-center__main-content\">\n                    <SidebarList\n                        {...this.props}\n                        drawerOpen={this.state.drawerOpen}\n                        messageTypes={this.props.messageTypes}\n                        autoRefresh={this.state.autoRefresh}\n                        refreshTimer={this.state.refreshTimer}\n                        setAutoRefresh={this.setAutoRefresh}\n                    />\n\n                    {this.props.selectedMessageConversation === undefined &&\n                        !(this.state.wideview && id === 'create') && (\n                            <MessageConversationList\n                                wideview={this.state.wideview}\n                                displayExtendedChoices={\n                                    displayExtendedChoices &&\n                                    this.state.wideview\n                                }\n                            />\n                        )}\n\n                    {id === 'create' && (\n                        <CreateMessage\n                            {...this.props}\n                            wideview={this.state.wideview}\n                        />\n                    )}\n\n                    {this.props.selectedMessageConversation !== undefined &&\n                        !this.state.wideview && (\n                            <MessageConversationList\n                                wideview={this.state.wideview}\n                                displayExtendedChoices={\n                                    displayExtendedChoices &&\n                                    this.state.wideview\n                                }\n                            />\n                        )}\n\n                    {this.props.selectedMessageConversation && id !== 'create'\n                        ? this.props.selectedMessageConversation !==\n                              undefined && (\n                              <MessageConversation\n                                  {...this.props}\n                                  messageConversation={\n                                      this.props.selectedMessageConversation\n                                  }\n                                  wideview={this.state.wideview}\n                                  disableLink\n                                  displayExtendedChoices={\n                                      displayExtendedChoices\n                                  }\n                              />\n                          )\n                        : !this.state.wideview &&\n                          id !== 'create' && (\n                              <div className=\"messaging-center__no-message-selected\">\n                                  <Subheader style={subheader}>\n                                      {i18n.t('Select a message')}\n                                  </Subheader>\n                                  <MailIcon\n                                      style={{\n                                          color: theme.palette.primary1Color,\n                                          width: 120,\n                                          height: 120,\n                                      }}\n                                  />\n                              </div>\n                          )}\n                </div>\n            </div>\n        )\n    }\n}\n\nMessagingCenter.contextTypes = {\n    d2: PropTypes.object,\n}\n\nconst mapStateToProps = state => ({\n    snackMessage: state.messaging.snackMessage,\n    messageTypes: state.messaging.messageTypes,\n    messageConversations: state.messaging.messageConversations,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    assignedToMeFilter: state.messaging.assignedToMeFilter,\n    markedForFollowUpFilter: state.messaging.markedForFollowUpFilter,\n    unreadFilter: state.messaging.unreadFilter,\n    selectedMessageType: state.messaging.selectedMessageType,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    settingSelectedMessageConversation:\n        state.messaging.settingSelectedMessageConversation,\n    checkedIds: state.messaging.checkedIds,\n    checkedOptions: state.messaging.checkedIds.length > 0,\n    loaded: state.messaging.loaded,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n    attachments: state.messaging.attachments,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            loadMessageConversations,\n            setIsInFeedbackRecipientGroup,\n            clearCheckedIds,\n            setSelectedMessageConversation,\n            setSelectedMessageType,\n            clearSelectedMessageConversation,\n            updateInputFields,\n            setFilter,\n            setDisplayTimeDiff,\n            clearAttachments,\n            setDhis2CoreVersion,\n        },\n        null,\n        { pure: false }\n    )\n)(MessagingCenter)\n","import { Router, Route } from 'react-router-dom'\nimport { Redirect } from 'react-router'\nimport React from 'react'\nimport MessagingCenter from '../MessagingCenter/MessagingCenter'\nimport history from '../../utils/history'\n\nconst Routes = () => (\n    <Router history={history}>\n        <div>\n            <Route\n                exact\n                path=\"/\"\n                component={() => <Redirect to=\"/PRIVATE\" />}\n            />\n            <Route\n                path=\"/:messageType/:messageId?/:recipientId?\"\n                component={MessagingCenter}\n            />\n        </div>\n    </Router>\n)\n\nexport default Routes\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport theme from '../../styles/theme'\n\nclass AddD2Context extends React.Component {\n    getChildContext = () => ({\n        d2: this.props.d2,\n    })\n\n    render = () => (\n        <MuiThemeProvider muiTheme={theme}>\n            {this.props.children}\n        </MuiThemeProvider>\n    )\n}\n\nAddD2Context.propTypes = {\n    children: PropTypes.object.isRequired,\n    d2: PropTypes.object.isRequired,\n}\n\nAddD2Context.childContextTypes = {\n    d2: PropTypes.object,\n}\n\nexport default AddD2Context\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport i18n from '@dhis2/d2-i18n'\nimport { HeaderBar } from '@dhis2/ui-widgets'\nimport CustomSnackBar from '../Common/CustomSnackBar'\nimport store from '../../store'\nimport Routes from './Routes'\nimport AddD2Context from './AddD2Context'\n\nconst App = ({ d2 }) => (\n    <Provider store={store}>\n        <AddD2Context d2={d2}>\n            <div>\n                <HeaderBar appName={i18n.t('Messaging')} />\n                <CustomSnackBar />\n                <Routes />\n            </div>\n        </AddD2Context>\n    </Provider>\n)\n\nexport default App\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'messaging-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import { config } from 'd2/lib/d2'\nimport i18n from '../locales'\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale\n\n    if (uiLocale && uiLocale !== 'en') {\n        config.i18n.sources.add(`./i18n/i18n_module_${uiLocale}.properties`)\n    }\n\n    config.i18n.sources.add('./i18n/i18n_module_en.properties')\n    i18n.changeLanguage(uiLocale)\n}\n\nexport default configI18n\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport App from './components/App/App'\nimport { init, getUserSettings } from 'd2/lib/d2'\nimport { CssReset } from '@dhis2/ui-core'\nimport { DataProvider } from '@dhis2/app-runtime'\n\nimport configI18n from './utils/configI18n'\nimport { supportsUnversionedApiCalls } from './utils/helpers'\n\nimport './index.css'\nimport 'typeface-roboto'\n\nconst { REACT_APP_DHIS2_BASE_URL } = process.env\n\nconst initApp = async () => {\n    const dhisConfig = {\n        baseUrl: `${REACT_APP_DHIS2_BASE_URL}/api/`,\n        headers: null,\n        schemas: ['messageConversation'],\n    }\n    const d2 = await init(dhisConfig)\n    const userSettings = await getUserSettings()\n\n    const systemVersion = d2.system.version.minor\n    const providerApiVersion = supportsUnversionedApiCalls(systemVersion)\n        ? ''\n        : systemVersion\n\n    configI18n(userSettings)\n\n    render(\n        <DataProvider\n            baseUrl={REACT_APP_DHIS2_BASE_URL}\n            apiVersion={providerApiVersion}\n        >\n            <CssReset />\n            <App d2={d2} />\n        </DataProvider>,\n        document.getElementById('root')\n    )\n}\n\ninitApp()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}