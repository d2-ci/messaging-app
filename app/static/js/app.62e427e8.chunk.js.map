{"version":3,"sources":["D2App/constants/development.js","D2App/utils/helpers.js","D2App/api/api.js","D2App/actions/index.js","D2App/constants/actions.js","D2App/styles/theme.js","D2App/components/Common/CustomSnackBar.jsx","D2App/utils/history.js","D2App/components/Attachments/Attachments.jsx","D2App/components/MessageConversation/Message.jsx","D2App/components/Attachments/AttachmentUploadButton.jsx","D2App/components/MessageConversation/ReplyCard.jsx","D2App/components/Common/SuggestionField.jsx","D2App/components/Common/ExtendedChoiceLabel.jsx","D2App/styles/messageConversationStyles.js","D2App/components/MessageConversation/MessageConversation.jsx","D2App/components/List/MessageTypeItem.jsx","D2App/components/List/SidebarList.jsx","D2App/styles/style.js","D2App/components/List/ListItemHeader.jsx","D2App/components/List/MessageConversationListItem.jsx","D2App/components/List/MessageConversationList.jsx","D2App/components/MessageConversation/CreateMessage.jsx","D2App/constants/extendedChoices.js","D2App/components/Common/AssignToDialog.jsx","D2App/components/Common/ToolbarExtendedChoicePicker.jsx","D2App/components/Common/Toolbar.jsx","D2App/components/MessagingCenter/MessagingCenter.jsx","D2App/components/App/Routes.jsx","D2App/components/App/App.jsx","D2App/constants/messageTypes.js","D2App/reducers/messageReducer.js","D2App/store.js","D2App/components/App/AddD2Context.jsx","D2App/components/App/AppWrapper.jsx"],"names":["fontFamily","findIndexOfId","list","id","len","length","index","debounce","fn","delay","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","supportsAttachments","dhis2CoreVersion","getMessageConversations","messageType","page","messageFilter","status","priority","assignedToMeFilter","markedForFollowUpFilter","unreadFilter","filters","push","getD2Instance","then","instance","currentUser","Api","getApi","get","undefined","fields","order","filter","result","messageConversations","pager","catch","error","updateMessageConversationAssignee","messageConversationId","value","delete","post","searchRecipients","searchValue","searchOnlyUsers","searchOnlyFeedbackRecipients","feedbackRecipientsId","system","version","minor","url","pageSize","users","searchUserGroups","userGroups","searchOrganisationUnits","organisationUnits","addRecipients","addAttachment","attachment","form","FormData","append","createAttachment","downloadAttachment","messageId","attachmentId","baseUrl","filename","link","document","createElement","href","setAttribute","body","appendChild","click","downloadBlob","createAction","type","payload","setSelectedMessageConversation","messageConversation","async","dispatch","api","loadMessageConversations","selectedMessageType","loadMore","getState","promises","state","statusFilter","priorityFilter","messaging","i","promise","Promise","all","nrOfUnread","total","reduce","accumulated","r","concat","markMessageConversations","mode","markedConversations","markedReadConversations","markedUnreadConversations","response","fileResource","name","contentLength","clearCheckedIds","clearSelectedMessageConversation","displaySnackMessage","message","onSnackActionClick","onSnackRequestClose","snackType","setFilter","filterType","updateInputFields","subject","input","recipients","clearAttachments","setSelectedMessageType","messageTypeId","removeAttachment","cancelAttachment","attachmentName","getMuiTheme","palette","negative","pinkA200","blue50","primary1Color","primary2Color","blue100","primary3Color","blue300","primary4Color","blue500","accent1Color","grey50","accent2Color","grey100","accent3Color","grey300","accent4Color","grey500","followUp","orange500","darkGray","grey700","superDarkGray","grey900","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","clockCircleColor","fade","shadowColor","fullBlack","contentColorStyle","NEGATIVE","theme","NEUTRAL","POSITIVE","CustomSnackBar","Component","constructor","props","super","closeMessage","clearSnackMessage","setState","show","componentDidUpdate","_prevProps","prevState","render","open","autoHideDuration","onRequestClose","action","onActionClick","contentStyle","color","style","pointerEvents","whiteSpace","bodyStyle","maxWidth","compose","connect","snackMessage","pure","createHashHistory","Attachment","dataDirection","className","backgroundColor","label","parseFloat","parseInt","toFixed","labelPosition","onClick","loading","icon","Attachments","attachments","map","key","styles","canvas","padding","innerCanvas","margin","paddingBottom","cardText","wordBreak","fromFormat","datePlacement","display","justifyContent","marginRight","dateFormat","overflow","textOverflow","Message","displayTimeDiff","lastMessage","enableAttachments","fromTitle","sender","displayName","today","moment","messageDate","created","add","internal","i18n","t","placement","diff","from","format","year","paddingLeft","text","createHandleChange","event","files","target","AttachmentUploadButton","containerElement","onChange","ReplyCard","replyMessage","internalReply","selectedMessageConversation","wipeInput","inputError","texFieldUpdate","newValue","handleDiscard","discardState","expanded","componentWillUnmount","Card","marginTop","rows","underlineShow","multiLine","fullWidth","floatingLabelText","primary","disabled","isInFeedbackRecipientGroup","messageTypes","headers","SuggestionField","searchResult","lastSearch","errorText","debouncedSearch","search","bind","onSuggestionClick","chip","find","recipient","updateRecipients","onRemoveChip","updateInput","addType","internalSearchResult","searchWarning","height","inputHeight","marginBottom","openOnFocus","searchText","dataSource","dataSourceConfig","onUpdateInput","onRequestAdd","onRequestDelete","subheaderTitle","paddingRight","subheader","fontWeight","ExtendedChoiceLabel","showTitle","title","displayLabel","charAt","toLowerCase","substr","flex","overflowY","overflowX","paddingTop","flexDirection","header","iconButton","alignSelf","subjectSubheader","fontSize","participantsCanvas","participants","flexWrap","participantAddRow","participantsSuggestionField","participantsAdd","messagesCanvas","messagesInnerCanvas","NOTIFICATIONS","MessageConversation","backToList","history","cursor","componentDidMount","messages","notification","indexOf","userMessages","slice","userMessage","recipientsExpanded","user","userMessagesLength","tooltipPosition","tooltip","displayExtendedChoices","assignee","participant","limitSearchArray","MessageTypeItem","onMouseEnter","setHoverText","onMouseLeave","setNeutralText","setTextColor","getBackgroundColor","selectedValue","role","alignItems","marginLeft","size","unread","badgeContent","secondary","badgeStyle","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","minWidth","SidebarList","match","params","List","width","refreshTimer","toggled","autoRefresh","onToggle","setAutoRefresh","messagePanelContainer","transition","boxSizing","position","boxShadow","borderBottom","checkBox","extendedLabel","MessageConversationListItem","allChecked","checkedIds","children","checked","onCheck","isInputChecked","setAllChecked","child","messageConversationIds","container","wideview","flag","fontColor","flexBasis","textAlign","read","lastSender","x","containerBackgroundColor","innerText","settingSelectedMessageConversation","setChecked","MessageConversationList","onScroll","messageList","getElementById","isBottom","loaded","debouncedOnScroll","el","scrollHeight","scrollTop","window","outerHeight","Array","isArray","lookup","Set","item","has","dedupeById","ListItemHeader","messageTypeField","CreateMessage","subjectUpdate","inputUpdate","sendMessage","isMessageFeedback","sendFeedbackMessage","addRecipientByUserId","recipientId","discardDisabled","console","extendedChoices","STATUS","primaryText","PRIORITY","AssignToDialog","updateMessageConversations","nrSelected","ToolbarExtendedChoicePicker","getIds","updateMessageConversation","identifier","ids","toggleDialog","dialogOpen","checkedItems","assignToOpen","multiSelect","actionButtons","keyboardFocused","deleteMessageConversations","displayNumberOfCheckedIds","actions","modal","iconButtonElement","anchorOrigin","horizontal","vertical","targetOrigin","rightIcon","menuItems","elem","log","checkedOptions","zIndex","checkedOption","filterControl","rightHandCanvas","ie11Spacer","flexGrow","iconMenu","Toolbar","lastMessageFilter","prevProps","displaySearch","labelStyle","top","selectedMenuItemStyle","floatingLabelStyle","iconStyle","hintText","menuStyle","toogleWideview","EXTENDED_CHOICES","MessagingCenter","intervalId","clearInterval","setInterval","tick","refresh","selectedId","setDhis2CoreVersion","d2","initialMessageConversation","configuration","userAuthorities","symbol","authorities","Object","getOwnPropertySymbols","configurationResult","authorized","includes","group","feedbackRecipients","setIsInFeedbackRecipientGroup","setDisplayTimeDiff","drawerOpen","disableLink","contextTypes","PropTypes","object","serverDate","Routes","exact","path","component","to","App","initialState","messageReducer","stateMessageTypes","oldAttachments","replaceMessageType","splice","element","selectedMessageConversations","loadingMessageType","middlewares","ReduxThunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","combineReducers","createStore","applyMiddleware","AddD2Context","React","getChildContext","muiTheme","childContextTypes","AppWrapper","useConfig","useD2","d2Config","schemas","store"],"mappings":"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","file":"static/js/app.62e427e8.chunk.js","sourcesContent":["export const pageSize = 35;\nexport const fontFamily = 'Roboto, Helvetica, Arial, sans-serif';\nexport const NEUTRAL = 'NEUTRAL';\nexport const POSITIVE = 'POSITIVE';\nexport const NEGATIVE = 'NEGATIVE';","export function dedupeById(list) {\n  if (!Array.isArray(list)) {\n    return undefined;\n  }\n\n  const lookup = new Set();\n  return list.filter(item => {\n    if (lookup.has(item.id)) {\n      return false;\n    }\n\n    lookup.add(item.id);\n    return true;\n  });\n}\nexport function findIndexOfId(list, id) {\n  const len = list.length;\n\n  for (let index = 0; index < len; index++) {\n    if (list[index].id === id) {\n      return index;\n    }\n  }\n\n  return undefined;\n}\nexport function debounce(fn, delay) {\n  let timer = null;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\nexport function supportsAttachments(dhis2CoreVersion) {\n  return dhis2CoreVersion > 30;\n}\nexport function supportsUserLookupEndPoint(dhis2CoreVersion) {\n  return dhis2CoreVersion > 34;\n}","import { getInstance as getD2Instance } from 'd2';\nimport { pageSize } from '../constants/development';\nimport { supportsUserLookupEndPoint } from '../utils/helpers.js';\nconst initialMessageConversationFields = 'id, displayName, subject, messageType, lastSender[id, displayName], assignee[id, displayName], status, priority, lastUpdated, read, lastMessage, followUp';\nconst messageConversationFields = '*,assignee[id, displayName],messages[*,sender[id,displayName],attachments[id, name, contentLength]],userMessages[user[id, displayName]]';\nconst order = 'lastMessage:desc';\nexport const getMessageConversations = ({\n  messageType,\n  page,\n  messageFilter,\n  status,\n  priority,\n  assignedToMeFilter,\n  markedForFollowUpFilter,\n  unreadFilter\n}) => {\n  const filters = [`messageType:eq:${messageType}`];\n  typeof status !== 'undefined' && filters.push(`status:eq:${status}`);\n  typeof priority !== 'undefined' && filters.push(`priority:eq:${priority}`);\n  markedForFollowUpFilter && filters.push('followUp:eq:true');\n  unreadFilter && filters.push('read:eq:false');\n  return getD2Instance().then(instance => {\n    assignedToMeFilter && filters.push(`assignee.id:eq:${instance.currentUser.id}`);\n    return instance.Api.getApi().get(`messageConversations?pageSize=${pageSize}&page=${page}${messageFilter !== '' && messageFilter !== undefined ? `&queryString=${messageFilter}` : ''}`, {\n      fields: [initialMessageConversationFields],\n      order,\n      filter: filters\n    });\n  }).then(result => ({\n    messageConversations: result.messageConversations,\n    pager: result.pager\n  })).catch(error => {\n    throw error;\n  });\n};\nexport const getMessageConversation = messageConversation => getD2Instance().then(instance => instance.Api.getApi().get(`messageConversations/${messageConversation.id}`, {\n  fields: [messageConversationFields]\n})).then(result => result).catch(error => {\n  throw error;\n});\nexport const getServerDate = () => getD2Instance().then(instance => instance.Api.getApi().get('system/info')).then(result => result.serverDate).catch(error => {\n  throw error;\n});\nexport const updateMessageConversationStatus = (messageConversationId, value) => getD2Instance().then(instance => instance.Api.getApi().post(`messageConversations/${messageConversationId}/status?messageConversationStatus=${value}`)).then(result => result).catch(error => {\n  throw error;\n});\nexport const updateMessageConversationPriority = (messageConversationId, value) => getD2Instance().then(instance => instance.Api.getApi().post(`messageConversations/${messageConversationId}/priority?messageConversationPriority=${value}`)).then(result => result).catch(error => {\n  throw error;\n});\nexport const updateMessageConversationAssignee = (messageConversationId, value) => getD2Instance().then(instance => value === undefined ? instance.Api.getApi().delete(`messageConversations/${messageConversationId}/assign`) : instance.Api.getApi().post(`messageConversations/${messageConversationId}/assign?userId=${value}`)).then(result => result).catch(error => {\n  throw error;\n});\nexport const updateMessageConversationFollowup = (messageConversationIds, value) => getD2Instance().then(instance => instance.Api.getApi().post(`messageConversations/${value ? 'followup' : 'unfollowup'}`, messageConversationIds)).then(result => result).catch(error => {\n  throw error;\n});\nexport const getNrOfUnread = messageType => getD2Instance().then(instance => instance.Api.getApi().get('messageConversations', {\n  fields: 'read',\n  filter: ['read:eq:false', `messageType:eq:${messageType}`]\n})).then(result => result.pager.total).catch(error => {\n  throw error;\n});\nexport const sendMessage = ({\n  subject,\n  users,\n  userGroups,\n  organisationUnits,\n  text,\n  attachments\n}) => getD2Instance().then(instance => instance.Api.getApi().post('messageConversations', {\n  subject,\n  users,\n  userGroups,\n  organisationUnits,\n  attachments,\n  text\n})).catch(error => {\n  throw error;\n});\nexport const sendFeedbackMessage = (subject, text) => getD2Instance().then(instance => instance.Api.getApi().post(`messageConversations/feedback?subject=${subject}`, text, {\n  headers: {\n    'Content-Type': 'text/plain'\n  }\n})).then(result => result).catch(error => {\n  throw error;\n});\nexport const replyMessage = ({\n  message,\n  internalReply,\n  attachments,\n  id\n}) => getD2Instance().then(instance => instance.Api.getApi().post(`messageConversations/${id}?internal=${internalReply}${attachments.length > 0 ? `&attachments=${attachments}` : ''}`, message, {\n  headers: {\n    'Content-Type': 'text/plain'\n  }\n})).catch(error => {\n  throw error;\n});\nexport const deleteMessageConversation = messageConversationId => getD2Instance().then(instance => instance.Api.getApi().delete(`messageConversations/${messageConversationId}/${instance.currentUser.id}`)).then(result => result).catch(error => {\n  throw error;\n});\nexport const markRead = markedReadConversations => getD2Instance().then(instance => instance.Api.getApi().post('messageConversations/read', markedReadConversations)).then(result => result).catch(error => {\n  throw error;\n});\nexport const markUnread = markedUnreadConversations => getD2Instance().then(instance => instance.Api.getApi().post('messageConversations/unread', markedUnreadConversations)).then(result => result).catch(error => {\n  throw error;\n});\n/* Feedback recipient query */\n\nexport const isInFeedbackRecipientGroup = () => getD2Instance().then(instance => instance.Api.getApi().get('me', {\n  fields: 'userGroups[id]'\n})).then(result => getD2Instance().then(instance => ({\n  configuration: instance.Api.getApi().get('configuration').then(configuration => configuration),\n  instance\n})).then(({\n  configuration,\n  instance\n}) => {\n  const getSymbolProperties = symbol => Array.from(symbol[Object.getOwnPropertySymbols(symbol)[0]]);\n\n  const userAuthorities = getSymbolProperties(instance.currentUser.authorities);\n  return configuration.then(configurationResult => ({\n    authorized: userAuthorities.includes('ALL') || !!result.userGroups.find(group => group.id === configurationResult.feedbackRecipients.id),\n    feedbackRecipientsId: configurationResult.feedbackRecipients.id\n  }));\n}).catch(error => {\n  throw error;\n})).catch(error => {\n  throw error;\n});\n/* Recipient search */\n\nconst MAX_RECIPIENT = 10;\n\nconst searchOrganisationUnits = searchValue => getD2Instance().then(instance => instance.Api.getApi().get('organisationUnits', {\n  fields: 'id, displayName',\n  pageSize: MAX_RECIPIENT,\n  filter: [`displayName:token:${searchValue}`, 'users:gte:1']\n})).then(result => result).catch(error => {\n  throw error;\n});\n\nconst searchUserGroups = searchValue => getD2Instance().then(instance => instance.Api.getApi().get('userGroups', {\n  fields: 'id, displayName',\n  pageSize: MAX_RECIPIENT,\n  filter: [`displayName:token:${searchValue}`]\n})).then(result => result).catch(error => {\n  throw error;\n});\n\nexport const searchRecipients = ({\n  searchValue,\n  searchOnlyUsers,\n  searchOnlyFeedbackRecipients,\n  feedbackRecipientsId\n}) => {\n  return getD2Instance().then(instance => {\n    if (supportsUserLookupEndPoint(instance.system.version.minor)) {\n      // version >= v2.35\n      const url = searchOnlyFeedbackRecipients ? 'userLookup/feedbackRecipients' : 'userLookup';\n      return instance.Api.getApi().get(`${url}?query=${searchValue}`);\n    } else {\n      // version < 2.35\n      const filters = [`displayName:token:${searchValue}`];\n\n      if (searchOnlyFeedbackRecipients) {\n        filters.push(`userGroups.id:eq:${feedbackRecipientsId}`);\n      }\n\n      return instance.Api.getApi().get('users', {\n        pageSize: MAX_RECIPIENT,\n        filter: filters\n      });\n    }\n  }).then(({\n    users\n  }) => searchOnlyUsers ? {\n    users,\n    undefined\n  } : searchUserGroups(searchValue).then(({\n    userGroups\n  }) => searchOrganisationUnits(searchValue).then(({\n    organisationUnits\n  }) => ({\n    users,\n    userGroups,\n    organisationUnits\n  })))).catch(error => {\n    throw error;\n  });\n};\nexport const fetchParticipants = messageConversationId => getD2Instance().then(instance => instance.Api.getApi().get(`messageConversations/${messageConversationId}`, {\n  fields: 'userMessages[user[id, displayName]]'\n})).then(result => result).catch(error => {\n  throw error;\n});\nexport const addRecipients = ({\n  users,\n  userGroups,\n  organisationUnits,\n  messageConversationId\n}) => getD2Instance().then(instance => instance.Api.getApi().post(`messageConversations/${messageConversationId}/recipients`, {\n  users,\n  userGroups,\n  organisationUnits\n})).catch(error => {\n  throw error;\n});\nexport const getUserById = id => getD2Instance().then(instance => instance.Api.getApi().get(`users/${id}`, {\n  fields: 'id,displayName'\n})).then(({\n  id,\n  displayName\n}) => ({\n  id,\n  displayName,\n  type: 'user'\n})).catch(error => {\n  throw error;\n});\nexport function createAttachment(attachment) {\n  const form = new FormData();\n  form.append('file', attachment);\n  return form;\n}\nexport const addAttachment = attachment => getD2Instance().then(instance => instance.Api.getApi().post('/fileResources?domain=MESSAGE_ATTACHMENT', createAttachment(attachment))).catch(error => {\n  throw error;\n});\nexport function downloadBlob(url, filename) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('target', '_blank');\n  document.body.appendChild(link);\n  link.click();\n}\nexport const downloadAttachment = (messageConversationId, messageId, attachmentId) => getD2Instance().then(instance => {\n  const baseUrl = instance.Api.getApi().baseUrl;\n  return downloadBlob(`${baseUrl}/messageConversations/${messageConversationId}/${messageId}/attachments/${attachmentId}`);\n}).catch(error => {\n  throw error;\n});","import * as actions from '../constants/actions';\nimport log from 'loglevel';\nimport * as api from '../api/api';\nimport moment from 'moment'; // Simple hack to solve negative time difference\n\nconst FUTURE_HACK = 5000;\n\nconst createAction = (type, payload) => ({\n  type,\n  payload\n});\n/******************\n * THUNKS SECTION *\n ******************/\n\n\nexport const setDisplayTimeDiff = () => async dispatch => {\n  try {\n    const serverDate = await api.getServerDate();\n    const displayTimeDiff = moment().diff(moment(serverDate)) - FUTURE_HACK;\n    dispatch(createAction(actions.SET_DISPLAY_TIME_DIFF_SUCCESS, displayTimeDiff));\n  } catch (error) {\n    dispatch(createAction(actions.SET_DISPLAY_TIME_DIFF_ERROR, {\n      error\n    }));\n  }\n};\nexport const setSelectedMessageConversation = messageConversation => async dispatch => {\n  dispatch(createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION));\n\n  try {\n    const result = await api.getMessageConversation(messageConversation);\n    dispatch(createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS, {\n      messageConversation: result\n    }));\n  } catch (error) {\n    dispatch(createAction(actions.SET_SELECTED_MESSAGE_CONVERSATION_ERROR, {\n      error\n    }));\n  }\n};\nexport const updateMessageConversations = ({\n  messageConversationIds,\n  identifier,\n  value,\n  messageType,\n  selectedMessageConversation\n}) => async dispatch => {\n  if (identifier === 'FOLLOW_UP') {\n    try {\n      await api.updateMessageConversationFollowup(messageConversationIds, value);\n      dispatch(createAction(actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS, {\n        messageType: messageType,\n        page: 1,\n        identifier: identifier\n      }));\n      dispatch(loadMessageConversations());\n    } catch (error) {\n      dispatch(createAction(actions.MESSAGE_CONVERSATION_UPDATE_ERROR, {\n        error\n      }));\n    }\n  } else {\n    const promises = messageConversationIds.map(messageConversationId => {\n      let promise;\n\n      switch (identifier) {\n        case 'STATUS':\n          promise = api.updateMessageConversationStatus(messageConversationId, value);\n          break;\n\n        case 'PRIORITY':\n          promise = api.updateMessageConversationPriority(messageConversationId, value);\n          break;\n\n        case 'ASSIGNEE':\n          if (value !== undefined && messageType.id === 'VALIDATION_RESULT') {\n            promise = api.addRecipients({\n              users: value.map(value => ({\n                id: value\n              })),\n              userGroups: [],\n              organisationUnits: [],\n              messageConversationId\n            }).then(() => api.updateMessageConversationAssignee(messageConversationId, value));\n          } else {\n            promise = api.updateMessageConversationAssignee(messageConversationId, value);\n          }\n\n          break;\n\n        default:\n          log.error('Unexpected identifier for updateMessageConversations');\n          break;\n      }\n\n      return promise;\n    });\n\n    try {\n      await Promise.all(promises);\n      dispatch(createAction(actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS, {\n        messageType: messageType,\n        page: 1,\n        identifier: identifier\n      }));\n      dispatch(loadMessageConversations());\n    } catch (error) {\n      dispatch(createAction(actions.MESSAGE_CONVERSATION_UPDATE_ERROR, {\n        error\n      }));\n    }\n  }\n\n  if (selectedMessageConversation) {\n    dispatch(setSelectedMessageConversation(selectedMessageConversation));\n  }\n};\nexport const loadMessageConversations = (messageType, selectedMessageType, loadMore = false) => async (dispatch, getState) => {\n  const promises = [];\n  const state = getState();\n  const {\n    messageFilter,\n    statusFilter: status,\n    priorityFilter: priority,\n    assignedToMeFilter,\n    markedForFollowUpFilter,\n    unreadFilter\n  } = state.messaging; // Default fallback values so this action can be called without arguments\n\n  messageType = messageType || state.messaging.selectedMessageType;\n  selectedMessageType = selectedMessageType || state.messaging.selectedMessageType.id;\n  dispatch(createAction(actions.LOAD_MESSAGE_CONVERSATIONS, {\n    messageType,\n    loadMore\n  }));\n\n  try {\n    for (let i = 1; i <= messageType.page; i++) {\n      const promise = api.getMessageConversations({\n        messageType: messageType.id,\n        page: i,\n        messageFilter,\n        status,\n        priority,\n        assignedToMeFilter,\n        markedForFollowUpFilter,\n        unreadFilter\n      }).then(result => ({\n        messageConversations: result.messageConversations,\n        pager: result.pager\n      }));\n      promises.push(promise);\n    }\n\n    const result = await Promise.all(promises);\n    const nrOfUnread = await api.getNrOfUnread(messageType.id);\n    const messageConversations = result.reduce((accumulated, r) => accumulated.concat(r.messageConversations), []);\n    dispatch(createAction(actions.MESSAGE_CONVERSATIONS_LOAD_SUCCESS, {\n      messageConversations,\n      pager: result[result.length - 1].pager,\n      messageType,\n      selectedMessageType,\n      nrOfUnread\n    }));\n  } catch (error) {\n    dispatch(createAction(actions.MESSAGE_CONVERSATIONS_LOAD_ERROR, {\n      error\n    }));\n  }\n};\nexport const deleteMessageConversations = (messageConversationIds, messageType) => async dispatch => {\n  try {\n    const promises = messageConversationIds.map(messageConversationId => api.deleteMessageConversation(messageConversationId));\n    await Promise.all(promises);\n    dispatch(createAction(actions.MESSAGE_CONVERSATIONS_DELETE_SUCCESS, {\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n  } catch (error) {\n    dispatch(createAction(actions.MESSAGE_CONVERSATIONS_DELETE_ERROR, {\n      error\n    }));\n  }\n};\nexport const sendMessage = ({\n  users,\n  userGroups,\n  organisationUnits,\n  messageType\n}) => async (dispatch, getState) => {\n  try {\n    const {\n      messaging: {\n        subject,\n        input,\n        attachments\n      }\n    } = getState();\n    await api.sendMessage({\n      subject,\n      users,\n      userGroups,\n      organisationUnits,\n      text: input,\n      attachments\n    });\n    dispatch(createAction(actions.SEND_MESSAGE_SUCCESS, {\n      messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n  } catch (error) {\n    dispatch(createAction(actions.SEND_MESSAGE_ERROR, {\n      error\n    }));\n  }\n};\nexport const sendFeedbackMessage = messageType => async (dispatch, getState) => {\n  const state = getState();\n\n  try {\n    await api.sendFeedbackMessage(state.messaging.subject, state.messaging.input);\n    dispatch(createAction(actions.SEND_MESSAGE_SUCCESS, {\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n  } catch (error) {\n    dispatch(createAction(actions.SEND_MESSAGE_ERROR, {\n      error\n    }));\n  }\n};\nexport const replyMessage = ({\n  message,\n  internalReply,\n  messageConversation,\n  messageType\n}) => async (dispatch, getState) => {\n  try {\n    const {\n      id\n    } = messageConversation;\n    const state = getState();\n    const attachments = state.messaging.attachments.map(attachment => attachment.id);\n    await api.replyMessage({\n      message,\n      internalReply,\n      attachments,\n      id\n    });\n    dispatch(createAction(actions.REPLY_MESSAGE_SUCCESS, {\n      messageConversation: messageConversation,\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n    dispatch(setSelectedMessageConversation(messageConversation));\n  } catch (error) {\n    dispatch(createAction(actions.REPLY_MESSAGE_ERROR, {\n      error\n    }));\n  }\n};\nexport const markMessageConversations = (mode, markedConversations, messageType) => async dispatch => {\n  try {\n    await (mode === 'read' ? api.markRead(markedConversations) : api.markUnread(markedConversations));\n    dispatch(createAction(actions.MARK_MESSAGE_CONVERSATIONS_SUCCESS, {\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(loadMessageConversations());\n  } catch (error) {\n    dispatch(createAction(actions.MARK_MESSAGE_CONVERSATIONS_ERROR, {\n      error\n    }));\n  }\n};\nexport const addRecipients = ({\n  users,\n  userGroups,\n  organisationUnits,\n  messageConversation,\n  messageType\n}) => async dispatch => {\n  try {\n    const {\n      id: messageConversationId\n    } = messageConversation;\n    await api.addRecipients({\n      users,\n      userGroups,\n      organisationUnits,\n      messageConversationId\n    });\n    dispatch(createAction(actions.ADD_RECIPIENTS_SUCCESS, {\n      messageConversation: messageConversation,\n      messageType: messageType,\n      page: 1\n    }));\n    dispatch(setSelectedMessageConversation(messageConversation));\n  } catch (error) {\n    dispatch(createAction(actions.ADD_RECIPIENTS_ERROR, {\n      error\n    }));\n  }\n};\nexport const addRecipientByUserId = id => async dispatch => {\n  try {\n    const user = await api.getUserById(id);\n    dispatch(createAction(actions.ADD_RECIPIENT_BY_ID_SUCCESS, user));\n  } catch (error) {\n    console.error(error); // No action required, the field will just be empty\n  }\n};\nexport const addAttachment = attachment => async dispatch => {\n  dispatch(createAction(actions.ADD_ATTACHMENT, attachment));\n\n  try {\n    const result = await api.addAttachment(attachment);\n    dispatch(createAction(actions.ADD_ATTACHMENT_SUCCESS, {\n      id: result.response.fileResource.id,\n      name: attachment.name,\n      contentLength: result.response.fileResource.contentLength\n    }));\n  } catch (error) {\n    dispatch(createAction(actions.ADD_ATTACHMENT_ERROR, {\n      error\n    }));\n  }\n};\nexport const downloadAttachment = (messageConversationId, messageId, attachmentId) => async dispatch => {\n  try {\n    await api.downloadAttachment(messageConversationId, messageId, attachmentId);\n    dispatch(createAction(actions.DOWNLOAD_ATTACHMENT_SUCCESS));\n  } catch (error) {\n    dispatch(createAction(actions.DOWNLOAD_ATTACHMENT_ERROR, {\n      error\n    }));\n  }\n};\n/************************\n * PLAIN ACTION SECTION *\n ************************/\n\nexport const clearSnackMessage = () => createAction(actions.CLEAR_SNACK_MESSAGE);\nexport const clearCheckedIds = () => createAction(actions.CLEAR_CHECKED);\nexport const clearSelectedMessageConversation = () => createAction(actions.CLEAR_SELECTED_MESSAGE_CONVERSATION);\nexport const displaySnackMessage = ({\n  message,\n  onSnackActionClick,\n  onSnackRequestClose,\n  snackType\n}) => createAction(actions.DISPLAY_SNACK_MESSAGE, {\n  message,\n  onSnackActionClick,\n  onSnackRequestClose,\n  snackType\n});\nexport const setAllChecked = messageConversationIds => createAction(actions.SET_ALL_CHECKED, {\n  messageConversationIds\n});\nexport const setChecked = (messageConversation, selectedValue) => createAction(actions.SET_CHECKED, {\n  messageConversation,\n  selectedValue\n});\nexport const setFilter = (filter, filterType) => createAction(actions.SET_FILTER, {\n  filter,\n  filterType\n});\nexport const updateInputFields = (subject, input, recipients) => createAction(actions.UPDATE_INPUT_FIELDS, {\n  subject,\n  input,\n  recipients\n});\nexport const clearAttachments = () => createAction(actions.CLEAR_ATTACHMENTS);\nexport const setSelectedMessageType = messageTypeId => createAction(actions.SET_SELECTED_MESSAGE_TYPE, {\n  messageTypeId\n});\nexport const removeAttachment = attachmentId => createAction(actions.REMOVE_ATTACHMENT, {\n  attachmentId\n});\nexport const cancelAttachment = attachmentName => createAction(actions.CANCEL_ATTACHMENT, {\n  attachmentName\n});\nexport const setIsInFeedbackRecipientGroup = isInFeedbackRecipientGroup => createAction(actions.SET_IN_FEEDBACK_RECIPIENT_GROUP, {\n  isInFeedbackRecipientGroup\n});\nexport const setDhis2CoreVersion = version => createAction(actions.SET_DHIS2_CORE_VERSION, version);","export const LOAD_MESSAGE_CONVERSATIONS = 'LOAD_MESSAGE_CONVERSATIONS';\nexport const LOAD_MORE_MESSAGE_CONVERSATIONS = 'LOAD_MORE_MESSAGE_CONVERSATIONS';\nexport const MESSAGE_CONVERSATIONS_LOAD_SUCCESS = 'MESSAGE_CONVERSATIONS_LOAD_SUCCESS';\nexport const MESSAGE_CONVERSATIONS_LOAD_ERROR = 'MESSAGE_CONVERSATIONS_LOAD_ERROR';\nexport const DELETE_MESSAGE_CONVERSATIONS = 'DELETE_MESSAGE_CONVERSATIONS';\nexport const MESSAGE_CONVERSATIONS_DELETE_SUCCESS = 'MESSAGE_CONVERSATIONS_DELETE_SUCCESS';\nexport const MESSAGE_CONVERSATIONS_DELETE_ERROR = 'MESSAGE_CONVERSATIONS_DELETE_ERROR';\nexport const UPDATE_MESSAGE_CONVERSATIONS = 'UPDATE_MESSAGE_CONVERSATIONS';\nexport const MESSAGE_CONVERSATION_UPDATE_SUCCESS = 'MESSAGE_CONVERSATION_UPDATE_SUCCESS';\nexport const MESSAGE_CONVERSATION_UPDATE_ERROR = 'MESSAGE_CONVERSATION_UPDATE_ERROR';\nexport const MARK_MESSAGE_CONVERSATIONS = 'MARK_MESSAGE_CONVERSATIONS';\nexport const MARK_MESSAGE_CONVERSATIONS_SUCCESS = 'MARK_MESSAGE_CONVERSATIONS_SUCCESS';\nexport const MARK_MESSAGE_CONVERSATIONS_ERROR = 'MARK_MESSAGE_CONVERSATIONS_ERROR';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\nexport const SEND_MESSAGE_ERROR = 'SEND_MESSAGE_ERROR';\nexport const SEND_FEEDBACK_MESSAGE = 'SEND_FEEDBACK_MESSAGE';\nexport const REPLY_MESSAGE = 'REPLY_MESSAGE';\nexport const REPLY_MESSAGE_SUCCESS = 'REPLY_MESSAGE_SUCCESS';\nexport const REPLY_MESSAGE_ERROR = 'REPLY_MESSAGE_ERROR';\nexport const SET_FILTER = 'SET_FILTER';\nexport const DISPLAY_SNACK_MESSAGE = 'DISPLAY_SNACK_MESSAGE;';\nexport const CLEAR_SNACK_MESSAGE = 'CLEAR_SNACK_MESSAGE';\nexport const SET_CHECKED = 'SET_CHECKED';\nexport const SET_ALL_CHECKED = 'SET_ALL_CHECKED';\nexport const CLEAR_CHECKED = 'CLEAR_CHECKED';\nexport const SET_SELECTED_MESSAGE_TYPE = 'SET_SELECTED_MESSAGE_TYPE';\nexport const CLEAR_SELECTED_MESSAGE_CONVERSATION = 'CLEAR_SELECTED_MESSAGE_CONVERSATION';\nexport const SET_SELECTED_MESSAGE_CONVERSATION = 'SET_SELECTED_MESSAGE_CONVERSATION';\nexport const SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS = 'SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS';\nexport const SET_SELECTED_MESSAGE_CONVERSATION_ERROR = 'SET_SELECTED_MESSAGE_CONVERSATION_ERROR';\nexport const UPDATE_INPUT_FIELDS = 'UPDATE_INPUT_FIELDS';\nexport const SET_IN_FEEDBACK_RECIPIENT_GROUP = 'SET_IN_FEEDBACK_RECIPIENT_GROUP';\nexport const SET_DISPLAY_TIME_DIFF = 'SET_DISPLAY_TIME_DIFF';\nexport const SET_DISPLAY_TIME_DIFF_SUCCESS = 'SET_DISPLAY_TIME_DIFF_SUCCESS';\nexport const SET_DISPLAY_TIME_DIFF_ERROR = 'SET_DISPLAY_TIME_DIFF_ERROR';\n/* Recipient actions */\n\nexport const RECIPIENT_SEARCH = 'RECIPIENT_SEARCH';\nexport const RECIPIENT_SEARCH_SUCCESS = 'RECIPIENT_SEARCH_SUCCESS';\nexport const RECIPIENT_SEARCH_ERROR = 'RECIPIENT_SEARCH_ERROR';\nexport const ADD_RECIPIENTS = 'ADD_RECIPIENTS';\nexport const ADD_RECIPIENTS_SUCCESS = 'ADD_RECIPIENTS_SUCCESS';\nexport const ADD_RECIPIENTS_ERROR = 'ADD_RECIPIENTS_ERROR';\nexport const ADD_RECIPIENT_BY_ID_SUCCESS = 'ADD_RECIPIENT_BY_ID_SUCCESS';\n/* Attachments */\n\nexport const ADD_ATTACHMENT = 'ADD_ATTACHMENT';\nexport const ADD_ATTACHMENT_SUCCESS = 'ADD_ATTACHMENT_SUCCESS';\nexport const ADD_ATTACHMENT_ERROR = 'ADD_ATTACHMENT_ERROR';\nexport const DOWNLOAD_ATTACHMENT = 'DOWNLOAD_ATTACHMENT';\nexport const DOWNLOAD_ATTACHMENT_SUCCESS = 'DOWNLOAD_ATTACHMENT_SUCCESS';\nexport const DOWNLOAD_ATTACHMENT_ERROR = 'DOWNLOAD_ATTACHMENT_ERROR';\nexport const REMOVE_ATTACHMENT = 'REMOVE_ATTACHMENT';\nexport const CLEAR_ATTACHMENTS = 'CLEAR_ATTACHMENTS';\nexport const CANCEL_ATTACHMENT = 'CANCEL_ATTACHMENT';\n/* DHIS2 CORE VERSION */\n\nexport const SET_DHIS2_CORE_VERSION = 'SET_DHIS2_CORE_VERSION';","import getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport { fade } from 'material-ui/utils/colorManipulator';\nimport { blue50, blue100, blue300, blue500, pinkA200, grey50, grey100, grey300, grey500, grey700, grey900, orange500, white, darkBlack, fullBlack } from 'material-ui/styles/colors';\nexport default getMuiTheme({\n  palette: {\n    negative: pinkA200,\n    blue50,\n    primary1Color: '#1D8BF1',\n    primary2Color: blue100,\n    primary3Color: blue300,\n    primary4Color: blue500,\n    accent1Color: grey50,\n    accent2Color: grey100,\n    accent3Color: grey300,\n    accent4Color: grey500,\n    followUp: orange500,\n    darkGray: grey700,\n    superDarkGray: grey900,\n    textColor: darkBlack,\n    alternateTextColor: white,\n    canvasColor: white,\n    borderColor: grey300,\n    clockCircleColor: fade(darkBlack, 0.07),\n    shadowColor: fullBlack\n  }\n});","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Snackbar from 'material-ui/Snackbar'\nimport { clearSnackMessage } from '../../actions'\nimport { compose, pure } from 'recompose'\nimport theme from '../../styles/theme'\n\nconst DEFAULT_MESSAGE_DURATION = 4000\nconst contentColorStyle = {\n    NEGATIVE: theme.palette.negative,\n    NEUTRAL: theme.palette.primary1Color,\n    POSITIVE: theme.palette.alternateTextColor,\n}\n\nclass CustomSnackBar extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            show: false,\n        }\n    }\n\n    componentDidUpdate(_prevProps, prevState) {\n        if (!prevState.show && this.props.message) {\n            this.setState({\n                show: true,\n            })\n        }\n    }\n\n    closeMessage = () => {\n        this.props.clearSnackMessage()\n        this.setState({\n            show: false,\n        })\n        this.props.onSnackRequestClose && this.props.onSnackRequestClose()\n    }\n\n    render() {\n        return (\n            <Snackbar\n                open={this.props.message !== '' && this.state.show}\n                message={this.props.message || 'Missing snackbar message'}\n                autoHideDuration={DEFAULT_MESSAGE_DURATION}\n                onRequestClose={this.closeMessage}\n                action={this.props.onSnackActionClick && 'undo'}\n                onActionClick={() => {\n                    this.props.onSnackActionClick()\n                    this.setState({\n                        show: false,\n                    })\n                }}\n                contentStyle={{ color: contentColorStyle[this.props.type] }}\n                style={{ pointerEvents: 'none', whiteSpace: 'nowrap' }}\n                bodyStyle={{ pointerEvents: 'initial', maxWidth: 'none' }}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    message: state.messaging.snackMessage,\n    type: state.messaging.snackType,\n    onSnackActionClick: state.messaging.onSnackActionClick,\n    onSnackRequestClose: state.messaging.onSnackRequestClose,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            clearSnackMessage,\n        }\n    ),\n    pure\n)(CustomSnackBar)\n","import { createHashHistory } from 'history';\nexport default createHashHistory();","import React from 'react'\nimport FlatButton from 'material-ui/FlatButton'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport Clear from 'material-ui-icons/Clear'\nimport Download from 'material-ui-icons/CloudDownload'\nimport theme from '../../styles/theme'\nimport './Attachments.css'\n\nconst Attachments = ({\n    dataDirection,\n    attachments,\n    style,\n    removeAttachment,\n    downloadAttachment,\n    cancelAttachment,\n}) => (\n    <div className=\"attachment\" style={{ ...style }}>\n        {attachments.map((attachment, index) => (\n            <Attachment\n                // combining name with index prevents errors when user uploads files with duplicate names\n                key={`${attachment.name}-${index}`}\n                dataDirection={dataDirection}\n                attachment={attachment}\n                removeAttachment={removeAttachment}\n                downloadAttachment={downloadAttachment}\n                cancelAttachment={cancelAttachment}\n            />\n        ))}\n    </div>\n)\n\nconst Attachment = ({\n    dataDirection,\n    attachment,\n    removeAttachment,\n    downloadAttachment,\n    cancelAttachment,\n}) => {\n    return (\n        <FlatButton\n            className=\"attachment__button\"\n            backgroundColor={theme.palette.accent2Color}\n            label={`${attachment.name} (${parseFloat(\n                parseInt(attachment.contentLength, 10) / 1000000\n            ).toFixed(2)} MB)`}\n            labelPosition=\"after\"\n            onClick={() => {\n                dataDirection === 'download'\n                    ? downloadAttachment(attachment)\n                    : attachment.loading\n                    ? cancelAttachment(attachment.name)\n                    : removeAttachment(attachment)\n            }}\n            icon={dataDirection === 'download' ? <Download /> : <Clear />}\n        >\n            {attachment.loading && (\n                <LinearProgress\n                    className={'attachment__progress'}\n                    mode=\"indeterminate\"\n                />\n            )}\n        </FlatButton>\n    )\n}\n\nexport default Attachments\n","import React from 'react'\nimport Divider from 'material-ui/Divider'\nimport CardText from 'material-ui/Card/CardText'\nimport Attachments from '../Attachments/Attachments'\nimport i18n from '@dhis2/d2-i18n'\nimport Linkify from 'react-linkify'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\nimport moment from 'moment'\n\nconst styles = {\n    canvas(backgroundColor) {\n        return {\n            backgroundColor,\n            padding: '16px 16px 16px 16px',\n        }\n    },\n    innerCanvas: {\n        margin: '',\n        paddingBottom: '0px',\n    },\n    cardText: {\n        padding: '16px 0px 16px 0px',\n        fontFamily,\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'break-word',\n    },\n    fromFormat: {\n        fontFamily,\n    },\n    datePlacement: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginRight: '10px',\n    },\n    dateFormat: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        fontFamily,\n    },\n}\n\nconst Message = ({\n    displayTimeDiff,\n    message,\n    currentUser,\n    lastMessage,\n    downloadAttachment,\n    cancelAttachment,\n    enableAttachments,\n}) => {\n    const fromTitle = message.sender\n        ? currentUser && currentUser.id === message.sender.id\n            ? 'me'\n            : message.sender.displayName\n        : 'system'\n    const today = moment()\n    const messageDate = moment(message.created).add(displayTimeDiff)\n\n    return (\n        <div style={styles.canvas(theme.palette.canvasColor)}>\n            <div style={styles.innerCanvas}>\n                <div style={styles.fromFormat}>\n                    {message.internal\n                        ? i18n.t(`Internal message from ${fromTitle}`)\n                        : i18n.t(`Message from ${fromTitle}`)}\n                </div>\n\n                <div placement={'bottom'} style={styles.datePlacement}>\n                    <div style={styles.dateFormat}>\n                        {today.diff(messageDate, 'hours') < 72\n                            ? `${messageDate.from(today)}, ${messageDate.format(\n                                  'HH:mm'\n                              )}`\n                            : today.year() === messageDate.year()\n                            ? messageDate.format('MMM DD, HH:mm')\n                            : messageDate.format('MMM DD, YYYY HH:mm')}\n                    </div>\n                </div>\n\n                {enableAttachments && (\n                    <Attachments\n                        dataDirection={'download'}\n                        style={{ paddingLeft: 0 }}\n                        attachments={message.attachments}\n                        downloadAttachment={downloadAttachment}\n                        cancelAttachment={cancelAttachment}\n                    />\n                )}\n\n                <CardText style={styles.cardText}>\n                    <Linkify>{message.text}</Linkify>\n                </CardText>\n            </div>\n            {!lastMessage && <Divider />}\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport FlatButton from 'material-ui/FlatButton'\nimport AttachFile from 'material-ui-icons/AttachFile'\nimport i18n from '@dhis2/d2-i18n'\nimport './AttachmentUploadButton.css'\n\nconst createHandleChange = addAttachment => event => {\n    const files = event.target.files\n    const hasFile = files.length > 0\n\n    if (hasFile) {\n        addAttachment(files[0])\n    }\n}\n\nconst AttachmentUploadButton = ({ addAttachment }) => (\n    <FlatButton\n        className=\"attachment__upload-button\"\n        label={i18n.t('Upload attachment')}\n        labelPosition=\"after\"\n        containerElement=\"label\"\n        icon={<AttachFile />}\n    >\n        <input\n            className=\"attachment__upload-button--input\"\n            type=\"file\"\n            onChange={createHandleChange(addAttachment)}\n        />\n    </FlatButton>\n)\n\nexport default AttachmentUploadButton\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Card, CardActions, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport TextField from 'material-ui/TextField'\nimport AttachmentUploadButton from '../Attachments/AttachmentUploadButton'\nimport Attachments from '../Attachments/Attachments'\nimport { supportsAttachments } from '../../utils/helpers'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    replyMessage,\n    setSelectedMessageType,\n    updateInputFields,\n    displaySnackMessage,\n    addAttachment,\n    removeAttachment,\n    cancelAttachment,\n} from '../../actions'\nimport { NEGATIVE } from '../../constants/development'\n\nclass ReplyCard extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            discardState: false,\n        }\n    }\n\n    componentWillUnmount() {\n        this.wipeInput()\n    }\n\n    replyMessage = internalReply => {\n        const {\n            input: message,\n            selectedMessageConversation: messageConversation,\n            selectedMessageType: messageType,\n        } = this.props\n\n        this.props.replyMessage({\n            message,\n            internalReply,\n            messageConversation,\n            messageType,\n        })\n\n        this.wipeInput()\n    }\n\n    wipeInput = () => {\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n        this.setState({\n            inputError: false,\n        })\n    }\n\n    texFieldUpdate = (event, newValue) => {\n        this.props.updateInputFields('', newValue, [])\n    }\n\n    handleDiscard = () => {\n        const message = i18n.t('Reply discarded')\n        const snackType = NEGATIVE\n        const onSnackActionClick = () => this.setState({ discardState: false })\n        const onSnackRequestClose = () => {\n            this.setState({ discardState: false })\n            this.wipeInput()\n        }\n\n        this.setState({ discardState: true })\n        this.props.displaySnackMessage({\n            message,\n            onSnackActionClick,\n            onSnackRequestClose,\n            snackType,\n        })\n        this.setState({\n            expanded: false,\n        })\n    }\n\n    render() {\n        return (\n            <Card style={{ marginTop: '5px' }} expanded>\n                <CardText style={{ padding: '0px 0px 0px 16px' }}>\n                    <TextField\n                        key={this.props.messageConversation.id}\n                        id={this.props.messageConversation.id}\n                        rows={5}\n                        underlineShow={false}\n                        value={this.state.discardState ? '' : this.props.input}\n                        multiLine\n                        fullWidth\n                        floatingLabelText={i18n.t('Message')}\n                        onChange={this.texFieldUpdate}\n                    />\n                    {this.props.enableAttachments &&\n                        !this.state.discardState && (\n                            <Attachments\n                                dataDirection={'upload'}\n                                attachments={this.props.attachments}\n                                removeAttachment={attachment =>\n                                    this.props.removeAttachment(attachment.id)\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                            />\n                        )}\n\n                    <CardActions style={{ paddingLeft: '0px' }}>\n                        <RaisedButton\n                            primary\n                            label={i18n.t('Reply')}\n                            disabled={\n                                this.props.input === '' ||\n                                this.state.discardState\n                            }\n                            onClick={() => this.replyMessage(false)}\n                        />\n                        {this.props.isInFeedbackRecipientGroup &&\n                            this.props.selectedMessageType.id === 'TICKET' && (\n                                <FlatButton\n                                    primary\n                                    label={i18n.t('Internal reply')}\n                                    disabled={\n                                        this.props.input === '' ||\n                                        this.state.discardState\n                                    }\n                                    onClick={() => this.replyMessage(true)}\n                                />\n                            )}\n                        <FlatButton\n                            label={i18n.t('Discard')}\n                            disabled={\n                                this.props.input === '' ||\n                                this.state.discardState\n                            }\n                            onClick={this.handleDiscard}\n                        />\n                        {this.props.enableAttachments && (\n                            <AttachmentUploadButton\n                                addAttachment={attachment => {\n                                    this.props.addAttachment(attachment)\n                                }}\n                            />\n                        )}\n                        )\n                    </CardActions>\n                </CardText>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n    messageTypes: state.messaging.messageTypes,\n    input: state.messaging.input,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n    attachments: state.messaging.attachments,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            replyMessage,\n            setSelectedMessageType,\n            updateInputFields,\n            displaySnackMessage,\n            addAttachment,\n            removeAttachment,\n            cancelAttachment,\n        },\n        null,\n        { pure: false }\n    )\n)(ReplyCard)\n","import React, { Component } from 'react'\nimport ChipInput from 'material-ui-chip-input'\nimport { debounce } from '../../utils/helpers'\nimport i18n from '@dhis2/d2-i18n'\nimport * as api from '../../api/api'\n\nconst searchDelay = 300\nconst minCharLength = 2\n\n/*\n * An AutoComplete text field with suggestions from a given list of\n * identifiable objects. Selected objects are shown as chips in the text field.\n */\n\nclass SuggestionField extends Component {\n    state = {\n        input: '',\n        searchResult: [],\n        searchOnlyUsers: this.props.searchOnlyUsers,\n        searchOnlyFeedbackRecipients: this.props.searchOnlyFeedbackRecipients,\n        lastSearch: '',\n        errorText: undefined,\n    }\n\n    debouncedSearch = debounce(this.search.bind(this), searchDelay)\n\n    search(input) {\n        const doSearch =\n            !this.state.searchResult.find(\n                result => result.displayName === input\n            ) &&\n            input !== '' &&\n            input.length >= minCharLength\n\n        if (doSearch) {\n            const {\n                feedbackRecipientsId,\n                searchOnlyUsers,\n                searchOnlyFeedbackRecipients,\n            } = this.props\n\n            api.searchRecipients({\n                searchValue: input,\n                searchOnlyUsers,\n                searchOnlyFeedbackRecipients,\n                feedbackRecipientsId,\n            }).then(({ users, userGroups, organisationUnits }) => {\n                const addType = type => result => ({ ...result, type })\n                let internalSearchResult = users.map(addType('user'))\n\n                if (!this.state.searchOnlyUsers) {\n                    internalSearchResult = internalSearchResult\n                        .concat(userGroups.map(addType('userGroup')))\n                        .concat(\n                            organisationUnits.map(addType('organisationUnit'))\n                        )\n                }\n\n                this.setState({\n                    searchResult: internalSearchResult,\n                    errorText:\n                        internalSearchResult.length === 0\n                            ? i18n.t('No results found')\n                            : undefined,\n                })\n            })\n        } else {\n            this.setState({\n                lastSearch: input,\n                searchResult:\n                    (this.state.lastSearch !== '' && input === '') ||\n                    input.length < minCharLength\n                        ? []\n                        : this.state.searchResult,\n                errorText:\n                    input !== '' && input.length < minCharLength\n                        ? i18n.t(\n                              `Please enter at least ${minCharLength} characters`\n                          )\n                        : this.state.searchWarning,\n            })\n        }\n    }\n\n    onSuggestionClick = chip => {\n        if (this.props.onSuggestionClick !== undefined) {\n            this.props.onSuggestionClick(chip)\n        } else {\n            this.wipeInput()\n            this.debouncedSearch('')\n\n            const doInsert = !this.props.recipients.find(\n                recipient => recipient.id === chip.id\n            )\n\n            doInsert &&\n                this.props.updateRecipients([\n                    ...this.props.recipients,\n                    this.state.searchResult.find(\n                        result => result.id === chip.id\n                    ),\n                ])\n        }\n    }\n\n    onRemoveChip = id => {\n        this.props.updateRecipients(\n            this.props.recipients.filter(recipient => recipient.id !== id)\n        )\n    }\n\n    wipeInput = () => {\n        this.setState({\n            input: '',\n            searchResult: [],\n        })\n    }\n\n    updateInput = input => {\n        this.debouncedSearch(input)\n        this.setState({\n            input,\n        })\n    }\n\n    render() {\n        return (\n            <div\n                style={{ ...this.props.style, height: this.props.inputHeight }}\n            >\n                <ChipInput\n                    style={{ marginBottom: 16 }}\n                    disabled={\n                        this.props.disabled === undefined\n                            ? false\n                            : this.props.disabled\n                    }\n                    errorText={this.props.errorText || this.state.errorText}\n                    value={this.props.recipients}\n                    fullWidth\n                    openOnFocus\n                    searchText={this.state.input}\n                    floatingLabelText={this.props.label}\n                    dataSource={this.state.searchResult}\n                    dataSourceConfig={{ text: 'displayName', value: 'id' }}\n                    onUpdateInput={this.updateInput}\n                    onRequestAdd={chip => this.onSuggestionClick(chip)}\n                    onRequestDelete={id => this.onRemoveChip(id)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SuggestionField\n","import React from 'react'\nimport Subheader from 'material-ui/Subheader/Subheader'\n\nconst styles = {\n    subheaderTitle: {\n        height: '32px',\n        color: 'black',\n        paddingLeft: 0,\n        paddingRight: 16,\n    },\n    subheader(color, fontWeight) {\n        return {\n            height: '32px',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            padding: 0,\n            color,\n            fontWeight,\n        }\n    },\n}\n\nconst ExtendedChoiceLabel = ({\n    showTitle,\n    title,\n    label,\n    color,\n    fontWeight,\n}) => {\n    const displayLabel =\n        label && label !== 'NONE'\n            ? title === 'Assignee'\n                ? label\n                : `${label.charAt(0)}${label\n                      .toLowerCase()\n                      .substr(1, label.length)}`\n            : '-'\n\n    return (\n        <div style={{ flex: 2, paddingLeft: 10, maxWidth: 200 }}>\n            {showTitle && (\n                <Subheader style={styles.subheaderTitle}> {title} </Subheader>\n            )}\n            <Subheader style={styles.subheader(color, fontWeight)}>\n                {displayLabel}\n            </Subheader>\n        </div>\n    )\n}\n\nexport default ExtendedChoiceLabel\n","import theme from '../styles/theme';\nimport { fontFamily } from '../constants/development';\nexport const styles = {\n  canvas: {\n    flex: '3 0',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    height: 'calc(100vh - 110px)',\n    paddingTop: '10px'\n  },\n  innerCanvas: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0px 10px 0px 10px'\n  },\n  header: {\n    display: 'flex'\n  },\n  iconButton: {\n    display: 'flex',\n    alignSelf: 'center'\n  },\n  subjectSubheader: {\n    display: 'flex',\n    alignSelf: 'center',\n    fontSize: '20px',\n    fontFamily\n  },\n  participantsCanvas: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  participants: {\n    paddingLeft: '12px',\n    paddingTop: '10px',\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    height: '32px',\n    marginRight: '3px',\n    marginBottom: '3px'\n  },\n  participantAddRow: {\n    display: 'flex'\n  },\n  participantsSuggestionField: {\n    paddingLeft: '12px',\n    marginBottom: '0px',\n    flex: 1\n  },\n  participantsAdd: {\n    alignSelf: 'flex-end',\n    marginBottom: '28px',\n    paddingLeft: '12px'\n  },\n  messagesCanvas: {\n    marginBottom: '50px',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.accent2Color,\n    margin: '0px 10px 10px 10px'\n  },\n  messagesInnerCanvas: {\n    padding: '0px'\n  }\n};\nexport default styles;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\n\nimport history from '../../utils/history'\nimport {\n    addRecipients,\n    downloadAttachment,\n    cancelAttachment,\n    clearSelectedMessageConversation,\n} from '../../actions'\nimport { supportsAttachments } from '../../utils/helpers'\n\nimport { getInstance as getD2Instance } from 'd2'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport AddIcon from 'material-ui-icons/Add'\nimport NavigationBack from 'material-ui-icons/ArrowBack'\nimport FlatButton from 'material-ui/FlatButton'\nimport IconButton from 'material-ui/IconButton'\nimport Chip from 'material-ui/Chip'\nimport Paper from 'material-ui/Paper'\nimport i18n from '@dhis2/d2-i18n'\nimport Message from './Message'\nimport ReplyCard from './ReplyCard'\nimport SuggestionField from '../Common/SuggestionField'\nimport ExtendedChoiceLabel from '../Common/ExtendedChoiceLabel'\nimport { styles } from '../../styles/messageConversationStyles'\nimport theme from '../../styles/theme'\n\nconst NOTIFICATIONS = ['TICKET', 'VALIDATION_RESULT']\nconst maxParticipantsDisplay = 30\n\nclass MessageConversation extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            recipients: [],\n            currentUser: undefined,\n            cursor: 'auto',\n        }\n    }\n\n    componentDidMount() {\n        getD2Instance().then(instance => {\n            this.setState({\n                currentUser: instance.currentUser,\n            })\n        })\n    }\n\n    backToList = () => {\n        const {\n            clearSelectedMessageConversation,\n            messageConversation,\n        } = this.props\n        history.push(`/${messageConversation.messageType}`)\n        clearSelectedMessageConversation()\n    }\n\n    addRecipients = () => {\n        const users = this.state.recipients.filter(r => r.type === 'user')\n        const userGroups = this.state.recipients.filter(\n            r => r.type === 'userGroup'\n        )\n        const organisationUnits = this.state.recipients.filter(\n            r => r.type === 'organisationUnit'\n        )\n        const {\n            messageConversation,\n            selectedMessageType: messageType,\n        } = this.props\n\n        this.props.addRecipients({\n            users,\n            userGroups,\n            organisationUnits,\n            messageConversation,\n            messageType,\n        })\n\n        this.setState({\n            recipients: [],\n        })\n    }\n\n    updateRecipients = recipients => {\n        this.setState({\n            recipients,\n        })\n    }\n\n    render() {\n        const { messageConversation } = this.props\n        const messages = messageConversation.messages\n        const notification = !!(\n            NOTIFICATIONS.indexOf(messageConversation.messageType) + 1\n        )\n        const participants = messageConversation.userMessages\n            .slice(0, maxParticipantsDisplay)\n            .map(userMessage =>\n                typeof this.state.currentUser === 'undefined' ||\n                this.state.recipientsExpanded ||\n                this.state.currentUser.id !== userMessage.user.id\n                    ? userMessage.user.displayName\n                    : i18n.t('me')\n            )\n        const userMessagesLength = messageConversation.userMessages.length\n\n        if (userMessagesLength > maxParticipantsDisplay) {\n            participants.push(\n                ' + '.concat(userMessagesLength - maxParticipantsDisplay)\n            )\n        }\n\n        return (\n            <div id=\"messageconversation\" style={styles.canvas}>\n                <div style={styles.innerCanvas}>\n                    <div style={styles.header}>\n                        <IconButton\n                            style={styles.iconButton}\n                            tooltipPosition=\"bottom-right\"\n                            onClick={this.backToList}\n                            tooltip={i18n.t('Show all messages')}\n                        >\n                            <NavigationBack />\n                        </IconButton>\n                        <Subheader style={styles.subjectSubheader}>\n                            {messageConversation.subject}\n                        </Subheader>\n                        {this.props.displayExtendedChoices && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Status')}\n                                label={messageConversation.status}\n                            />\n                        )}\n                        {this.props.displayExtendedChoices && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Priority')}\n                                label={messageConversation.priority}\n                            />\n                        )}\n                        {notification && (\n                            <ExtendedChoiceLabel\n                                color={theme.palette.darkGray}\n                                showTitle\n                                title={i18n.t('Assignee')}\n                                label={\n                                    messageConversation.assignee\n                                        ? messageConversation.assignee\n                                              .displayName\n                                        : undefined\n                                }\n                            />\n                        )}\n                    </div>\n                    <div style={styles.participantsCanvas}>\n                        <Subheader\n                            style={{\n                                paddingLeft: '12px',\n                                paddingTop: '10px',\n                            }}\n                        >\n                            {i18n.t('Participants')}\n                        </Subheader>\n                        <div style={styles.participants}>\n                            {participants.map(participant => (\n                                <Chip key={participant} style={styles.chip}>\n                                    {participant}\n                                </Chip>\n                            ))}\n                        </div>\n                    </div>\n                    <div style={styles.participantAddRow}>\n                        <SuggestionField\n                            style={styles.participantsSuggestionField}\n                            label={i18n.t('Add participants to conversation')}\n                            messageConversation={messageConversation}\n                            recipients={this.state.recipients}\n                            updateRecipients={this.updateRecipients}\n                            limitSearchArray={messageConversation.userMessages}\n                        />\n                        <div style={styles.participantsAdd}>\n                            <FlatButton\n                                icon={<AddIcon />}\n                                onClick={() => this.addRecipients()}\n                                label={i18n.t('Add')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div style={styles.messagesCanvas}>\n                    <Paper style={styles.messagesInnerCanvas}>\n                        {messages.map((message, i) => (\n                            <Message\n                                key={message.id}\n                                displayTimeDiff={this.props.displayTimeDiff}\n                                message={message}\n                                messageConversation={messageConversation}\n                                notification={notification}\n                                currentUser={this.state.currentUser}\n                                lastMessage={i + 1 === messages.length}\n                                downloadAttachment={attachment =>\n                                    this.props.downloadAttachment(\n                                        messageConversation.id,\n                                        message.id,\n                                        attachment.id\n                                    )\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                                enableAttachments={this.props.enableAttachments}\n                            />\n                        ))}\n                    </Paper>\n                    <ReplyCard\n                        {...this.props}\n                        messageConversation={messageConversation}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    displayTimeDiff: state.messaging.displayTimeDiff,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            addRecipients,\n            downloadAttachment,\n            cancelAttachment,\n            clearSelectedMessageConversation,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversation)\n","import React, { Component } from 'react'\n\nimport CircularProgress from 'material-ui/CircularProgress'\nimport Badge from 'material-ui/Badge'\nimport Subheader from 'material-ui/Subheader/Subheader'\n\nimport i18n from '@dhis2/d2-i18n'\n\nimport theme from '../../styles/theme'\n\nclass MessageTypeItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            backgroundColor: theme.palette.accent2Color,\n            textColor: theme.palette.darkGray,\n        }\n    }\n\n    onClick = () => {\n        this.props.onClick()\n    }\n\n    onMouseEnter = () => {\n        this.setHoverText()\n        this.setState({ cursor: 'pointer' })\n    }\n    onMouseLeave = () => {\n        this.setNeutralText()\n        this.setState({ cursor: 'auto' })\n    }\n\n    setNeutralText = () => this.setTextColor(theme.palette.accent2Color)\n    setHoverText = () => this.setTextColor(theme.palette.accent3Color)\n\n    setTextColor = color => {\n        this.setState({\n            backgroundColor: color,\n        })\n    }\n\n    getBackgroundColor = (selectedValue, id) =>\n        selectedValue && id === selectedValue.id\n            ? theme.palette.accent3Color\n            : this.state.backgroundColor\n\n    render() {\n        return (\n            <div\n                role=\"presentation\"\n                style={{\n                    ...this.state,\n                    backgroundColor: this.getBackgroundColor(\n                        this.props.selectedMessageType,\n                        this.props.messageType.id\n                    ),\n                    cursor: this.state.cursor,\n                    alignItems: 'center',\n                    height: '49px',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                }}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onClick={() => this.onClick()}\n            >\n                <Subheader\n                    style={{\n                        marginLeft: '5px',\n                        fontSize:\n                            this.props.selectedMessageType &&\n                            this.props.messageType.id ===\n                                this.props.selectedMessageType.id\n                                ? '18px'\n                                : '16px',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        color:\n                            this.props.selectedMessageType &&\n                            this.props.messageType.id ===\n                                this.props.selectedMessageType.id\n                                ? theme.palette.primary1Color\n                                : this.state.textColor,\n                    }}\n                >\n                    {i18n.t(this.props.messageType.displayName)}\n                </Subheader>\n                {this.props.loading ? (\n                    <CircularProgress\n                        style={{ marginRight: '10px' }}\n                        color={theme.palette.primary1Color}\n                        size={24}\n                    />\n                ) : (\n                    this.props.messageType.unread > 0 && (\n                        <Badge\n                            style={{ marginTop: '12px', marginRight: '5px' }}\n                            badgeContent={\n                                this.props.messageType.unread > 100\n                                    ? '99+'\n                                    : this.props.messageType.unread\n                            }\n                            secondary\n                            badgeStyle={{ backgroundColor: '#439E8E' }}\n                        />\n                    )\n                )}\n            </div>\n        )\n    }\n}\n\nexport default MessageTypeItem\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { List } from 'material-ui/List'\nimport Divider from 'material-ui/Divider'\nimport Toggle from 'material-ui/Toggle'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport { setSelectedMessageType, clearCheckedIds } from '../../actions'\nimport MessageTypeItem from './MessageTypeItem'\nimport theme from '../../styles/theme'\nimport moment from 'moment'\n\nconst styles = {\n    canvas: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: 'calc(100vh - 95px)',\n        borderLeftStyle: 'solid',\n        borderLeftWidth: '0.5px',\n        borderLeftColor: theme.palette.accent4Color,\n        borderRightStyle: 'solid',\n        borderRightWidth: '1px',\n        borderRightColor: theme.palette.accent4Color,\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        minWidth: '200px',\n    },\n}\n\nclass SidebarList extends Component {\n    constructor(props) {\n        super(props)\n        this.props.setSelectedMessageType(this.props.match.params.messageType)\n    }\n\n    render() {\n        const messageTypes = this.props.messageTypes\n\n        return (\n            <div style={styles.canvas}>\n                <List\n                    style={{\n                        padding: '0px',\n                    }}\n                >\n                    {messageTypes &&\n                        messageTypes.map(messageType => (\n                            <div key={messageType.id}>\n                                <MessageTypeItem\n                                    messageType={messageType}\n                                    onClick={() => {\n                                        this.props.setSelectedMessageType(\n                                            messageType.id\n                                        )\n                                        this.props.updateInputFields('', '', [])\n                                        this.props.attachments.length > 0 &&\n                                            this.props.clearAttachments()\n                                        history.push(`/${messageType.id}`)\n                                    }}\n                                    selectedMessageType={\n                                        this.props.selectedMessageType\n                                    }\n                                    loading={messageType.loading}\n                                />\n                                <Divider />\n                            </div>\n                        ))}\n                </List>\n                <Toggle\n                    style={{ width: '', margin: '20px' }}\n                    label={`${i18n.t('Auto refresh')} (${moment(\n                        this.props.refreshTimer\n                    ).format('mm:ss')})`}\n                    toggled={this.props.autoRefresh}\n                    onToggle={() =>\n                        this.props.setAutoRefresh(!this.props.autoRefresh)\n                    }\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    messageTypes: state.messaging.messageTypes,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setSelectedMessageType,\n            clearCheckedIds,\n        },\n        null,\n        { pure: false }\n    )\n)(SidebarList)\n","import theme from '../styles/theme';\nexport const messagePanelContainer = {\n  overflowY: 'scroll',\n  overflowX: 'hidden',\n  borderRightWidth: '1px',\n  borderRightColor: theme.palette.accent4Color,\n  height: 'calc(100vh - 95px)'\n};\nexport const subheader = {\n  paddingLeft: '0px',\n  fontSize: '20px'\n};","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport Checkbox from 'material-ui/Checkbox'\nimport Paper from 'material-ui/Paper'\nimport i18n from '@dhis2/d2-i18n'\nimport { setAllChecked, clearCheckedIds } from '../../actions'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\n\nconst fontSize = '16px'\n\nconst styles = {\n    canvas(backgroundColor) {\n        return {\n            backgroundColor,\n            display: 'flex',\n            transition: 'all 0.2s ease-in-out',\n            boxSizing: 'border-box',\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            alignSelf: 'center',\n            boxShadow: 'none',\n            borderBottom: '1px solid #dfdfdf',\n        }\n    },\n    checkBox: {\n        flex: '0 0 32px',\n        display: 'flex',\n        alignSelf: 'center',\n        paddingLeft: '12px',\n    },\n    sender: {\n        fontFamily,\n        fontSize,\n        flex: 3,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: 'black',\n        paddingLeft: 10,\n        alignSelf: 'center',\n    },\n    subject: {\n        flex: 8,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        fontFamily,\n        fontSize,\n        color: 'black',\n        paddingLeft: 10,\n    },\n    extendedLabel: {\n        flex: 2,\n        color: 'black',\n        fontSize,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        padding: '0 0 0 10px',\n    },\n}\n\nclass MessageConversationListItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            cursor: 'auto',\n            allChecked: false,\n        }\n    }\n\n    componentDidUpdate() {\n        if (\n            this.state.allChecked &&\n            this.props.checkedIds.length < this.props.children.length\n        ) {\n            this.setState({ allChecked: false })\n        }\n    }\n\n    render() {\n        const displayExtendedChoices = this.props.displayExtendedChoices\n\n        return (\n            <Paper style={styles.canvas(theme.palette.canvasColor)}>\n                <Checkbox\n                    checked={this.state.allChecked}\n                    style={styles.checkBox}\n                    onCheck={(event, isInputChecked) => {\n                        this.state.allChecked\n                            ? this.props.clearCheckedIds()\n                            : this.props.setAllChecked(\n                                  this.props.children.map(child => ({\n                                      id: child.id,\n                                  }))\n                              )\n\n                        this.setState({ allChecked: !this.state.allChecked })\n                    }}\n                />\n                <div style={styles.sender}>{i18n.t('Sender')}</div>\n                <Subheader style={styles.subject}>\n                    {i18n.t('Subject')}\n                </Subheader>\n                {displayExtendedChoices && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Status')}\n                    </Subheader>\n                )}\n                {displayExtendedChoices && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Priority')}\n                    </Subheader>\n                )}\n                {this.props.notification && (\n                    <Subheader style={styles.extendedLabel}>\n                        {i18n.t('Assignee')}\n                    </Subheader>\n                )}\n                <Subheader style={styles.extendedLabel}>\n                    {i18n.t('Date')}\n                </Subheader>\n            </Paper>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    checkedIds: state.messaging.checkedIds,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setAllChecked,\n            clearCheckedIds,\n        }\n    )\n)(MessageConversationListItem)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport Checkbox from 'material-ui/Checkbox'\nimport Paper from 'material-ui/Paper'\nimport Flag from 'material-ui-icons/Flag'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport {\n    setChecked,\n    setSelectedMessageConversation,\n    markMessageConversations,\n    clearCheckedIds,\n    setFilter,\n    updateInputFields,\n    clearAttachments,\n} from '../../actions'\nimport ExtendedChoiceLabel from '../Common/ExtendedChoiceLabel'\nimport theme from '../../styles/theme'\nimport { fontFamily } from '../../constants/development'\nimport moment from 'moment'\n\nconst styles = {\n    container(backgroundColor, wideview, cursor) {\n        return {\n            backgroundColor,\n            display: 'flex',\n            transition: 'all 0.2s ease-in-out',\n            cursor: cursor,\n            boxSizing: 'border-box',\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            boxShadow: 'none',\n            borderBottom: '1px solid #dfdfdf',\n            flexWrap: wideview ? 'nowrap' : 'wrap',\n        }\n    },\n    checkBox(wideview) {\n        return {\n            flex: '0 0 32px',\n            display: 'flex',\n            alignSelf: 'center',\n            paddingLeft: wideview ? 12 : 6,\n        }\n    },\n    flag: {\n        color: theme.palette.followUp,\n        marginRight: 4,\n    },\n    sender(wideview, fontWeight) {\n        return {\n            fontFamily,\n            fontSize: '14px',\n            flex: 3,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            display: 'flex',\n            alignItems: 'center',\n            color: 'black',\n            paddingLeft: wideview ? 10 : 0,\n            fontWeight,\n        }\n    },\n    subject(wideview, fontColor, fontWeight) {\n        return {\n            flex: 8,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            paddingLeft: 10,\n            fontFamily,\n            color: fontColor,\n            fontWeight,\n            order: wideview ? 'inherit' : 10,\n            marginTop: wideview ? 0 : -10,\n            flexBasis: wideview ? '0%' : '100%',\n        }\n    },\n    dateFormat(wideview, fontColor, fontWeight) {\n        return {\n            flex: 2,\n            fontFamily,\n            paddingLeft: wideview ? 10 : 0,\n            paddingRight: wideview ? 0 : 10,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n            textAlign: wideview ? '' : 'end',\n            color: fontColor,\n            fontWeight,\n        }\n    },\n}\n\nclass MessageConversationListItem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            backgroundColor: theme.palette.canvasColor,\n            cursor: 'auto',\n        }\n    }\n\n    onClick = messageConversation => {\n        this.props.setSelectedMessageConversation(messageConversation)\n        if (messageConversation && !messageConversation.read) {\n            this.props.markMessageConversations(\n                'read',\n                [messageConversation.id],\n                this.props.selectedMessageType\n            )\n        }\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n        history.push(\n            `/${messageConversation.messageType}/${messageConversation.id}`\n        )\n    }\n\n    onMouseEnter = () =>\n        this.setState({\n            cursor: 'pointer',\n            backgroundColor: theme.palette.accent2Color,\n        })\n    onMouseLeave = () =>\n        this.setState({\n            cursor: 'auto',\n            backgroundColor: theme.palette.canvasColor,\n        })\n\n    getBackgroundColor = (messageConversation, checked) => {\n        const selectedMessageConversation =\n            this.props.selectedMessageConversation &&\n            messageConversation.id === this.props.selectedMessageConversation.id\n\n        if (checked && !selectedMessageConversation) {\n            return theme.palette.blue50\n        } else if (selectedMessageConversation) {\n            return theme.palette.accent3Color\n        }\n        return this.state.backgroundColor\n    }\n\n    render() {\n        const messageConversation = this.props.messageConversation\n        const title = messageConversation.lastSender\n            ? messageConversation.lastSender.displayName\n            : this.props.selectedMessageType.displayName\n        const checked = !!this.props.checkedIds.find(\n            x => x.id === messageConversation.id\n        )\n\n        const displayExtendedChoices = this.props.displayExtendedChoices\n\n        const displayTimeDiff = this.props.displayTimeDiff\n\n        const today = moment()\n        const messageDate = moment(messageConversation.lastMessage).add(\n            displayTimeDiff\n        )\n        const fontWeight = !messageConversation.read ? 'bold' : ''\n        const fontColor = this.props.messageConversation.read\n            ? 'black'\n            : theme.palette.darkGray\n\n        const containerBackgroundColor = this.getBackgroundColor(\n            messageConversation,\n            checked\n        )\n\n        return (\n            <Paper\n                style={styles.container(\n                    containerBackgroundColor,\n                    this.props.wideview,\n                    this.state.cursor\n                )}\n                onClick={event => {\n                    const onClick =\n                        event.target.innerText !== undefined &&\n                        event.target.innerText !== ''\n\n                    if (\n                        onClick &&\n                        !this.props.settingSelectedMessageConversation\n                    ) {\n                        this.onClick(messageConversation)\n                        this.props.checkedIds.length > 0 &&\n                            this.props.clearCheckedIds()\n                        if (\n                            this.props.wideview &&\n                            (this.props.messageFilter !== undefined ||\n                                this.props.priorityFilter !== undefined ||\n                                this.props.statusFilter !== undefined)\n                        ) {\n                            this.props.setFilter(undefined, 'MESSAGE')\n                        }\n                    }\n                }}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                <Checkbox\n                    checked={checked}\n                    style={styles.checkBox(this.props.wideview)}\n                    onCheck={(event, isInputChecked) => {\n                        this.props.setChecked(messageConversation, !checked)\n                    }}\n                />\n                <div style={styles.sender(this.props.wideview, fontWeight)}>\n                    {messageConversation.followUp && (\n                        <Flag style={styles.flag} />\n                    )}\n                    <span>{title}</span>\n                </div>\n                <Subheader\n                    style={styles.subject(\n                        this.props.wideview,\n                        fontColor,\n                        fontWeight\n                    )}\n                >\n                    {messageConversation.subject}\n                </Subheader>\n                {displayExtendedChoices && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Status')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={messageConversation.status}\n                    />\n                )}\n                {displayExtendedChoices && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Priority')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={messageConversation.priority}\n                    />\n                )}\n                {this.props.notification && this.props.wideview && (\n                    <ExtendedChoiceLabel\n                        showTitle={false}\n                        title={i18n.t('Assignee')}\n                        color={fontColor}\n                        fontWeight={fontWeight}\n                        label={\n                            messageConversation.assignee\n                                ? messageConversation.assignee.displayName\n                                : undefined\n                        }\n                    />\n                )}\n                <Subheader\n                    style={styles.dateFormat(\n                        this.props.wideview,\n                        fontColor,\n                        fontWeight\n                    )}\n                >\n                    {today.diff(messageDate, 'hours') < 72\n                        ? messageDate.from(today)\n                        : today.year() === messageDate.year()\n                        ? messageDate.format('MMM DD')\n                        : messageDate.format('ll')}\n                </Subheader>\n            </Paper>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    settingSelectedMessageConversation:\n        state.messaging.settingSelectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n    checkedIds: state.messaging.checkedIds,\n    displayTimeDiff: state.messaging.displayTimeDiff,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    attachments: state.messaging.attachments,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setChecked,\n            setSelectedMessageConversation,\n            markMessageConversations,\n            clearCheckedIds,\n            setFilter,\n            updateInputFields,\n            clearAttachments,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversationListItem)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport i18n from '@dhis2/d2-i18n'\nimport { loadMessageConversations } from '../../actions'\nimport { messagePanelContainer } from '../../styles/style'\nimport theme from '../../styles/theme'\nimport ListItemHeader from './ListItemHeader'\nimport MessageConversationListItem from './MessageConversationListItem'\nimport { dedupeById, debounce } from '../../utils/helpers'\n\nconst NOTIFICATIONS = ['VALIDATION_RESULT', 'TICKET']\nconst bottomEmptyHeight = 50\n\nconst styles = {\n    canvas(wideview) {\n        return {\n            flex: '1 0',\n            maxWidth: wideview ? 'none' : '350px',\n            minWidth: wideview ? 'none' : '250px',\n            borderRightStyle: wideview ? '' : 'solid',\n            ...messagePanelContainer,\n        }\n    },\n    loading: {\n        backgroundColor: theme.palette.accent2Color,\n        height: `${bottomEmptyHeight}px`,\n        transition: 'all 0.2s ease-in-out',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n}\n\nclass MessageConversationList extends Component {\n    onScroll = messageType => {\n        const messageList = document.getElementById('messagelist')\n        if (\n            !this.props.selectedMessageType.loading &&\n            this.isBottom(messageList) &&\n            messageType.loaded < messageType.total\n        ) {\n            this.props.loadMessageConversations(\n                messageType,\n                messageType.id,\n                true\n            )\n        }\n    }\n\n    debouncedOnScroll = debounce(this.onScroll, 150)\n    isBottom = el => el.scrollHeight - el.scrollTop < window.outerHeight\n\n    render() {\n        const children = dedupeById(\n            this.props.messageConversations[this.props.selectedMessageType.id]\n        )\n\n        const messageType = this.props.selectedMessageType\n            ? this.props.selectedMessageType\n            : ''\n        const selectedValue = this.props.selectedMessageConversation\n            ? this.props.selectedMessageConversation.id\n            : ''\n\n        const notification = !!(NOTIFICATIONS.indexOf(messageType.id) + 1)\n        return (\n            <div\n                id={'messagelist'}\n                onScroll={() =>\n                    this.debouncedOnScroll(this.props.selectedMessageType)\n                }\n                style={styles.canvas(this.props.wideview)}\n            >\n                {this.props.wideview && (\n                    <ListItemHeader\n                        notification={notification}\n                        displayExtendedChoices={\n                            this.props.displayExtendedChoices\n                        }\n                    >\n                        {children}\n                    </ListItemHeader>\n                )}\n                {children && children.length !== 0\n                    ? children.map(child => (\n                          <MessageConversationListItem\n                              key={child.id}\n                              messageConversation={child}\n                              wideview={this.props.wideview}\n                              selectedValue={selectedValue}\n                              notification={notification}\n                              displayExtendedChoices={\n                                  this.props.displayExtendedChoices\n                              }\n                          />\n                      ))\n                    : !this.props.selectedMessageType.loading && (\n                          <Subheader>\n                              {i18n.t(\n                                  `No ${messageType.displayName.toLowerCase()} messages`\n                              )}\n                          </Subheader>\n                      )}\n                {this.props.selectedMessageType.loading && (\n                    <div style={styles.loading}>\n                        <CircularProgress\n                            style={{ marginTop: '10px' }}\n                            color={theme.palette.primary1Color}\n                        />\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    messageTypes: state.messaging.messageTypes,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    messageConversations: state.messaging.messageConversations,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    selectedMessageType: state.messaging.selectedMessageType,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            loadMessageConversations,\n        },\n        null,\n        { pure: false }\n    )\n)(MessageConversationList)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport i18n from '@dhis2/d2-i18n'\nimport { Card, CardActions, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport TextField from 'material-ui/TextField'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport RadioButton from 'material-ui/RadioButton'\nimport {\n    sendMessage,\n    sendFeedbackMessage,\n    displaySnackMessage,\n    updateInputFields,\n    addAttachment,\n    removeAttachment,\n    cancelAttachment,\n    addRecipientByUserId,\n} from '../../actions'\nimport history from '../../utils/history'\nimport { supportsAttachments } from '../../utils/helpers'\nimport SuggestionField from '../Common/SuggestionField'\nimport AttachmentUploadButton from '../Attachments/AttachmentUploadButton'\nimport { NEGATIVE } from '../../constants/development'\nimport Attachments from '../Attachments/Attachments'\nimport { subheader } from '../../styles/style'\n\nconst styles = {\n    canvas: {\n        flex: '3 0',\n        margin: '10px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        height: 'calc(100vh - 110px)',\n    },\n    messageTypeField: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    messageType: { width: '300px', marginTop: '10px' },\n}\n\nclass CreateMessage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isMessageFeedback: false,\n        }\n    }\n\n    componentDidMount() {\n        const { addRecipientByUserId } = this.props\n        const { messageId, recipientId } = this.props.match.params\n\n        if (messageId === 'create' && recipientId) {\n            addRecipientByUserId(recipientId)\n        }\n    }\n\n    subjectUpdate = (event, newValue) => {\n        this.props.updateInputFields(\n            newValue,\n            this.props.input,\n            this.props.recipients\n        )\n    }\n\n    inputUpdate = (event, newValue) => {\n        this.props.updateInputFields(\n            this.props.subject,\n            newValue,\n            this.props.recipients\n        )\n    }\n\n    updateRecipients = recipients => {\n        this.props.updateInputFields(\n            this.props.subject,\n            this.props.input,\n            recipients\n        )\n    }\n\n    sendMessage = () => {\n        const messageTypeId = this.state.isMessageFeedback\n            ? 'TICKET'\n            : 'PRIVATE'\n        const messageType = this.props.messageTypes.find(\n            messageType => messageType.id === messageTypeId\n        )\n\n        if (this.state.isMessageFeedback) {\n            this.props.sendFeedbackMessage(messageType)\n            history.push('/TICKET')\n        } else {\n            const users = this.props.recipients.filter(r => r.type === 'user')\n            const userGroups = this.props.recipients.filter(\n                r => r.type === 'userGroup'\n            )\n            const organisationUnits = this.props.recipients.filter(\n                r => r.type === 'organisationUnit'\n            )\n\n            this.props.sendMessage({\n                users,\n                userGroups,\n                organisationUnits,\n                messageType,\n            })\n            history.push('/PRIVATE')\n        }\n    }\n\n    wipeInput = () => {\n        this.props.updateInputFields('', '', [])\n        this.props.attachments.length > 0 && this.props.clearAttachments()\n    }\n\n    handleDiscard = () => {\n        const message = i18n.t('Message discarded')\n        const snackType = NEGATIVE\n        const onSnackActionClick = () => history.push('/PRIVATE/create')\n        const onSnackRequestClose = () => this.wipeInput()\n\n        this.props.displaySnackMessage({\n            message,\n            onSnackActionClick,\n            onSnackRequestClose,\n            snackType,\n        })\n\n        history.push('/PRIVATE')\n    }\n\n    render() {\n        const disabled =\n            this.props.subject === '' ||\n            this.props.input === '' ||\n            (!this.state.isMessageFeedback &&\n                this.props.recipients.length === 0)\n\n        const discardDisabled =\n            this.props.subject === '' &&\n            this.props.input === '' &&\n            (!this.state.isMessageFeedback &&\n                this.props.recipients.length === 0)\n\n        return (\n            <div style={styles.canvas}>\n                <Subheader style={subheader}> {i18n.t('Create')}</Subheader>\n                <Card>\n                    <CardText>\n                        <SuggestionField\n                            style={{ margin: '0px' }}\n                            label={i18n.t('To')}\n                            disabled={this.state.isMessageFeedback}\n                            recipients={\n                                this.state.isMessageFeedback\n                                    ? [\n                                          {\n                                              id: 'id',\n                                              displayName: i18n.t(\n                                                  'Feedback recipient group'\n                                              ),\n                                          },\n                                      ]\n                                    : this.props.recipients\n                            }\n                            updateRecipients={this.updateRecipients}\n                            inputHeight={'100px'}\n                        />\n                        <div style={styles.messageTypeField}>\n                            <div style={styles.messageType}>\n                                <RadioButton\n                                    label={i18n.t('Private message')}\n                                    checked={!this.state.isMessageFeedback}\n                                    onCheck={() => {\n                                        this.setState({\n                                            isMessageFeedback: !this.state\n                                                .isMessageFeedback,\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div style={styles.messageType}>\n                                <RadioButton\n                                    label={i18n.t('Feedback message')}\n                                    checked={this.state.isMessageFeedback}\n                                    onCheck={() => {\n                                        this.setState({\n                                            isMessageFeedback: !this.state\n                                                .isMessageFeedback,\n                                        })\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <TextField\n                            floatingLabelText={i18n.t('Subject')}\n                            fullWidth\n                            value={this.props.subject}\n                            onChange={this.subjectUpdate}\n                        />\n                        <TextField\n                            key={'createMessage'}\n                            id={'createMessage'}\n                            rows={5}\n                            underlineShow={false}\n                            value={this.props.input}\n                            multiLine\n                            fullWidth\n                            floatingLabelText={i18n.t('Message')}\n                            onChange={this.inputUpdate}\n                        />\n                        {this.props.enableAttachments && (\n                            <Attachments\n                                dataDirection={'upload'}\n                                attachments={this.props.attachments}\n                                removeAttachment={attachment =>\n                                    this.props.removeAttachment(attachment.id)\n                                }\n                                cancelAttachment={this.props.cancelAttachment}\n                            />\n                        )}\n                        <CardActions style={{ paddingLeft: '0px' }}>\n                            <RaisedButton\n                                primary\n                                disabled={disabled}\n                                label={i18n.t('Send')}\n                                onClick={() => this.sendMessage()}\n                            />\n                            <FlatButton\n                                label={i18n.t('Discard')}\n                                disabled={discardDisabled}\n                                onClick={this.handleDiscard}\n                            />\n                            {this.props.enableAttachments && (\n                                <AttachmentUploadButton\n                                    addAttachment={attachment => {\n                                        this.props.addAttachment(attachment)\n                                    }}\n                                />\n                            )}\n                        </CardActions>\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    messageTypes: state.messaging.messageTypes,\n    subject: state.messaging.subject,\n    input: state.messaging.input,\n    recipients: state.messaging.recipients,\n    attachments: state.messaging.attachments,\n    enableAttachments: supportsAttachments(state.messaging.dhis2CoreVersion),\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            sendMessage,\n            sendFeedbackMessage,\n            displaySnackMessage,\n            updateInputFields,\n            addAttachment,\n            removeAttachment,\n            cancelAttachment,\n            addRecipientByUserId,\n        },\n        null,\n        { pure: false }\n    )\n)(CreateMessage)\n","import i18n from '@dhis2/d2-i18n';\nconst extendedChoices = {\n  STATUS: [{\n    key: 'NONE',\n    value: 'NONE',\n    primaryText: i18n.t('No status')\n  }, {\n    key: 'OPEN',\n    value: 'OPEN',\n    primaryText: i18n.t('Open')\n  }, {\n    key: 'PENDING',\n    value: 'PENDING',\n    primaryText: i18n.t('Pending')\n  }, {\n    key: 'INVALID',\n    value: 'INVALID',\n    primaryText: i18n.t('Invalid')\n  }, {\n    key: 'SOLVED',\n    value: 'SOLVED',\n    primaryText: i18n.t('Solved')\n  }],\n  PRIORITY: [{\n    key: 'NONE',\n    value: 'NONE',\n    primaryText: i18n.t('No priority')\n  }, {\n    key: 'HIGH',\n    value: 'HIGH',\n    primaryText: i18n.t('High')\n  }, {\n    key: 'MEDIUM',\n    value: 'MEDIUM',\n    primaryText: i18n.t('Medium')\n  }, {\n    key: 'LOW',\n    value: 'LOW',\n    primaryText: i18n.t('Low')\n  }]\n};\nexport default extendedChoices;","import React from 'react'\nimport Dialog from 'material-ui/Dialog'\nimport i18n from '@dhis2/d2-i18n'\nimport SuggestionField from './SuggestionField'\n\nconst AssignToDialog = ({\n    open,\n    onRequestClose,\n    updateMessageConversations,\n    messageType,\n    feedbackRecipientsId,\n}) => (\n    <Dialog\n        open={open}\n        onRequestClose={() => {\n            onRequestClose()\n        }}\n    >\n        <SuggestionField\n            onSuggestionClick={chip => {\n                updateMessageConversations([chip.id])\n                onRequestClose()\n            }}\n            searchOnlyUsers\n            searchOnlyFeedbackRecipients={messageType.id === 'TICKET'}\n            feedbackRecipientsId={feedbackRecipientsId}\n            recipients={[]}\n            key={'suggestionField'}\n            label={i18n.t('Assignee')}\n        />\n    </Dialog>\n)\n\nexport default AssignToDialog\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport FlatButton from 'material-ui/FlatButton'\nimport Dialog from 'material-ui/Dialog'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport ArrowDropRight from 'material-ui/svg-icons/navigation-arrow-drop-right'\nimport Assignment from 'material-ui-icons/Assignment'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport IconButton from 'material-ui/IconButton'\nimport Subheader from 'material-ui/Subheader'\nimport Divider from 'material-ui/Divider'\nimport Delete from 'material-ui-icons/Delete'\nimport MarkUnread from 'material-ui-icons/Markunread'\nimport Done from 'material-ui-icons/Done'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    clearCheckedIds,\n    clearSelectedMessageConversation,\n    deleteMessageConversations,\n    updateMessageConversations,\n    markMessageConversations,\n} from '../../actions'\nimport extendedChoices from '../../constants/extendedChoices'\nimport history from '../../utils/history'\nimport AssignToDialog from './AssignToDialog'\n\nconst multiSelectDisplayLimit = 99\n\nconst styles = {\n    canvas: {\n        width: '400px',\n        display: 'flex',\n    },\n    extendedChoices: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    nrSelected: {\n        padding: '0px 0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n}\n\nclass ToolbarExtendedChoicePicker extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            checkedItems: false,\n            dialogOpen: false,\n            assignToOpen: false,\n        }\n    }\n\n    getIds = () =>\n        this.props.selectedMessageConversation &&\n        this.props.checkedIds.length === 0\n            ? [this.props.selectedMessageConversation.id]\n            : this.props.checkedIds.map(id => id.id)\n\n    updateMessageConversation = (identifier, value) => {\n        const {\n            selectedMessageType: messageType,\n            selectedMessageConversation,\n        } = this.props\n        const messageConversationIds = this.getIds()\n\n        this.props.updateMessageConversations({\n            messageConversationIds,\n            identifier,\n            value,\n            messageType,\n            selectedMessageConversation,\n        })\n        this.props.checkedIds.length > 0 && this.props.clearCheckedIds()\n    }\n\n    markMessageConversations = mode => {\n        const ids = this.getIds()\n        this.props.markMessageConversations(\n            mode,\n            ids,\n            this.props.selectedMessageType\n        )\n        this.props.checkedIds.length > 0 && this.props.clearCheckedIds()\n    }\n\n    toggleDialog = () => {\n        this.setState({ dialogOpen: !this.state.dialogOpen })\n    }\n\n    render() {\n        const messageConversation = this.props.selectedMessageConversation\n        const multiSelect = this.props.checkedIds.length > 0\n        const display = multiSelect || messageConversation !== undefined\n\n        const actionButtons = [\n            <FlatButton\n                label={i18n.t('Cancel')}\n                primary\n                onClick={() => this.toggleDialog()}\n            />,\n            <FlatButton\n                label={i18n.t('Submit')}\n                primary\n                keyboardFocused\n                onClick={() => {\n                    this.props.deleteMessageConversations(\n                        this.getIds(),\n                        this.props.selectedMessageType\n                    )\n                    this.props.clearCheckedIds()\n                    this.toggleDialog()\n\n                    if (this.props.selectedMessageConversation) {\n                        this.props.clearSelectedMessageConversation()\n                        history.push(`/${this.props.selectedMessageType.id}`)\n                    }\n                }}\n            />,\n        ]\n\n        const displayNumberOfCheckedIds =\n            this.props.checkedIds.length > multiSelectDisplayLimit\n                ? `${multiSelectDisplayLimit}+`\n                : this.props.checkedIds.length\n\n        return display ? (\n            <div style={styles.canvas}>\n                <Dialog\n                    title={i18n.t(\n                        'Are you sure you want to delete selected message conversation(s)?'\n                    )}\n                    actions={actionButtons}\n                    modal={false}\n                    open={this.state.dialogOpen}\n                    onRequestClose={this.toggleDialog}\n                />\n                <AssignToDialog\n                    open={this.state.assignToOpen}\n                    onRequestClose={() =>\n                        this.setState({\n                            assignToOpen: !this.state.assignToOpen,\n                        })\n                    }\n                    updateMessageConversations={id =>\n                        this.updateMessageConversation('ASSIGNEE', id)\n                    }\n                    messageType={this.props.selectedMessageType}\n                    feedbackRecipientsId={this.props.feedbackRecipientsId}\n                />\n\n                <div style={styles.extendedChoices}>\n                    <IconButton\n                        tooltip={i18n.t('Delete selected')}\n                        onClick={() => {\n                            this.toggleDialog()\n                        }}\n                    >\n                        <Delete />\n                    </IconButton>\n\n                    <IconButton\n                        tooltip={i18n.t('Mark selected as unread')}\n                        onClick={() => {\n                            this.markMessageConversations('unread')\n                        }}\n                    >\n                        <MarkUnread />\n                    </IconButton>\n\n                    <IconButton\n                        tooltip={i18n.t('Mark selected as read')}\n                        onClick={() => {\n                            this.markMessageConversations('read')\n                        }}\n                    >\n                        <Done />\n                    </IconButton>\n                    {this.props.displayExtendedChoices && (\n                        <IconButton\n                            onClick={() =>\n                                this.setState({\n                                    assignToOpen: !this.state.assignToOpen,\n                                })\n                            }\n                            tooltip={i18n.t('Assign selected')}\n                        >\n                            <Assignment />\n                        </IconButton>\n                    )}\n                    {\n                        <IconMenu\n                            iconButtonElement={\n                                <IconButton>\n                                    <MoreVertIcon />\n                                </IconButton>\n                            }\n                            anchorOrigin={{\n                                horizontal: 'left',\n                                vertical: 'top',\n                            }}\n                            targetOrigin={{\n                                horizontal: 'left',\n                                vertical: 'top',\n                            }}\n                        >\n                            <MenuItem\n                                key={'markFollowUp'}\n                                value={'markFollowUp'}\n                                primaryText={i18n.t('Mark for followup')}\n                                onClick={() =>\n                                    this.updateMessageConversation(\n                                        'FOLLOW_UP',\n                                        true\n                                    )\n                                }\n                            />\n                            <MenuItem\n                                key={'clearFollowUp'}\n                                value={'clearFollowUp'}\n                                primaryText={i18n.t('Clear followup')}\n                                onClick={() =>\n                                    this.updateMessageConversation(\n                                        'FOLLOW_UP',\n                                        false\n                                    )\n                                }\n                            />\n                            {this.props.displayExtendedChoices && <Divider />}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    key={'clearAssigned'}\n                                    value={'clearAssigned'}\n                                    primaryText={i18n.t('Clear assignee')}\n                                    onClick={() =>\n                                        this.updateMessageConversation(\n                                            'ASSIGNEE',\n                                            undefined\n                                        )\n                                    }\n                                />\n                            )}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    primaryText={i18n.t('Set status')}\n                                    key={'setStatus'}\n                                    rightIcon={<ArrowDropRight />}\n                                    menuItems={extendedChoices.STATUS.map(\n                                        elem => (\n                                            <MenuItem\n                                                key={`${elem.key}_status`}\n                                                value={elem.value}\n                                                primaryText={elem.primaryText}\n                                                onClick={() =>\n                                                    this.updateMessageConversation(\n                                                        'STATUS',\n                                                        elem.key\n                                                    )\n                                                }\n                                            />\n                                        )\n                                    )}\n                                />\n                            )}\n                            {this.props.displayExtendedChoices && (\n                                <MenuItem\n                                    primaryText={i18n.t('Set priority')}\n                                    key={'setPriority'}\n                                    rightIcon={<ArrowDropRight />}\n                                    menuItems={extendedChoices.PRIORITY.map(\n                                        elem => (\n                                            <MenuItem\n                                                key={`${elem.key}_priority`}\n                                                value={elem.value}\n                                                primaryText={elem.primaryText}\n                                                onClick={() =>\n                                                    this.updateMessageConversation(\n                                                        'PRIORITY',\n                                                        elem.key\n                                                    )\n                                                }\n                                            />\n                                        )\n                                    )}\n                                />\n                            )}\n                        </IconMenu>\n                    }\n                </div>\n                {multiSelect && (\n                    <Subheader style={styles.nrSelected}>\n                        {`${displayNumberOfCheckedIds} ${i18n.t('selected')}`}\n                    </Subheader>\n                )}\n            </div>\n        ) : (\n            <div />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMessageType: state.messaging.selectedMessageType,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    checkedIds: state.messaging.checkedIds,\n    feedbackRecipientsId: state.messaging.feedbackRecipientsId,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            clearCheckedIds,\n            clearSelectedMessageConversation,\n            deleteMessageConversations,\n            updateMessageConversations,\n            markMessageConversations,\n        },\n        null,\n        { pure: false }\n    )\n)(ToolbarExtendedChoicePicker)\n","import React, { Component } from 'react'\nimport ViewFancy from 'material-ui-icons/ViewList'\nimport ViewList from 'material-ui-icons/ViewHeadline'\nimport FlatButton from 'material-ui/FlatButton'\nimport Paper from 'material-ui/Paper'\nimport CreateMessageIcon from 'material-ui-icons/Add'\nimport NavigationBack from 'material-ui-icons/ArrowBack'\nimport TextField from 'material-ui/TextField'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport Subheader from 'material-ui/Subheader'\nimport IconMenu from 'material-ui/IconMenu'\nimport IconButton from 'material-ui/IconButton'\nimport Checkbox from 'material-ui/Checkbox/Checkbox'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport i18n from '@dhis2/d2-i18n'\nimport history from '../../utils/history'\nimport theme from '../../styles/theme'\nimport extendedChoices from '../../constants/extendedChoices'\nimport ToolbarExtendedChoicePicker from './ToolbarExtendedChoicePicker'\nimport { debounce } from '../../utils/helpers'\n\nconst headerHeight = '48px'\nconst searchDelay = 300\n\nconst styles = {\n    canvas(checkedOptions) {\n        return {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            backgroundColor: checkedOptions\n                ? theme.palette.blue50\n                : theme.palette.accent2Color,\n            zIndex: 10,\n        }\n    },\n    checkedOption: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        minWidth: '200px',\n        margin: '6px 0',\n    },\n    filterControl: {\n        flex: 2,\n        height: headerHeight,\n        marginRight: 16,\n        maxWidth: 256,\n    },\n    rightHandCanvas: {\n        flex: '2 0',\n        display: 'flex',\n        paddingLeft: 16,\n    },\n    // IE11 has buggy support for `justifyContent: flex-end;`\n    // to achieve the same result we use a spacer div\n    ie11Spacer: {\n        flexGrow: 1,\n    },\n    iconMenu: {\n        width: '30px',\n        display: 'flex',\n    },\n}\n\nclass Toolbar extends Component {\n    state = {\n        lastMessageFilter: '',\n    }\n    debouncedSearch = debounce(this.search, searchDelay)\n\n    search(messageFilter) {\n        if (\n            this.props.selectedMessageType &&\n            this.state.lastMessageFilter !== messageFilter\n        ) {\n            this.props.loadMessageConversations(\n                this.props.selectedMessageType,\n                this.props.selectedMessageType.id\n            )\n            this.setState({ lastMessageFilter: messageFilter })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            prevProps.selectedMessageType &&\n            this.props.selectedMessageType.id !==\n                prevProps.selectedMessageType.id\n        ) {\n            this.debouncedSearch('')\n            this.props.messageFilter !== undefined &&\n                this.props.setFilter(undefined, 'MESSAGE')\n            this.props.statusFilter !== undefined &&\n                this.props.setFilter(undefined, 'STATUS')\n            this.props.priorityFilter !== undefined &&\n                this.props.setFilter(undefined, 'PRIORITY')\n            this.props.assignedToMeFilter &&\n                this.props.setFilter(false, 'ASSIGNED_TO_ME')\n            this.props.markedForFollowUpFilter &&\n                this.props.setFilter(false, 'MARKED_FOR_FOLLOWUP')\n            this.props.unreadFilter && this.props.setFilter(false, 'UNREAD')\n        }\n\n        if (\n            this.props.selectedMessageType !== undefined &&\n            !this.props.selectedMessageType.loading &&\n            (prevProps.statusFilter !== this.props.statusFilter ||\n                prevProps.priorityFilter !== this.props.priorityFilter ||\n                prevProps.assignedToMeFilter !==\n                    this.props.assignedToMeFilter ||\n                prevProps.markedForFollowUpFilter !==\n                    this.props.markedForFollowUpFilter ||\n                prevProps.unreadFilter !== this.props.unreadFilter ||\n                prevProps.selectedMessageType === undefined ||\n                prevProps.selectedMessageType.id !==\n                    this.props.selectedMessageType.id)\n        ) {\n            this.props.loadMessageConversations(\n                this.props.selectedMessageType,\n                this.props.selectedMessageType.id\n            )\n        }\n    }\n\n    render() {\n        const id = this.props.id\n        const displayExtendedChoices = this.props.displayExtendedChoices\n        const checkedOptions = this.props.checkedOptions\n\n        const displaySearch =\n            !this.props.wideview ||\n            (this.props.selectedMessageConversation === undefined &&\n                id !== 'create')\n\n        return (\n            <Paper style={styles.canvas(checkedOptions)}>\n                <div>\n                    {!checkedOptions && (\n                        <FlatButton\n                            style={styles.checkedOption}\n                            icon={<CreateMessageIcon />}\n                            onClick={() => history.push('/PRIVATE/create')}\n                            label={i18n.t('Compose')}\n                        />\n                    )}\n\n                    {checkedOptions && (\n                        <FlatButton\n                            style={styles.checkedOption}\n                            icon={<NavigationBack />}\n                            onClick={() => this.props.clearCheckedIds()}\n                            label={i18n.t('Deselect all')}\n                        />\n                    )}\n                </div>\n\n                <ToolbarExtendedChoicePicker\n                    displayExtendedChoices={displayExtendedChoices}\n                />\n\n                <div style={styles.rightHandCanvas}>\n                    <div style={styles.ie11Spacer} />\n                    {displayExtendedChoices &&\n                        displaySearch &&\n                        !checkedOptions && (\n                            <SelectField\n                                style={styles.filterControl}\n                                labelStyle={{\n                                    color:\n                                        this.props.statusFilter === undefined\n                                            ? 'lightGray'\n                                            : 'black',\n                                    top:\n                                        this.props.statusFilter === undefined\n                                            ? '-15px'\n                                            : '-2px',\n                                }}\n                                selectedMenuItemStyle={{\n                                    color: theme.palette.primary1Color,\n                                }}\n                                floatingLabelText={\n                                    this.props.statusFilter === undefined\n                                        ? i18n.t('Status')\n                                        : ''\n                                }\n                                floatingLabelStyle={{\n                                    top: '15px',\n                                }}\n                                iconStyle={{\n                                    top:\n                                        this.props.statusFilter === undefined\n                                            ? '-15px'\n                                            : '0px',\n                                }}\n                                value={this.props.statusFilter}\n                                onChange={(event, key, payload) => {\n                                    this.props.setFilter(\n                                        payload === null ? undefined : payload,\n                                        'STATUS'\n                                    )\n                                }}\n                            >\n                                <MenuItem\n                                    key={null}\n                                    value={null}\n                                    primaryText={''}\n                                />\n                                {extendedChoices.STATUS.map(elem => (\n                                    <MenuItem\n                                        key={elem.key}\n                                        value={elem.value}\n                                        primaryText={elem.primaryText}\n                                    />\n                                ))}\n                            </SelectField>\n                        )}\n\n                    {displayExtendedChoices &&\n                        displaySearch &&\n                        !checkedOptions && (\n                            <SelectField\n                                style={styles.filterControl}\n                                labelStyle={{\n                                    color:\n                                        this.props.priorityFilter === undefined\n                                            ? 'lightGray'\n                                            : 'black',\n                                    top:\n                                        this.props.priorityFilter === undefined\n                                            ? '-15px'\n                                            : '-2px',\n                                }}\n                                selectedMenuItemStyle={{\n                                    color: theme.palette.primary1Color,\n                                }}\n                                floatingLabelText={\n                                    this.props.priorityFilter === undefined\n                                        ? i18n.t('Priority')\n                                        : ''\n                                }\n                                floatingLabelStyle={{\n                                    top: '15px',\n                                }}\n                                iconStyle={{\n                                    top:\n                                        this.props.priorityFilter === undefined\n                                            ? '-15px'\n                                            : '0px',\n                                }}\n                                value={this.props.priorityFilter}\n                                onChange={(event, key, payload) => {\n                                    this.props.setFilter(\n                                        payload === null ? undefined : payload,\n                                        'PRIORITY'\n                                    )\n                                }}\n                            >\n                                <MenuItem\n                                    key={null}\n                                    value={null}\n                                    primaryText={''}\n                                />\n                                {extendedChoices.PRIORITY.map(elem => (\n                                    <MenuItem\n                                        key={elem.key}\n                                        value={elem.value}\n                                        primaryText={elem.primaryText}\n                                    />\n                                ))}\n                            </SelectField>\n                        )}\n\n                    {!checkedOptions && displaySearch && (\n                        <TextField\n                            style={styles.filterControl}\n                            fullWidth\n                            hintText={i18n.t('Search')}\n                            value={this.props.messageFilter || ''}\n                            onChange={(event, messageFilter) => {\n                                this.debouncedSearch(messageFilter)\n                                this.props.setFilter(messageFilter, 'MESSAGE')\n                            }}\n                            type=\"search\"\n                        />\n                    )}\n\n                    {!checkedOptions && displaySearch && (\n                        <IconMenu\n                            iconButtonElement={\n                                <IconButton>\n                                    <MoreVertIcon />\n                                </IconButton>\n                            }\n                            anchorOrigin={{\n                                horizontal: 'right',\n                                vertical: 'top',\n                            }}\n                            targetOrigin={{\n                                horizontal: 'right',\n                                vertical: 'top',\n                            }}\n                            style={styles.iconMenu}\n                            menuStyle={{ overflowX: 'hidden' }}\n                        >\n                            <Subheader style={{ padding: '0px 16px' }}>\n                                {i18n.t('Set filter')}\n                            </Subheader>\n                            {this.props.displayExtendedChoices && (\n                                <Checkbox\n                                    style={{ padding: '0px 16px' }}\n                                    key={'assignedToMeFilter'}\n                                    label={i18n.t('Assigned to me')}\n                                    checked={this.props.assignedToMeFilter}\n                                    onClick={() => {\n                                        this.props.setFilter(\n                                            !this.props.assignedToMeFilter,\n                                            'ASSIGNED_TO_ME'\n                                        )\n                                    }}\n                                />\n                            )}\n                            <Checkbox\n                                style={{ padding: '0px 16px' }}\n                                key={'markedForFollowUpFilter'}\n                                label={i18n.t('Marked for followup')}\n                                checked={this.props.markedForFollowUpFilter}\n                                onClick={() => {\n                                    this.props.setFilter(\n                                        !this.props.markedForFollowUpFilter,\n                                        'MARKED_FOR_FOLLOWUP'\n                                    )\n                                }}\n                            />\n                            <Checkbox\n                                style={{ padding: '0px 16px' }}\n                                key={'unreadFilter'}\n                                label={i18n.t('Unread messages')}\n                                checked={this.props.unreadFilter}\n                                onClick={() => {\n                                    this.props.setFilter(\n                                        !this.props.unreadFilter,\n                                        'UNREAD'\n                                    )\n                                }}\n                            />\n                        </IconMenu>\n                    )}\n                    <FlatButton\n                        style={{\n                            width: '50px',\n                            alignSelf: 'center',\n                        }}\n                        icon={\n                            !this.props.wideview ? <ViewList /> : <ViewFancy />\n                        }\n                        onClick={() => this.props.toogleWideview()}\n                    />\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default Toolbar\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport Subheader from 'material-ui/Subheader/Subheader'\nimport MailIcon from 'material-ui-icons/MailOutline'\nimport i18n from '@dhis2/d2-i18n'\nimport * as api from '../../api/api'\nimport {\n    loadMessageConversations,\n    setIsInFeedbackRecipientGroup,\n    clearCheckedIds,\n    setSelectedMessageConversation,\n    setSelectedMessageType,\n    clearSelectedMessageConversation,\n    updateInputFields,\n    setFilter,\n    setDisplayTimeDiff,\n    clearAttachments,\n    setDhis2CoreVersion,\n} from '../../actions'\nimport theme from '../../styles/theme'\nimport MessageConversation from '../MessageConversation/MessageConversation'\nimport SidebarList from '../List/SidebarList'\nimport MessageConversationList from '../List/MessageConversationList'\nimport CreateMessage from '../MessageConversation/CreateMessage'\nimport Toolbar from '../Common/Toolbar'\nimport { subheader } from '../../styles/style'\nimport './MessagingCenter.css'\n\nconst EXTENDED_CHOICES = ['TICKET', 'VALIDATION_RESULT']\nconst refreshTimerTotal = 300000 // 5 minutes\nconst refreshTimerInterval = 10000 // 10 seconds\n\nclass MessagingCenter extends Component {\n    constructor(props) {\n        super(props)\n\n        this.intervalId = null\n        this.state = {\n            autoRefresh: false,\n            checkedItems: false,\n            refreshTimer: refreshTimerTotal,\n            wideview: true,\n        }\n    }\n\n    componentDidMount() {\n        const selectedMessageType = this.props.match.params.messageType\n        const selectedId = this.props.match.params.messageId\n\n        this.props.setDhis2CoreVersion(this.context.d2.system.version.minor)\n\n        if (\n            selectedId &&\n            selectedId !== selectedMessageType &&\n            selectedId !== 'create'\n        ) {\n            const initialMessageConversation = { id: selectedId }\n            this.props.setSelectedMessageConversation(\n                initialMessageConversation\n            )\n        }\n\n        api.isInFeedbackRecipientGroup().then(result =>\n            this.props.setIsInFeedbackRecipientGroup(result)\n        )\n\n        this.props.messageTypes.map(messageType =>\n            this.props.loadMessageConversations(\n                messageType,\n                selectedMessageType\n            )\n        )\n\n        this.props.setDisplayTimeDiff()\n    }\n\n    componentDidUpdate() {\n        const selectedMessageType = this.props.match.params.messageType\n        const selectedId = this.props.match.params.messageId\n\n        if (\n            !this.props.settingSelectedMessageConversation &&\n            selectedId &&\n            selectedMessageType !== selectedId &&\n            selectedId !== 'create' &&\n            (this.props.selectedMessageConversation === undefined ||\n                selectedId !== this.props.selectedMessageConversation.id)\n        ) {\n            const initialMessageConversation = { id: selectedId }\n            this.props.setSelectedMessageConversation(\n                initialMessageConversation\n            )\n        }\n\n        if (\n            selectedMessageType === selectedId &&\n            selectedMessageType !== this.props.selectedMessageType.id\n        ) {\n            this.props.setSelectedMessageType(selectedMessageType)\n        }\n\n        if (\n            (selectedMessageType === selectedId || selectedId === 'create') &&\n            this.props.selectedMessageConversation !== undefined\n        ) {\n            this.props.clearSelectedMessageConversation()\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId)\n        }\n    }\n\n    setAutoRefresh = autoRefresh => {\n        // Cancel existing interval if it shouldn't autorefresh\n        if (!autoRefresh && this.intervalId) {\n            clearInterval(this.intervalId)\n            this.intervalId = null\n        }\n\n        if (autoRefresh) {\n            this.intervalId = setInterval(this.tick, refreshTimerInterval)\n        }\n\n        this.setState({\n            autoRefresh,\n            refreshTimer: refreshTimerTotal,\n        })\n    }\n\n    tick = () => {\n        const timerHasElapsed =\n            this.state.refreshTimer - refreshTimerInterval <= 0\n\n        if (timerHasElapsed) {\n            this.refresh()\n            this.setState({\n                refreshTimer: refreshTimerTotal,\n            })\n        } else {\n            this.setState(prevState => ({\n                refreshTimer: prevState.refreshTimer - refreshTimerInterval,\n            }))\n        }\n    }\n\n    refresh = () => {\n        this.props.messageTypes.map(messageType =>\n            this.props.loadMessageConversations(\n                messageType,\n                this.props.selectedMessageType\n            )\n        )\n\n        if (this.props.selectedMessageConversation) {\n            this.props.setSelectedMessageConversation(\n                this.props.selectedMessageConversation\n            )\n        }\n    }\n\n    toogleWideview = () => {\n        this.setState({ wideview: !this.state.wideview })\n    }\n\n    render() {\n        const id = this.props.match.params.messageId\n\n        const displayExtendedChoices =\n            (this.props.selectedMessageType\n                ? !!(\n                      EXTENDED_CHOICES.indexOf(\n                          this.props.selectedMessageType.id\n                      ) + 1\n                  )\n                : false) && this.props.isInFeedbackRecipientGroup\n\n        return (\n            <div className=\"messaging-center\">\n                <Toolbar\n                    {...this.props}\n                    id={id}\n                    wideview={this.state.wideview}\n                    displayExtendedChoices={displayExtendedChoices}\n                    toogleWideview={this.toogleWideview}\n                />\n                <div className=\"messaging-center__main-content\">\n                    <SidebarList\n                        {...this.props}\n                        drawerOpen={this.state.drawerOpen}\n                        messageTypes={this.props.messageTypes}\n                        autoRefresh={this.state.autoRefresh}\n                        refreshTimer={this.state.refreshTimer}\n                        setAutoRefresh={this.setAutoRefresh}\n                    />\n\n                    {this.props.selectedMessageConversation === undefined &&\n                        !(this.state.wideview && id === 'create') && (\n                            <MessageConversationList\n                                wideview={this.state.wideview}\n                                displayExtendedChoices={\n                                    displayExtendedChoices &&\n                                    this.state.wideview\n                                }\n                            />\n                        )}\n\n                    {id === 'create' && (\n                        <CreateMessage\n                            {...this.props}\n                            wideview={this.state.wideview}\n                        />\n                    )}\n\n                    {this.props.selectedMessageConversation !== undefined &&\n                        !this.state.wideview && (\n                            <MessageConversationList\n                                wideview={this.state.wideview}\n                                displayExtendedChoices={\n                                    displayExtendedChoices &&\n                                    this.state.wideview\n                                }\n                            />\n                        )}\n\n                    {this.props.selectedMessageConversation && id !== 'create'\n                        ? this.props.selectedMessageConversation !==\n                              undefined && (\n                              <MessageConversation\n                                  {...this.props}\n                                  messageConversation={\n                                      this.props.selectedMessageConversation\n                                  }\n                                  wideview={this.state.wideview}\n                                  disableLink\n                                  displayExtendedChoices={\n                                      displayExtendedChoices\n                                  }\n                              />\n                          )\n                        : !this.state.wideview &&\n                          id !== 'create' && (\n                              <div className=\"messaging-center__no-message-selected\">\n                                  <Subheader style={subheader}>\n                                      {i18n.t('Select a message')}\n                                  </Subheader>\n                                  <MailIcon\n                                      style={{\n                                          color: theme.palette.primary1Color,\n                                          width: 120,\n                                          height: 120,\n                                      }}\n                                  />\n                              </div>\n                          )}\n                </div>\n            </div>\n        )\n    }\n}\n\nMessagingCenter.contextTypes = {\n    d2: PropTypes.object,\n}\n\nconst mapStateToProps = state => ({\n    snackMessage: state.messaging.snackMessage,\n    messageTypes: state.messaging.messageTypes,\n    messageConversations: state.messaging.messageConversations,\n    messageFilter: state.messaging.messageFilter,\n    statusFilter: state.messaging.statusFilter,\n    priorityFilter: state.messaging.priorityFilter,\n    assignedToMeFilter: state.messaging.assignedToMeFilter,\n    markedForFollowUpFilter: state.messaging.markedForFollowUpFilter,\n    unreadFilter: state.messaging.unreadFilter,\n    selectedMessageType: state.messaging.selectedMessageType,\n    selectedMessageConversation: state.messaging.selectedMessageConversation,\n    settingSelectedMessageConversation:\n        state.messaging.settingSelectedMessageConversation,\n    checkedIds: state.messaging.checkedIds,\n    checkedOptions: state.messaging.checkedIds.length > 0,\n    loaded: state.messaging.loaded,\n    isInFeedbackRecipientGroup: state.messaging.isInFeedbackRecipientGroup,\n    attachments: state.messaging.attachments,\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            loadMessageConversations,\n            setIsInFeedbackRecipientGroup,\n            clearCheckedIds,\n            setSelectedMessageConversation,\n            setSelectedMessageType,\n            clearSelectedMessageConversation,\n            updateInputFields,\n            setFilter,\n            setDisplayTimeDiff,\n            clearAttachments,\n            setDhis2CoreVersion,\n        },\n        null,\n        { pure: false }\n    )\n)(MessagingCenter)\n","import { Router, Route } from 'react-router-dom'\nimport { Redirect } from 'react-router'\nimport React from 'react'\nimport MessagingCenter from '../MessagingCenter/MessagingCenter'\nimport history from '../../utils/history'\n\nconst Routes = () => (\n    <Router history={history}>\n        <div>\n            <Route\n                exact\n                path=\"/\"\n                component={() => <Redirect to=\"/PRIVATE\" />}\n            />\n            <Route\n                path=\"/:messageType/:messageId?/:recipientId?\"\n                component={MessagingCenter}\n            />\n        </div>\n    </Router>\n)\n\nexport default Routes\n","import React from 'react'\n\nimport CustomSnackBar from '../Common/CustomSnackBar'\nimport Routes from './Routes'\n\nconst App = () => (\n    <div>\n        <CustomSnackBar />\n        <Routes />\n    </div>\n)\n\nexport default App\n","const messageTypes = [{\n  id: 'PRIVATE',\n  displayName: 'Inbox',\n  unread: 0,\n  loaded: 0,\n  loading: false,\n  total: 0,\n  page: 1\n}, {\n  id: 'VALIDATION_RESULT',\n  displayName: 'Validation',\n  unread: 0,\n  loaded: 0,\n  loading: false,\n  total: 0,\n  page: 1\n}, {\n  id: 'TICKET',\n  displayName: 'Ticket',\n  unread: 0,\n  loaded: 0,\n  loading: false,\n  total: 0,\n  page: 1\n}, {\n  id: 'SYSTEM',\n  displayName: 'System',\n  unread: 0,\n  loaded: 0,\n  loading: false,\n  total: 0,\n  page: 1\n}];\nexport default messageTypes;","import i18n from '@dhis2/d2-i18n';\nimport log from 'loglevel';\nimport * as actions from '../constants/actions';\nimport messageTypes from '../constants/messageTypes';\nimport { POSITIVE, NEGATIVE, NEUTRAL } from '../constants/development';\nimport { findIndexOfId } from '../utils/helpers';\nexport const initialState = {\n  // Message conversation\n  messageConversations: {},\n  messageTypes,\n  selectedMessageType: undefined,\n  selectedMessageConversation: undefined,\n  settingSelectedMessageConversation: false,\n  checkedIds: [],\n  messageFilter: undefined,\n  statusFilter: undefined,\n  priorityFilter: undefined,\n  assignedToMeFilter: false,\n  markedForFollowUpFilter: false,\n  unreadFilter: false,\n  isInFeedbackRecipientGroup: false,\n  feedbackRecipientsId: undefined,\n  displayTimeDiff: 0,\n  // Input for create and reply\n  subject: '',\n  input: '',\n  recipients: [],\n  // Attachments\n  attachments: [],\n  // Snackbar\n  snackMessage: '',\n  onSnackActionClick: undefined,\n  onSnackRequestClose: undefined,\n  snackType: NEUTRAL\n};\n\nfunction messageReducer(state = initialState, action) {\n  const stateMessageTypes = state.messageTypes;\n  const oldAttachments = state.attachments;\n\n  switch (action.type) {\n    case actions.SET_DISPLAY_TIME_DIFF_SUCCESS:\n      return { ...state,\n        displayTimeDiff: action.payload\n      };\n\n    case actions.MESSAGE_CONVERSATIONS_LOAD_SUCCESS:\n      {\n        const replaceMessageType = stateMessageTypes.find(type => type.id === action.payload.messageType.id);\n        replaceMessageType.loaded = action.payload.messageConversations.length;\n        replaceMessageType.total = action.payload.pager.total;\n        replaceMessageType.unread = action.payload.nrOfUnread;\n        replaceMessageType.page = action.payload.pager.page;\n        replaceMessageType.loading = false;\n        messageTypes.splice([findIndexOfId(stateMessageTypes, replaceMessageType.id)], 1, replaceMessageType);\n        const setSelectedMessageType = action.payload.selectedMessageType === replaceMessageType.id && (action.payload.selectedMessageType === state.selectedMessageType || state.selectedMessageType === undefined);\n        return { ...state,\n          messageTypes,\n          messageConversations: { ...state.messageConversations,\n            [replaceMessageType.id]: action.payload.messageConversations\n          },\n          selectedMessageType: setSelectedMessageType ? replaceMessageType : state.selectedMessageType\n        };\n      }\n\n    case actions.MESSAGE_CONVERSATION_UPDATE_ERROR:\n      return { ...state,\n        snackMessage: action.payload.error.message,\n        snackType: NEGATIVE\n      };\n\n    case actions.MESSAGE_CONVERSATION_UPDATE_SUCCESS:\n      {\n        let snackMessage = '';\n\n        switch (action.payload.identifier) {\n          case 'STATUS':\n            snackMessage = i18n.t('Successfully updated status');\n            break;\n\n          case 'PRIORITY':\n            snackMessage = i18n.t('Successfully updated priority');\n            break;\n\n          case 'ASSIGNEE':\n            snackMessage = i18n.t('Successfully updated assignee');\n            break;\n\n          case 'FOLLOW_UP':\n            snackMessage = i18n.t('Successfully changed followup');\n            break;\n\n          default:\n            log.error('Unexpected identifier for updateMessageConversations success');\n            break;\n        }\n\n        return { ...state,\n          snackMessage,\n          snackType: POSITIVE\n        };\n      }\n\n    case actions.SEND_MESSAGE_ERROR:\n      return { ...state,\n        snackMessage: action.payload.error.message,\n        snackType: NEGATIVE\n      };\n\n    case actions.MESSAGE_CONVERSATIONS_DELETE_ERROR:\n      return { ...state,\n        snackMessage: action.payload.error.message,\n        snackType: NEGATIVE\n      };\n\n    case actions.MESSAGE_CONVERSATIONS_DELETE_SUCCESS:\n      return { ...state,\n        snackMessage: i18n.t('Successfully deleted message conversation(s)'),\n        snackType: POSITIVE\n      };\n\n    case actions.DISPLAY_SNACK_MESSAGE:\n      return { ...state,\n        snackMessage: action.payload.message,\n        snackType: action.payload.snackType,\n        onSnackActionClick: action.payload.onSnackActionClick,\n        onSnackRequestClose: action.payload.onSnackRequestClose\n      };\n\n    case actions.CLEAR_SNACK_MESSAGE:\n      return { ...state,\n        snackMessage: '',\n        snackType: NEUTRAL\n      };\n\n    case actions.SET_CHECKED:\n      {\n        const messageConversation = action.payload.messageConversation;\n        let checkedIds = state.checkedIds;\n\n        if (action.payload.selectedValue) {\n          checkedIds.push(messageConversation);\n        } else {\n          checkedIds = checkedIds.filter(element => element.id !== messageConversation.id);\n        }\n\n        return { ...state,\n          checkedIds\n        };\n      }\n\n    case actions.SET_ALL_CHECKED:\n      return { ...state,\n        checkedIds: action.payload.messageConversationIds\n      };\n\n    case actions.CLEAR_CHECKED:\n      return { ...state,\n        checkedIds: []\n      };\n\n    case actions.SET_SELECTED_MESSAGE_CONVERSATION_SUCCESS:\n      return { ...state,\n        selectedMessageConversation: action.payload.messageConversation,\n        settingSelectedMessageConversation: false\n      };\n\n    case actions.SET_SELECTED_MESSAGE_CONVERSATION:\n      return { ...state,\n        settingSelectedMessageConversation: true\n      };\n\n    case actions.CLEAR_SELECTED_MESSAGE_CONVERSATION:\n      return { ...state,\n        selectedMessageConversation: undefined\n      };\n\n    case actions.SET_SELECTED_MESSAGE_TYPE:\n      return { ...state,\n        checkedIds: [],\n        selectedMessageType: stateMessageTypes.find(type => type.id === action.payload.messageTypeId),\n        selectedMessageConversations: state.messageConversations[action.payload.messageTypeId],\n        selectedMessageConversation: undefined\n      };\n\n    case actions.UPDATE_INPUT_FIELDS:\n      return { ...state,\n        subject: action.payload.subject,\n        input: action.payload.input,\n        recipients: action.payload.recipients\n      };\n\n    case actions.ADD_RECIPIENT_BY_ID_SUCCESS:\n      return { ...state,\n        recipients: [...state.recipients, action.payload]\n      };\n\n    case actions.SET_FILTER:\n      return { ...state,\n        messageFilter: action.payload.filterType === 'MESSAGE' ? action.payload.filter : state.messageFilter,\n        statusFilter: action.payload.filterType === 'STATUS' ? action.payload.filter : state.statusFilter,\n        priorityFilter: action.payload.filterType === 'PRIORITY' ? action.payload.filter : state.priorityFilter,\n        assignedToMeFilter: action.payload.filterType === 'ASSIGNED_TO_ME' ? action.payload.filter : state.assignedToMeFilter,\n        markedForFollowUpFilter: action.payload.filterType === 'MARKED_FOR_FOLLOWUP' ? action.payload.filter : state.markedForFollowUpFilter,\n        unreadFilter: action.payload.filterType === 'UNREAD' ? action.payload.filter : state.unreadFilter\n      };\n\n    case actions.LOAD_MESSAGE_CONVERSATIONS:\n      {\n        const loadingMessageType = action.payload.messageType;\n        loadingMessageType.loading = true;\n\n        if (action.payload.loadMore) {\n          loadingMessageType.page++;\n        }\n\n        messageTypes[findIndexOfId(messageTypes, loadingMessageType.id)] = loadingMessageType; // TODO: This can probably be removed because action.payload.messageType === state.selectedMessageType\n\n        const selectedMessageType = state.selectedMessageType;\n\n        if (selectedMessageType) {\n          selectedMessageType.loading = true;\n\n          if (action.payload.loadMore) {\n            selectedMessageType.page++;\n          }\n        }\n\n        return { ...state,\n          messageTypes,\n          selectedMessageType\n        };\n      }\n\n    case actions.SET_IN_FEEDBACK_RECIPIENT_GROUP:\n      return { ...state,\n        isInFeedbackRecipientGroup: action.payload.isInFeedbackRecipientGroup.authorized,\n        feedbackRecipientsId: action.payload.isInFeedbackRecipientGroup.feedbackRecipientsId\n      };\n\n    case actions.ADD_ATTACHMENT_SUCCESS:\n      return { ...state,\n        attachments: state.attachments.map(attachment => attachment.name === action.payload.name ? {\n          id: action.payload.id,\n          name: attachment.name,\n          contentLength: attachment.contentLength,\n          loading: false\n        } : attachment)\n      };\n\n    case actions.ADD_ATTACHMENT_ERROR:\n      return { ...state,\n        attachments: oldAttachments.filter(attachment => attachment.id !== action.payload.attachmentId),\n        snackMessage: action.payload.error.message,\n        snackType: NEGATIVE\n      };\n\n    case actions.ADD_ATTACHMENT:\n      return { ...state,\n        attachments: state.attachments.concat({\n          name: action.payload.name,\n          contentLength: action.payload.size,\n          loading: true\n        })\n      };\n\n    case actions.REMOVE_ATTACHMENT:\n      return { ...state,\n        attachments: oldAttachments.filter(attachment => attachment.id !== action.payload.attachmentId)\n      };\n\n    case actions.CANCEL_ATTACHMENT:\n      return { ...state,\n        attachments: oldAttachments.filter(attachment => attachment.name !== action.payload.attachmentName)\n      };\n\n    case actions.CLEAR_ATTACHMENTS:\n      return { ...state,\n        attachments: []\n      };\n\n    case actions.SET_DHIS2_CORE_VERSION:\n      return { ...state,\n        dhis2CoreVersion: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default messageReducer;","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport messageReducer from './reducers/messageReducer';\nconst middlewares = [ReduxThunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger());\n}\n\nconst reducer = combineReducers({\n  messaging: messageReducer\n});\nexport default createStore(reducer, composeEnhancers(applyMiddleware(...middlewares)));","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport theme from '../../styles/theme'\n\nclass AddD2Context extends React.Component {\n    getChildContext = () => ({\n        d2: this.props.d2,\n    })\n\n    render = () => (\n        <MuiThemeProvider muiTheme={theme}>\n            {this.props.children}\n        </MuiThemeProvider>\n    )\n}\n\nAddD2Context.propTypes = {\n    children: PropTypes.object.isRequired,\n    d2: PropTypes.object,\n}\n\nAddD2Context.childContextTypes = {\n    d2: PropTypes.object,\n}\n\nexport default AddD2Context\n","import React from 'react'\nimport { useConfig } from '@dhis2/app-runtime'\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2'\nimport { CircularProgress } from 'material-ui'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport store from '../../store'\nimport AddD2Context from './AddD2Context'\n\nimport '../../index.css'\nimport 'typeface-roboto'\n\nconst AppWrapper = () => {\n    const { baseUrl } = useConfig()\n    const { d2 } = useD2({\n        d2Config: {\n            schemas: ['messageConversation'],\n            // This app prefers doing unversioned API calls\n            baseUrl: `${baseUrl}/api`,\n        },\n    })\n\n    if (!d2) {\n        return (\n            <AddD2Context d2={d2}>\n                <div className=\"page-loader-wrap\">\n                    <CircularProgress size={48} />\n                </div>\n            </AddD2Context>\n        )\n    }\n\n    return (\n        <Provider store={store}>\n            <AddD2Context d2={d2}>\n                <App />\n            </AddD2Context>\n        </Provider>\n    )\n}\n\nexport default AppWrapper\n"],"sourceRoot":""}